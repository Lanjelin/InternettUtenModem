<!doctype HTML public "-//W3O//DTD W3 HTML 2.0//EN">
<!-- This HTML file was created by texi2html 1.28
     from jargon.tex on 26 July 1996 -->
<HTML>
<HEAD>

<TITLE>The New Hacker's Dictionary  - = U =</TITLE>
</HEAD>
<BODY>
<P>Go to the <A HREF="JARGO~38.HTM" tppabs="http://www.ccil.org/jargon/jargon_35.html">previous</A>, <A HREF="JARGO~36.HTM" tppabs="http://www.ccil.org/jargon/jargon_37.html">next</A> section.<P>
<H2><A NAME="SEC43" HREF="JARGON~1.HTM#SEC43" tppabs="http://www.ccil.org/jargon/jargon_toc.html#SEC43">= U =</A></H2>



<A NAME=TAG1862><B>u-</B></A> /pref./ <P> Written shorthand for  <A HREF="JARGO~30.HTM#TAG1140" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1140">micro-</A>; techspeak when
   applied to metric units, jargon when used otherwise.  Derived from
   the Greek letter "mu", the first letter of "micro" (and which
   letter looks a lot like the English letter "u"). <P>
<A NAME=TAG1863><B>UBD</B></A> /U-B-D/ /n./ <P> [abbreviation for `User Brain Damage']
   An abbreviation used to close out trouble reports obviously due to
   utter cluelessness on the user's part.  Compare  <A HREF="JARGO~34.HTM#TAG1367" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1367">pilot error</A>;
   oppose  <A HREF="JARGO~34.HTM#TAG1340" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1340">PBD</A>; see also  <A HREF="JARGO~18.HTM#TAG194" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG194">brain-damaged</A>.  <P>
<A NAME=TAG1864><B>UN*X</B></A> /n./ <P> Used to refer to the Unix operating system (a
   trademark of AT&#38;T) in writing, but avoiding the need for the ugly
   Also used to refer to any or all varieties of Unixoid operating
   systems.  Ironically, lawyers now say that the requirement for the
   TM-postfix has no legal force, but the asterisk usage is
   entrenched anyhow.  It has been suggested that there may be a
   psychological connection to practice in certain religions
   (especially Judaism) in which the name of the deity is never
   written out in full, e.g., `YHWH' or `G--d' is used.  See also
    <A HREF="JARGO~23.HTM#TAG761" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG761">glob</A>.  <P>
<A NAME=TAG1865><B>undefined external reference</B></A> /excl./ <P> [Unix] A message from
   Unix's linker.  Used in speech to flag loose ends or dangling
   references in an argument or discussion.  <P>
<A NAME=TAG1866><B>under the hood</B></A> /adj./ <P> [hot-rodder talk] 1. Used to introduce the
   underlying implementation of a product (hardware, software, or
   idea).  Implies that the implementation is not intuitively obvious
   from the appearance, but the speaker is about to enable the
   listener to  <A HREF="JARGO~23.HTM#TAG807" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG807">grok</A> it.  "Let's now look under the hood to see
   how ...." 2. Can also imply that the implementation is much
   simpler than the appearance would indicate: "Under the hood, we
   are just fork/execing the shell."  3. Inside a chassis, as in
   "Under the hood, this baby has a 40MHz 68030!" <P>
<A NAME=TAG1867><B>undocumented feature</B></A> /n./ <P> See  <A HREF="JARGO~22.HTM#TAG597" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG597">feature</A>.  <P>
<A NAME=TAG1868><B>uninteresting</B></A> /adj./ <P> 1. Said of a problem that, although
    <A HREF="JARGO~29.HTM#TAG1266" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1266">nontrivial</A>, can be solved simply by throwing sufficient
   resources at it.  2. Also said of problems for which a solution
   would neither advance the state of the art nor be fun to design and
   code.  <P>
   Hackers regard uninteresting problems as intolerable wastes of
   time, to be solved (if at all) by lesser mortals.  <EM>Real</EM>
   hackers (see  <A HREF="JARGO~38.HTM#TAG1816" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1816">toolsmith</A>) generalize uninteresting problems
   enough to make them interesting and solve them -- thus solving the
   original problem as a special case (and, it must be admitted,
   occasionally turning a molehill into a mountain, or a mountain into
   a tectonic plate).  See  <A HREF="JARGO~40.HTM#TAG2000" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2000">WOMBAT</A>,  <A HREF="JARGO~46.HTM#TAG1637" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1637">SMOP</A>; compare  <A HREF="JARGO~38.HTM#TAG1826" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1826">toy problem</A>, oppose  <A HREF="JARGO~24.HTM#TAG946" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG946">interesting</A>.  <P>
<A NAME=TAG1869><B>Unix</B></A> /yoo'niks/ /n./ <P> [In the authors' words, "A weak pun
   on Multics"; very early on it was `UNICS'] (also `UNIX') An
   interactive time-sharing system invented in 1969 by Ken Thompson
   after Bell Labs left the Multics project, originally so he could
   play games on his scavenged PDP-7.  Dennis Ritchie, the inventor of
   C, is considered a co-author of the system.  The turning point in
   Unix's history came when it was reimplemented almost entirely in C
   during 1972--1974, making it the first source-portable OS.  Unix
   subsequently underwent mutations and expansions at the hands of
   many different people, resulting in a uniquely flexible and
   developer-friendly environment.  By 1991, Unix had become the most
   widely used multiuser general-purpose operating system in the
   world.  Many people consider this the most important victory yet of
   hackerdom over industry opposition (but see  <A HREF="JARGO~35.HTM#TAG1872" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1872">Unix weenie</A> and
    <A HREF="JARGO~35.HTM#TAG1871" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1871">Unix conspiracy</A> for an opposing point of view).  See
    <A HREF="JARGO~36.HTM#TAG1907" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1907">Version 7</A>,  <A HREF="JARGO~18.HTM#TAG216" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG216">BSD</A>,  <A HREF="JARGO~35.HTM#TAG1886" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1886">USG Unix</A>,  <A HREF="JARGO~28.HTM#TAG1044" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1044">Linux</A>.  <P>
   Some people are confused over whether this word is appropriately
   `UNIX' or `Unix'; both forms are common, and used interchangeably.
   Dennis Ritchie says that the `UNIX' spelling originally happened in
   CACM's 1974 paper "The UNIX Time-Sharing System" because "we
   had a new typesetter and  <A HREF="JARGO~38.HTM#TAG1837" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1837">troff</A> had just been invented and we
   were intoxicated by being able to produce small caps."  Later, dmr
   tried to get the spelling changed to `Unix' in a couple of Bell
   Labs papers, on the grounds that the word is not acronymic.  He
   failed, and eventually (his words) "wimped out" on the issue.
   So, while the trademark today is `UNIX', both capitalizations are
   grounded in ancient usage; the Jargon File uses `Unix' in deference
   to dmr's wishes. <P>
<A NAME=TAG1870><B>Unix brain damage</B></A> /n./ <P> Something that has to be done to break
   a network program (typically a mailer) on a non-Unix system so that
   it will interoperate with Unix systems.  The hack may qualify as
   `Unix brain damage' if the program conforms to published
   standards and the Unix program in question does not.  Unix brain
   damage happens because it is much easier for other (minority)
   systems to change their ways to match non-conforming behavior than
   it is to change all the hundreds of thousands of Unix systems out
   there.  <P>
   An example of Unix brain damage is a  <A HREF="JARGO~27.HTM#TAG1000" tppabs="http://www.ccil.org/jargon/jargon_26.html#TAG1000">kluge</A> in a mail server to 
   recognize bare line feed (the Unix newline) as an equivalent form
   to the Internet standard newline, which is a carriage return
   followed by a line feed.  Such things can make even a hardened
    <A HREF="JARGO~25.HTM#TAG970" tppabs="http://www.ccil.org/jargon/jargon_25.html#TAG970">jock</A> weep.  <P>
<A NAME=TAG1871><B>Unix conspiracy</B></A> /n./ <P> [ITS] According to a conspiracy theory
   long popular among  <A HREF="JARGO~24.HTM#TAG958" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG958">ITS</A> and  <A HREF="JARGO~38.HTM#TAG1820" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1820">TOPS-20</A> fans, Unix's growth is
   the result of a plot, hatched during the 1970s at Bell Labs, whose
   intent was to hobble AT&#38;T's competitors by making them dependent
   upon a system whose future evolution was to be under AT&#38;T's
   control.  This would be accomplished by disseminating an operating
   system that is apparently inexpensive and easily portable, but also
   relatively unreliable and insecure (so as to require continuing
   upgrades from AT&#38;T).  This theory was lent a substantial impetus in
   1984 by the paper referenced in the  <A HREF="JARGO~18.HTM#TAG52" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG52">back door</A> entry.
<P>
   In this view, Unix was designed to be one of the first computer
   viruses (see  <A HREF="JARGO~36.HTM#TAG1916" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1916">virus</A>) -- but a virus spread to computers
   indirectly by people and market forces, rather than directly
   through disks and networks.  Adherents of this `Unix virus' theory
   like to cite the fact that the well-known quotation "Unix is snake
   oil" was uttered by DEC president Kenneth Olsen shortly before DEC
   began actively promoting its own family of Unix workstations.
   (Olsen now claims to have been misquoted.) <P>
   [If there was ever such a conspiracy, it got thoroughly out of the
   plotters' control after 1990.  AT&#38;T sold its UNIX operation to
   Novell around the same time  <A HREF="JARGO~28.HTM#TAG1044" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1044">Linux</A> and other free-UNIX 
   distributions were beginning to make noise. --ESR] <P>
<A NAME=TAG1872><B>Unix weenie</B></A> /n./ <P> [ITS] 1. A derogatory play on `Unix wizard',
   common among hackers who use Unix by necessity but would prefer
   alternatives.  The implication is that although the person in
   question may consider mastery of Unix arcana to be a wizardly
   skill, the only real skill involved is the ability to tolerate (and
   the bad taste to wallow in) the incoherence and needless complexity
   that is alleged to infest many Unix programs.  "This shell script
   tries to parse its arguments in 69 bletcherous ways.  It must have
   been written by a real Unix weenie."  2. A derogatory term for
   anyone who engages in uncritical praise of Unix.  Often appearing
   in the context "stupid Unix weenie".  See  <A HREF="JARGO~40.HTM#TAG1957" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1957">Weenix</A>,  <A HREF="JARGO~35.HTM#TAG1871" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1871">Unix conspiracy</A>.  See also  <A HREF="JARGO~40.HTM#TAG1956" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1956">weenie</A>.  <P>
<A NAME=TAG1873><B>unixism</B></A> /n./ <P> A piece of code or a coding technique that
   depends on the protected multi-tasking environment with relatively
   low process-spawn overhead that exists on virtual-memory Unix
   systems.  Common  <A HREF="JARGO~35.HTM#TAG1873" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1873">unixism</A>s include: gratuitous use of
   <CODE>fork(2)</CODE>; the assumption that certain undocumented but
   well-known features of Unix libraries such as <CODE>stdio(3)</CODE> are
   supported elsewhere; reliance on  <A HREF="JARGO~32.HTM#TAG1284" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1284">obscure</A> side-effects of
   system calls (use of <CODE>sleep(2)</CODE> with a 0 argument to clue the
   scheduler that you're willing to give up your time-slice, for
   example); the assumption that freshly allocated memory is zeroed;
   and the assumption that fragmentation problems won't arise from
   never <CODE>free()</CODE>ing memory.  Compare  <A HREF="JARGO~36.HTM#TAG1900" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1900">vaxocentrism</A>; see also
    <A HREF="JARGO~29.HTM#TAG1243" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1243">New Jersey</A>.  <P>
<A NAME=TAG1874><B>unswizzle</B></A> /v./ <P> See  <A HREF="JARGO~46.HTM#TAG1734" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1734">swizzle</A>.
<P>
<A NAME=TAG1875><B>unwind the stack</B></A> /vi./ <P> 1. [techspeak] During the execution of
   a procedural language, one is said to `unwind the stack' from a
   called procedure up to a caller when one discards the stack frame
   and any number of frames above it, popping back up to the level of
   the given caller.  In C this is done with
   <CODE>longjmp</CODE>/<CODE>setjmp</CODE>, in LISP with <CODE>throw/catch</CODE>.
   See also  <A HREF="JARGO~46.HTM#TAG1631" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1631">smash the stack</A>.  2. People can unwind the stack as
   well, by quickly dealing with a bunch of problems: "Oh heck, let's
   do lunch.  Just a second while I unwind my stack." <P>
<A NAME=TAG1876><B>unwind-protect</B></A> /n./ <P> [MIT: from the name of a LISP operator] A
   task you must remember to perform before you leave a place or
   finish a project.  "I have an unwind-protect to call my advisor."  <P>
<A NAME=TAG1877><B>up</B></A> /adj./ <P> 1. Working, in order.  "The down escalator is
   up."  Oppose  <A HREF="JARGO~21.HTM#TAG503" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG503">down</A>.  2. `bring up': /vt./ To create a working
   version and start it.  "They brought up a down system."
   3. `come up' /vi./ To become ready for production use.  <P>
<A NAME=TAG1878><B>upload</B></A> /uhp'lohd/ /v./ <P> 1. [techspeak] To transfer programs
   or data over a digital communications link from a smaller or
   peripheral `client' system to a larger or central `host' one.
   A transfer in the other direction is, of course, called a
    <A HREF="JARGO~21.HTM#TAG504" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG504">download</A> (but see the note about ground-to-space comm under
   that entry).  2. [speculatively] To move the essential patterns and
   algorithms that make up one's mind from one's brain into a
   computer.  Those who are convinced that such patterns and
   algorithms capture the complete essence of the self view this
   prospect with pleasant anticipation.  <P>
<A NAME=TAG1879><B>upthread</B></A> /adv./ <P> Earlier in the discussion (see  <A HREF="JARGO~38.HTM#TAG1788" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1788">thread</A>),
   i.e., `above'.  "As Joe pointed out upthread, ..." See
   also  <A HREF="JARGO~22.HTM#TAG668" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG668">followup</A>.  <P>
<A NAME=TAG1880><B>urchin</B></A> /n./ <P> See  <A HREF="JARGO~30.HTM#TAG1195" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1195">munchkin</A>.  <P>
<A NAME=TAG1881><B>URL</B></A> /U-R-L/ or /erl/ /n./ <P> Uniform Resource Locator, an
   address widget that identifies a document or resource on the
   World Wide Web.  This entry is here primarily to record the fact
   that the term is commonly pronounced both /erl/, and /U-R-L/
   (the latter predominates in more formal contexts). <P>
<A NAME=TAG1882><B>Usenet</B></A> /yoos'net/ or /yooz'net/ /n./ <P> [from `Users'
   Network'; the original spelling was USENET, but the mixed-case form
   is now widely preferred] A distributed  <A HREF="JARGO~18.HTM#TAG87" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG87">bboard</A> (bulletin board)
   system supported mainly by Unix machines.  Originally implemented
   in 1979--1980 by Steve Bellovin, Jim Ellis, Tom Truscott, and Steve
   Daniel at Duke University, it has swiftly grown to become
   international in scope and is now probably the largest
   decentralized information utility in existence.  As of early 1996,
   it hosts over 10,000  <A HREF="JARGO~29.HTM#TAG1251" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1251">newsgroup</A>s and an average of over 500
   megabytes (the equivalent of several thousand paper pages) of new
   technical articles, news, discussion, chatter, and  <A HREF="JARGO~22.HTM#TAG641" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG641">flamage</A>
   every day.  <P>
   By the year the Internet hit the mainstream (1994) the original
   UUCP transport for Usenet was fading out of use (see  <A HREF="JARGO~35.HTM#TAG1888" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1888">UUCPNET</A>)
   -- almost all Usenet connections were over Internet links.  A lot
   of newbies and journalists began to refer to "Internet
   newsgroups" as though Usenet was and always had been just another
   Internet service.  This ignorance greatly annoys experienced
   Usenetters.  <P>
<A NAME=TAG1883><B>user</B></A> /n./ <P> 1. Someone doing `real work' with the computer,
   using it as a means rather than an end.  Someone who pays to use a
   computer.  See  <A HREF="JARGO~33.HTM#TAG1481" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1481">real user</A>.  2. A programmer who will believe
   anything you tell him.  One who asks silly questions.  [GLS
   observes: This is slightly unfair.  It is true that users ask
   questions (of necessity).  Sometimes they are thoughtful or deep.
   Very often they are annoying or downright stupid, apparently
   because the user failed to think for two seconds or look in the
   documentation before bothering the maintainer.]  See  <A HREF="JARGO~28.HTM#TAG1080" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1080">luser</A>.
   3. Someone who uses a program from the outside, however skillfully,
   without getting into the internals of the program.  One who reports
   bugs instead of just going ahead and fixing them.  <P>
   The general theory behind this term is that there are two classes
   of people who work with a program: there are implementors (hackers)
   and  <A HREF="JARGO~28.HTM#TAG1080" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1080">luser</A>s.  The users are looked down on by hackers to some
   extent because they don't understand the full ramifications of the
   system in all its glory.  (The few users who do are known as
   `real winners'.)  The term is a relative one: a skilled hacker
   may be a user with respect to some program he himself does not
   hack.  A LISP hacker might be one who maintains LISP or one who
   uses LISP (but with the skill of a hacker).  A LISP user is one who
   uses LISP, whether skillfully or not.  Thus there is some overlap
   between the two terms; the subtle distinctions must be resolved by
   context.  <P>
<A NAME=TAG1884><B>user-friendly</B></A> /adj./ <P> Programmer-hostile.  Generally used by
   hackers in a critical tone, to describe systems that hold the
   user's hand so obsessively that they make it painful for the more
   experienced and knowledgeable to get any work done.  See
    <A HREF="JARGO~30.HTM#TAG1132" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1132">menuitis</A>,  <A HREF="JARGO~21.HTM#TAG515" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG515">drool-proof paper</A>,  <A HREF="JARGO~30.HTM#TAG1086" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1086">Macintrash</A>,
    <A HREF="JARGO~35.HTM#TAG1885" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1885">user-obsequious</A>.  <P>
<A NAME=TAG1885><B>user-obsequious</B></A> /adj./ <P> Emphatic form of  <A HREF="JARGO~35.HTM#TAG1884" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1884">user-friendly</A>.
   Connotes a system so verbose, inflexible, and determinedly
   simple-minded that it is nearly unusable.  "Design a system any
   fool can use and only a fool will want to use it."  See  <A HREF="JARGO~40.HTM#TAG1975" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1975">WIMP environment</A>,  <A HREF="JARGO~30.HTM#TAG1086" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1086">Macintrash</A>.  <P>
<A NAME=TAG1886><B>USG Unix</B></A> /U-S-G yoo'niks/ /n./ <P> Refers to AT&#38;T Unix
   commercial versions after  <A HREF="JARGO~36.HTM#TAG1907" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1907">Version 7</A>, especially System III and
   System V releases 1, 2, and 3.  So called because during most of
   the lifespan of those versions AT&#38;T's support crew was called the
   `Unix Support Group'.  See  <A HREF="JARGO~18.HTM#TAG216" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG216">BSD</A>,  <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A>.  <P>
<A NAME=TAG1887><B>UTSL</B></A> // /n./ <P> [Unix] On-line acronym for `Use the Source, Luke' (a
   pun on Obi-Wan Kenobi's "Use the Force, Luke!" in "Star
   Wars") -- analogous to  <A HREF="JARGO~33.HTM#TAG1525" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1525">RTFS</A> (sense 1), but more polite.  This
   is a common way of suggesting that someone would be better off
   reading the source code that supports whatever feature is causing
   confusion, rather than making yet another futile pass through the
   manuals, or broadcasting questions on Usenet that haven't attracted
    <A HREF="JARGO~40.HTM#TAG1994" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1994">wizard</A>s to answer them.  <P>
   Once upon a time in  <A HREF="JARGO~20.HTM#TAG541" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG541">elder days</A>, everyone running Unix had
   source.  After 1978, AT&#38;T's policy tightened up, so this
   objurgation was in theory appropriately directed only at associates
   of some outfit with a Unix source license.  In practice, bootlegs
   of Unix source code (made precisely for reference purposes) were so
   ubiquitous that one could utter it at almost anyone on the network
   without concern.  <P>
   Nowadays, free Unix clones have become widely enough distributed
   that anyone can read source legally.  The most widely distributed
   is certainly Linux, with variants of the NET/2 and 4.4BSD
   distributions running second.  Cheap commercial Unixes with source
   such as BSD/OS are accelerating this trend.  <P>
<A NAME=TAG1888><B>UUCPNET</B></A> /n. obs./ <P> The store-and-forward network consisting of all
   the world's connected Unix machines (and others running some clone
   of the UUCP (Unix-to-Unix CoPy) software).  Any machine reachable
   only via a  <A HREF="JARGO~18.HTM#TAG71" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG71">bang path</A> is on UUCPNET.  This term has been
   rendered obsolescent by the spread of cheap Internet connections in
   the 1990s; the few remaining UUCP links are essentially slow
   channels to the Internet rather than an autonomous network.  See
    <A HREF="JARGO~29.HTM#TAG1240" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1240">network address</A>. <P>
<P>Go to the <A HREF="JARGO~38.HTM" tppabs="http://www.ccil.org/jargon/jargon_35.html">previous</A>, <A HREF="JARGO~36.HTM" tppabs="http://www.ccil.org/jargon/jargon_37.html">next</A> section.<P>
</BODY>
</HTML>
