<!doctype HTML public "-//W3O//DTD W3 HTML 2.0//EN">
<!-- This HTML file was created by texi2html 1.28
     from jargon.tex on 26 July 1996 -->
<HTML>
<HEAD>

<TITLE>The New Hacker's Dictionary  - = B =</TITLE>
</HEAD>
<BODY>
<P>Go to the <A HREF="JARGO~17.HTM" tppabs="http://www.ccil.org/jargon/jargon_16.html">previous</A>, <A HREF="JARGO~19.HTM" tppabs="http://www.ccil.org/jargon/jargon_18.html">next</A> section.<P>
<H2><A NAME="SEC24" HREF="JARGON~1.HTM#SEC24" tppabs="http://www.ccil.org/jargon/jargon_toc.html#SEC24">= B =</A></H2>



<A NAME=TAG52><B>back door</B></A> /n./ <P> A hole in the security of a system
   deliberately left in place by designers or maintainers.  The
   motivation for such holes is not always sinister; some operating
   systems, for example, come out of the box with privileged accounts
   intended for use by field service technicians or the vendor's
   maintenance programmers.  Syn.  <A HREF="JARGO~38.HTM#TAG1830" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1830">trap door</A>; may also be called a
   `wormhole'.  See also  <A HREF="JARGO~24.HTM#TAG955" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG955">iron box</A>,  <A HREF="JARGO~19.HTM#TAG365" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG365">cracker</A>,  <A HREF="JARGO~40.HTM#TAG2005" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2005">worm</A>,
    <A HREF="JARGO~28.HTM#TAG1061" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1061">logic bomb</A>.  <P>
   Historically, back doors have often lurked in systems longer than
   anyone expected or planned, and a few have become widely known.
   Ken Thompson's 1983 Turing Award lecture to the ACM admitted the
   existence of a back door in early Unix versions that may have
   qualified as the most fiendishly clever security hack of all time.
   In this scheme, the C compiler contained code that would recognize
   when the `login' command was being recompiled and insert some
   code recognizing a password chosen by Thompson, giving him entry to
   the system whether or not an account had been created for him.
<P>
   Normally such a back door could be removed by removing it from the
   source code for the compiler and recompiling the compiler.  But to
   recompile the compiler, you have to <EM>use</EM> the compiler -- so
   Thompson also arranged that the compiler would <EM>recognize when
   it was compiling a version of itself</EM>, and insert into the
   recompiled compiler the code to insert into the recompiled
   `login' the code to allow Thompson entry -- and, of course, the
   code to recognize itself and do the whole thing again the next time
   around!  And having done this once, he was then able to recompile
   the compiler from the original sources; the hack perpetuated itself
   invisibly, leaving the back door in place and active but with no
   trace in the sources.  <P>
   The talk that suggested this truly moby hack was published as
   "Reflections on Trusting Trust", "Communications of the ACM
   27", 8 (August 1984), pp. 761--763 (text available at
   <I><a href="../../tppmsgs/msgs9.htm#914" tppabs="http://www.acm.org/classics">http://www.acm.org/classics</a></I>).  Ken Thompson has since
   confirmed that this hack was implemented and that the Trojan Horse
   code did appear in the login binary of a Unix Support group
   machine.  Ken says the crocked compiler was never distributed.
   Your editor has heard two separate reports that suggest that the
   crocked login did make it out of Bell Labs, notably to BBN, and
   that it enabled at least one late-night login across the network by
   someone using the login name `kt'. <P>
<A NAME=TAG53><B>backbone cabal</B></A> /n./ <P> A group of large-site administrators who
   pushed through the  <A HREF="JARGO~23.HTM#TAG791" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG791">Great Renaming</A> and reined in the chaos of
    <A HREF="JARGO~35.HTM#TAG1882" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1882">Usenet</A> during most of the 1980s.  The cabal  <A HREF="JARGO~30.HTM#TAG1098" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1098">mailing list</A>
   disbanded in late 1988 after a bitter internal catfight.  <P>
<A NAME=TAG54><B>backbone site</B></A> /n./ <P> A key Usenet and email site; one that
   processes a large amount of third-party traffic, especially if it
   is the home site of any of the regional coordinators for the Usenet
   maps.  Notable backbone sites as of early 1993, when this sense of
   the term was beginning to pass out of general use due to wide
   availability of cheap Internet connections, included <I>uunet</I> and
   the mail machines at Rutgers University, UC Berkeley,  <A HREF="JARGO~21.HTM#TAG435" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG435">DEC</A>'s
   Western Research Laboratories, Ohio State University, and the
   University of Texas.  Compare  <A HREF="JARGO~33.HTM#TAG1505" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1505">rib site</A>,  <A HREF="JARGO~28.HTM#TAG1017" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1017">leaf site</A>. <P>
   [1996 update: This term is seldom heard any more.  The UUCP network
   world that gave it meaning has nearly disappeared; everyone is on
   the Internet now and network traffic is distributed in very
   different patterns. --ESR] 
<P>
<A NAME=TAG55><B>backgammon</B></A> <P> See  <A HREF="JARGO~18.HTM#TAG111" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG111">bignum</A> (sense 3),  <A HREF="JARGO~30.HTM#TAG1157" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1157">moby</A> (sense 4),
   and  <A HREF="JARGO~34.HTM#TAG1430" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1430">pseudoprime</A>.  <P>
<A NAME=TAG56><B>background</B></A> /n.,adj.,vt./ <P> To do a task `in background' is to
   do it whenever  <A HREF="JARGO~22.HTM#TAG680" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG680">foreground</A> matters are not claiming your
   undivided attention, and `to background' something means to
   relegate it to a lower priority.  "For now, we'll just print a
   list of nodes and links; I'm working on the graph-printing problem
   in background."  Note that this implies ongoing activity but at a
   reduced level or in spare time, in contrast to mainstream `back
   burner' (which connotes benign neglect until some future resumption
   of activity).  Some people prefer to use the term for processing
   that they have queued up for their unconscious minds (a tack that
   one can often fruitfully take upon encountering an obstacle in
   creative work).  Compare  <A HREF="JARGO~17.HTM#TAG28" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG28">amp off</A>,  <A HREF="JARGO~46.HTM#TAG1626" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1626">slopsucker</A>.  <P>
   Technically, a task running in background is detached from the
   terminal where it was started (and often running at a lower
   priority); oppose  <A HREF="JARGO~22.HTM#TAG680" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG680">foreground</A>.  Nowadays this term is primarily
   associated with  <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A>, but it appears to have been first used
   in this sense on OS/360.  <P>
<A NAME=TAG57><B>backspace and overstrike</B></A> /interj./ <P> Whoa!  Back up.  Used to
   suggest that someone just said or did something wrong.  Common
   among APL programmers.  <P>
<A NAME=TAG58><B>backward combatability</B></A> /bak'w*rd k*m-bat'*-bil'*-tee/ /n./ <P>
   [CMU, Tektronix: from `backward compatibility'] A property of
   hardware or software revisions in which previous protocols,
   formats, layouts, etc. are irrevocably discarded in favor of `new
   and improved' protocols, formats, and layouts, leaving the previous
   ones not merely deprecated but actively defeated.  (Too often, the
   old and new versions cannot definitively be distinguished, such
   that lingering instances of the previous ones yield crashes or
   other infelicitous effects, as opposed to a simple "version
   mismatch" message.)  A backwards compatible change, on the other
   hand, allows old versions to coexist without crashes or error
   messages, but too many major changes incorporating elaborate
   backwards compatibility processing can lead to extreme  <A HREF="JARGO~46.HTM#TAG1657" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1657">software bloat</A>.  See also  <A HREF="JARGO~22.HTM#TAG639" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG639">flag day</A>.  <P>
<A NAME=TAG59><B>BAD</B></A> /B-A-D/ /adj./ <P> [IBM: acronym, `Broken As Designed']
   Said of a program that is  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A> because of bad design and
   misfeatures rather than because of bugginess.  See  <A HREF="JARGO~40.HTM#TAG2004" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2004">working as designed</A>.  <P>
<A NAME=TAG60><B>Bad Thing</B></A> /n./ <P> [from the 1930 Sellar &#38; Yeatman parody "1066
   And All That"] Something that can't possibly result in
   improvement of the subject.  This term is always capitalized, as in
   "Replacing all of the 9600-baud modems with bicycle couriers would
   be a Bad Thing".  Oppose  <A HREF="JARGO~23.HTM#TAG778" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG778">Good Thing</A>.  British correspondents
   confirm that  <A HREF="JARGO~18.HTM#TAG60" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG60">Bad Thing</A> and  <A HREF="JARGO~23.HTM#TAG778" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG778">Good Thing</A> (and prob.
   therefore  <A HREF="JARGO~33.HTM#TAG1507" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1507">Right Thing</A> and  <A HREF="JARGO~40.HTM#TAG2012" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2012">Wrong Thing</A>) come from the book
   referenced in the etymology, which discusses rulers who were Good
   Kings but Bad Things.  This has apparently created a mainstream
   idiom on the British side of the pond.  <P>
<A NAME=TAG61><B>bag on the side</B></A> /n./ <P> [prob. originally related to a
   colostomy bag] An extension to an established hack that
   is supposed to add some functionality to the original.  Usually
   derogatory, implying that the original was being overextended and
   should have been thrown away, and the new product is ugly,
   inelegant, or bloated.  Also /v./ phrase, `to hang a bag on the side
   [of]'.  "C++?  That's just a bag on the side of C ...."
   "They want me to hang a bag on the side of the accounting
   system."<P>
<A NAME=TAG62><B>bagbiter</B></A> /bag'bi:t-*r/ /n./ <P> 1. Something, such as a program
   or a computer, that fails to work, or works in a remarkably clumsy
   manner.  "This text editor won't let me make a file with a line
   longer than 80 characters!  What a bagbiter!"  2. A person who has
   caused you some trouble, inadvertently or otherwise, typically by
   failing to program the computer properly.  Synonyms:  <A HREF="JARGO~28.HTM#TAG1068" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1068">loser</A>,
    <A HREF="JARGO~19.HTM#TAG382" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG382">cretin</A>,  <A HREF="JARGO~19.HTM#TAG285" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG285">chomper</A>.  3. `bite the bag' /vi./ To fail in some
   manner.  "The computer keeps crashing every five minutes."
   "Yes, the disk controller is really biting the bag."  The
   original loading of these terms was almost undoubtedly obscene,
   possibly referring to the scrotum, but in their current usage they
   have become almost completely sanitized.  <P>
   ITS's `lexiphage' program was the first and to date only known
   example of a program <EM>intended</EM> to be a bagbiter.  <P>
<A NAME=TAG63><B>bagbiting</B></A> /adj./ <P> Having the quality of a  <A HREF="JARGO~18.HTM#TAG62" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG62">bagbiter</A>.
   "This bagbiting system won't let me compute the factorial of a
   negative number."  Compare  <A HREF="JARGO~28.HTM#TAG1069" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1069">losing</A>,  <A HREF="JARGO~19.HTM#TAG383" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG383">cretinous</A>,
    <A HREF="JARGO~18.HTM#TAG136" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG136">bletcherous</A>, `barfucious' (under  <A HREF="JARGO~18.HTM#TAG78" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG78">barfulous</A>) and
   `chomping' (under  <A HREF="JARGO~19.HTM#TAG284" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG284">chomp</A>).  <P>
<A NAME=TAG64><B>balloonian variable</B></A> /n./ <P> [Commodore users; perh. a deliberate
   phonetic mangling of `boolean variable'?] Any variable that
   doesn't actually hold or control state, but must nevertheless be
   declared, checked, or set.  A typical balloonian variable started
   out as a flag attached to some environment feature that either
   became obsolete or was planned but never implemented.
   Compatibility concerns (or politics attached to same) may require
   that such a flag be treated as though it were  <A HREF="JARGO~28.HTM#TAG1052" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1052">live</A>.  <P>
<A NAME=TAG65><B>bamf</B></A> /bamf/ <P> 1. [from X-Men comics; originally "bampf"]
   /interj./ Notional sound made by a person or object teleporting in or
   out of the hearer's vicinity.  Often used in  <A HREF="JARGO~36.HTM#TAG1914" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1914">virtual reality</A>
   (esp.  <A HREF="JARGO~30.HTM#TAG1184" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1184">MUD</A>) electronic  <A HREF="JARGO~22.HTM#TAG679" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG679">fora</A> when a character wishes to
   make a dramatic entrance or exit.  2. The sound of magical
   transformation, used in virtual reality  <A HREF="JARGO~22.HTM#TAG679" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG679">fora</A> like MUDs. 3. In
   MUD circles, "bamf" is also used to refer to the act by which a
   MUD server sends a special notification to the MUD client to switch
   its connection to another server ("I'll set up the old site to
   just bamf people over to our new location.").  4. Used by MUDders
   on occasion in a more general sense related to sense 3, to refer to
   directing someone to another location or resource ("A user was
   asking about some technobabble so I bamfed them to
   http://www.ccil.org/jargon/jargon.html.")  <P>
<A NAME=TAG66><B>banana label</B></A> /n./ <P> The labels often used on the sides of
    <A HREF="JARGO~30.HTM#TAG1090" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1090">macrotape</A> reels, so called because they are shaped roughly
   like blunt-ended bananas.  This term, like macrotapes themselves,
   is still current but visibly headed for obsolescence.  <P>
<A NAME=TAG67><B>banana problem</B></A> /n./ <P> [from the story of the little girl who
   said "I know how to spell `banana', but I don't know when to
   stop"].  Not knowing where or when to bring a production to a
   close (compare  <A HREF="JARGO~22.HTM#TAG608" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG608">fencepost error</A>).  One may say `there is a
   banana problem' of an algorithm with poorly defined or incorrect
   termination conditions, or in discussing the evolution of a design
   that may be succumbing to featuritis (see also  <A HREF="JARGO~19.HTM#TAG379" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG379">creeping elegance</A>,  <A HREF="JARGO~19.HTM#TAG381" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG381">creeping featuritis</A>).  See item 176 under
    <A HREF="JARGO~26.HTM#TAG845" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG845">HAKMEM</A>, which describes a banana problem in a  <A HREF="JARGO~21.HTM#TAG483" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG483">Dissociated Press</A> implementation.  Also, see  <A HREF="JARGO~32.HTM#TAG1292" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1292">one-banana problem</A> for a
   superficially similar but unrelated usage.  <P>
<A NAME=TAG68><B>bandwidth</B></A> /n./ <P> 1. Used by hackers (in a generalization of its
   technical meaning) as the volume of information per unit time that
   a computer, person, or transmission medium can handle.  "Those are
   amazing graphics, but I missed some of the detail -- not enough
   bandwidth, I guess."  Compare  <A HREF="JARGO~28.HTM#TAG1075" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1075">low-bandwidth</A>.  2. Attention
   span.  3. On  <A HREF="JARGO~35.HTM#TAG1882" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1882">Usenet</A>, a measure of network capacity that is
   often wasted by people complaining about how items posted by others
   are a waste of bandwidth.  <P>
<A NAME=TAG69><B>bang</B></A> <P> 1. /n./ Common spoken name for <SAMP>`!'</SAMP> (ASCII 0100001),
   especially when used in pronouncing a  <A HREF="JARGO~18.HTM#TAG71" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG71">bang path</A> in spoken
   hackish.  In  <A HREF="JARGO~20.HTM#TAG541" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG541">elder days</A> this was considered a CMUish usage,
   with MIT and Stanford hackers preferring  <A HREF="JARGO~20.HTM#TAG572" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG572">excl</A> or  <A HREF="JARGO~46.HTM#TAG1603" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1603">shriek</A>;
   but the spread of Unix has carried `bang' with it (esp. via the
   term  <A HREF="JARGO~18.HTM#TAG71" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG71">bang path</A>) and it is now certainly the most common spoken
   name for <SAMP>`!'</SAMP>.  Note that it is used exclusively for
   non-emphatic written <SAMP>`!'</SAMP>; one would not say "Congratulations
   bang" (except possibly for humorous purposes), but if one wanted
   to specify the exact characters `foo!' one would speak "Eff oh oh
   bang".  See  <A HREF="JARGO~46.HTM#TAG1603" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1603">shriek</A>,  <A HREF="JARGO~17.HTM#TAG43" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG43">ASCII</A>.  2. /interj./ An exclamation
   signifying roughly "I have achieved enlightenment!", or "The
   dynamite has cleared out my brain!"  Often used to acknowledge
   that one has perpetrated a  <A HREF="JARGO~38.HTM#TAG1784" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1784">thinko</A> immediately after one has
   been called on it.  <P>
<A NAME=TAG70><B>bang on</B></A> /vt./ <P> To stress-test a piece of hardware or software:
   "I banged on the new version of the simulator all day yesterday
   and it didn't crash once.  I guess it is ready for release."  The
   term  <A HREF="JARGO~34.HTM#TAG1402" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1402">pound on</A> is synonymous.  <P>
<A NAME=TAG71><B>bang path</B></A> /n./ <P> An old-style UUCP electronic-mail address
   specifying hops to get from some assumed-reachable location to the
   addressee, so called because each  <A HREF="JARGO~26.HTM#TAG902" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG902">hop</A> is signified by a
    <A HREF="JARGO~18.HTM#TAG69" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG69">bang</A> sign.  Thus, for example, the path
   <I>...!bigsite!foovax!barbox!me</I> directs people to route their mail
   to machine <I>bigsite</I> (presumably a well-known location accessible
   to everybody) and from there through the machine <I>foovax</I> to the
   account of user <I>me</I> on <I>barbox</I>.  <P>
   In the bad old days of not so long ago, before autorouting mailers
   became commonplace, people often published compound bang addresses
   using the { } convention (see  <A HREF="JARGO~23.HTM#TAG761" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG761">glob</A>) to give paths from
   <EM>several</EM> big machines, in the hopes that one's correspondent
   might be able to get mail to one of them reliably (example:
   <I>...!{seismo, ut-sally, ihnp4}!rice!beta!gamma!me</I>).  Bang paths
   of 8 to 10 hops were not uncommon in 1981.  Late-night dial-up
   UUCP links would cause week-long transmission times.  Bang paths
   were often selected by both transmission time and reliability, as
   messages would often get lost.  See  <A HREF="JARGO~24.HTM#TAG948" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG948">Internet address</A>,
    <A HREF="JARGO~29.HTM#TAG1242" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1242">network, the</A>, and  <A HREF="JARGO~46.HTM#TAG1616" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1616">sitename</A>.  <P>
<A NAME=TAG72><B>banner</B></A> /n./ <P> 1. The title page added to printouts by most
   print spoolers (see  <A HREF="JARGO~46.HTM#TAG1686" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1686">spool</A>).  Typically includes user or
   account ID information in very large character-graphics capitals.
   Also called a `burst page', because it indicates where to burst
   (tear apart) fanfold paper to separate one user's printout from the
   next.  2. A similar printout generated (typically on multiple pages
   of fan-fold paper) from user-specified text, e.g., by a program
   such as Unix's <CODE>banner({1,6})</CODE>.  3. On interactive software,
   a first screen containing a logo and/or author credits and/or a
   copyright notice.  <P>
<A NAME=TAG73><B>bar</B></A> /bar/ /n./ <P> 1. The second  <A HREF="JARGO~30.HTM#TAG1136" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1136">metasyntactic variable</A>,
   after  <A HREF="JARGO~22.HTM#TAG670" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG670">foo</A> and before  <A HREF="JARGO~18.HTM#TAG86" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG86">baz</A>.  "Suppose we have two
   functions: FOO and BAR.  FOO calls BAR...." 2. Often
   appended to  <A HREF="JARGO~22.HTM#TAG670" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG670">foo</A> to produce  <A HREF="JARGO~22.HTM#TAG671" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG671">foobar</A>.  <P>
<A NAME=TAG74><B>bare metal</B></A> /n./ <P> 1. New computer hardware, unadorned with such
   snares and delusions as an  <A HREF="JARGO~32.HTM#TAG1300" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1300">operating system</A>, an  <A HREF="JARGO~26.HTM#TAG891" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG891">HLL</A>, or
   even assembler.  Commonly used in the phrase `programming on the
   bare metal', which refers to the arduous work of  <A HREF="JARGO~18.HTM#TAG115" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG115">bit bashing</A>
   needed to create these basic tools for a new machine.  Real
   bare-metal programming involves things like building boot proms and
   BIOS chips, implementing basic monitors used to test device
   drivers, and writing the assemblers that will be used to write the
   compiler back ends that will give the new machine a real
   development environment.  2. `Programming on the bare metal' is
   also used to describe a style of  <A HREF="JARGO~26.HTM#TAG850" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG850">hand-hacking</A> that relies on
   bit-level peculiarities of a particular hardware design, esp.
   tricks for speed and space optimization that rely on crocks such as
   overlapping instructions (or, as in the famous case described in
    <A HREF="JARGO~48.HTM#SEC56" tppabs="http://www.ccil.org/jargon/jargon_49.html#SEC56">The Story of Mel, a Real Programmer</A> (in Appendix A),
   interleaving of opcodes on a magnetic drum to minimize fetch delays
   due to the device's rotational latency).  This sort of thing has
   become less common as the relative costs of programming time and
   machine resources have changed, but is still found in heavily
   constrained environments such as industrial embedded systems, and
   in the code of hackers who just can't let go of that low-level
   control.  See  <A HREF="JARGO~33.HTM#TAG1478" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1478">Real Programmer</A>.
<P>
   In the world of personal computing, bare metal programming
   (especially in sense 1 but sometimes also in sense 2) is often
   considered a  <A HREF="JARGO~23.HTM#TAG778" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG778">Good Thing</A>, or at least a necessary evil
   (because these machines have often been sufficiently slow and
   poorly designed to make it necessary; see  <A HREF="JARGO~24.HTM#TAG926" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG926">ill-behaved</A>).
   There, the term usually refers to bypassing the BIOS or OS
   interface and writing the application to directly access device
   registers and machine addresses.  "To get 19.2 kilobaud on the
   serial port, you need to get down to the bare metal."  People who
   can do this sort of thing well are held in high regard.  <P>
<A NAME=TAG75><B>barf</B></A> /barf/ /n.,v./ <P> [from mainstream slang meaning `vomit']
   1. /interj./  Term of disgust.  This is the closest hackish
   equivalent of the Valspeak "gag me with a spoon". (Like, euwww!)
   See  <A HREF="JARGO~18.HTM#TAG135" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG135">bletch</A>.  2. /vi./ To say "Barf!" or emit some similar
   expression of disgust.  "I showed him my latest hack and he
   barfed" means only that he complained about it, not that he
   literally vomited.  3. /vi./ To fail to work because of
   unacceptable input, perhaps with a suitable error message, perhaps
   not.  Examples: "The division operation barfs if you try to divide
   by 0."  (That is, the division operation checks for an attempt to
   divide by zero, and if one is encountered it causes the operation
   to fail in some unspecified, but generally obvious, manner.) "The
   text editor barfs if you try to read in a new file before writing
   out the old one."  See  <A HREF="JARGO~19.HTM#TAG283" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG283">choke</A>,  <A HREF="JARGO~23.HTM#TAG726" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG726">gag</A>.  In Commonwealth
   Hackish, `barf' is generally replaced by `puke' or `vom'.
    <A HREF="JARGO~18.HTM#TAG75" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG75">barf</A> is sometimes also used as a  <A HREF="JARGO~30.HTM#TAG1136" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1136">metasyntactic variable</A>,
   like  <A HREF="JARGO~22.HTM#TAG670" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG670">foo</A> or  <A HREF="JARGO~18.HTM#TAG73" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG73">bar</A>.  <P>
<A NAME=TAG76><B>barfmail</B></A> /n./ <P> Multiple  <A HREF="JARGO~18.HTM#TAG184" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG184">bounce message</A>s accumulating to
   the level of serious annoyance, or worse.  The sort of thing that
   happens when an inter-network mail gateway goes down or wonky.  <P>
<A NAME=TAG77><B>barfulation</B></A> /bar`fyoo-lay'sh*n/ /interj./ <P> Variation of
    <A HREF="JARGO~18.HTM#TAG75" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG75">barf</A> used around the Stanford area.  An exclamation,
   expressing disgust.  On seeing some particularly bad code one might
   exclaim, "Barfulation!  Who wrote this, Quux?" <P>
<A NAME=TAG78><B>barfulous</B></A> /bar'fyoo-l*s/ /adj./ <P> (alt. `barfucious',
   /bar-fyoo-sh*s/) <P> Said of something that would make anyone
   barf, if only for esthetic reasons.  <P>
<A NAME=TAG79><B>barney</B></A> /n./ <P> In Commonwealth hackish, `barney' is to
    <A HREF="JARGO~22.HTM#TAG689" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG689">fred</A> (sense #1) as  <A HREF="JARGO~18.HTM#TAG73" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG73">bar</A> is to  <A HREF="JARGO~22.HTM#TAG670" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG670">foo</A>.  That is, people
   who commonly use `fred' as their first metasyntactic variable
   will often use `barney' second.  The reference is, of course, to
   Fred Flintstone and Barney Rubble in the Flintstones cartoons.  <P>
<A NAME=TAG80><B>baroque</B></A> /adj./ <P> Feature-encrusted; complex; gaudy; verging on
   excessive.  Said of hardware or (esp.) software designs, this has
   many of the connotations of  <A HREF="JARGO~20.HTM#TAG543" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG543">elephantine</A> or  <A HREF="JARGO~30.HTM#TAG1167" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1167">monstrosity</A>
   but is less extreme and not pejorative in itself.  "Metafont even
   has features to introduce random variations to its letterform
   output.  Now <EM>that</EM> is baroque!"  See also  <A HREF="JARGO~33.HTM#TAG1512" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1512">rococo</A>.  <P>
<A NAME=TAG81><B>BASIC</B></A> /bay'-sic/ /n./ <P> [acronym: Beginner's All-purpose Symbolic
   Instruction Code] A programming language, originally designed for
   Dartmouth's experimental timesharing system in the early 1960s,
   which has since become the leading cause of brain damage in
   proto-hackers.  Edsger W. Dijkstra observed in "Selected
   Writings on Computing: A Personal Perspective" that "It is
   practically impossible to teach good programming style to students
   that have had prior exposure to BASIC: as potential programmers
   they are mentally mutilated beyond hope of regeneration."  This is
   another case (like  <A HREF="JARGO~34.HTM#TAG1333" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1333">Pascal</A>) of the cascading lossage that
   happens when a language deliberately designed as an educational toy
   gets taken too seriously.  A novice can write short BASIC programs
   (on the order of 10-20 lines) very easily; writing anything longer
   (a) is very painful, and (b) encourages bad habits that will make
   it harder to use more powerful languages well.  This wouldn't be so
   bad if historical accidents hadn't made BASIC so common on low-end
   micros.  As it is, it ruins thousands of potential wizards a
   year. <P>
   [1995: Some languages called `BASIC' aren't quite this nasty any
   more, having acquired Pascal- and C-like procedures and control
   structures and shed their line numbers. --ESR]
<P>
<A NAME=TAG82><B>batch</B></A> /adj./ <P> 1. Non-interactive.  Hackers use this somewhat
   more loosely than the traditional technical definitions justify; in
   particular, switches on a normally interactive program that prepare
   it to receive non-interactive command input are often referred to
   as `batch mode' switches.  A `batch file' is a series of
   instructions written to be handed to an interactive program running
   in batch mode.  2. Performance of dreary tasks all at one sitting.
   "I finally sat down in batch mode and wrote out checks for all
   those bills; I guess they'll turn the electricity back on next
   week..." 3. `batching up': Accumulation of a number of small
   tasks that can be lumped together for greater efficiency.  "I'm
   batching up those letters to send sometime" "I'm batching up
   bottles to take to the recycling center."
<P>
<A NAME=TAG83><B>bathtub curve</B></A> /n./ <P> Common term for the curve (resembling an
   end-to-end section of one of those claw-footed antique bathtubs)
   that describes the expected failure rate of electronics with time:
   initially high, dropping to near 0 for most of the system's
   lifetime, then rising again as it `tires out'.  See also
    <A HREF="JARGO~18.HTM#TAG233" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG233">burn-in period</A>,  <A HREF="JARGO~24.HTM#TAG936" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG936">infant mortality</A>.  <P>
<A NAME=TAG84><B>baud</B></A> /bawd/ /n./ <P> [simplified from its technical meaning]
   /n./ Bits per second.  Hence kilobaud or Kbaud, thousands of bits per
   second.  The technical meaning is `level transitions per
   second'; this coincides with bps only for two-level modulation with
   no framing or stop bits.  Most hackers are aware of these nuances
   but blithely ignore them.  <P>
   Historical note: `baud' was originally a unit of telegraph
   signalling speed, set at one pulse per second.  It was proposed at
   the International Telegraph Conference of 1927, and named after
   J.M.E.  Baudot (1845--1903), the French engineer who constructed
   the first successful teleprinter.  <P>
<A NAME=TAG85><B>baud barf</B></A> /bawd barf/ /n./ <P> The garbage one gets on the
   monitor when using a modem connection with some protocol setting
   (esp. line speed) incorrect, or when someone picks up a voice
   extension on the same line, or when really bad line noise disrupts
   the connection.  Baud barf is not completely  <A HREF="JARGO~33.HTM#TAG1457" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1457">random</A>, by the
   way; hackers with a lot of serial-line experience can usually tell
   whether the device at the other end is expecting a higher or lower
   speed than the terminal is set to.  <EM>Really</EM> experienced ones
   can identify particular speeds.  <P>
<A NAME=TAG86><B>baz</B></A> /baz/ /n./ <P> 1. The third  <A HREF="JARGO~30.HTM#TAG1136" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1136">metasyntactic variable</A>
   "Suppose we have three functions: FOO, BAR, and BAZ.  FOO calls
   BAR, which calls BAZ...." (See also  <A HREF="JARGO~22.HTM#TAG718" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG718">fum</A>) 2. /interj./ A
   term of mild annoyance.  In this usage the term is often drawn out
   for 2 or 3 seconds, producing an effect not unlike the bleating of
   a sheep; /baaaaaaz/.  3. Occasionally appended to  <A HREF="JARGO~22.HTM#TAG670" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG670">foo</A> to
   produce `foobaz'.  <P>
   Earlier versions of this lexicon derived `baz' as a Stanford
   corruption of  <A HREF="JARGO~18.HTM#TAG73" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG73">bar</A>.  However, Pete Samson (compiler of the
    <A HREF="JARGO~38.HTM#TAG1806" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1806">TMRC</A> lexicon) reports it was already current when he joined TMRC
   in 1958.  He says "It came from "Pogo".  Albert the Alligator,
   when vexed or outraged, would shout `Bazz Fazz!' or `Rowrbazzle!'
   The club layout was said to model the (mythical) New England
   counties of Rowrfolk and Bassex (Rowrbazzle mingled with
   (Norfolk/Suffolk/Middlesex/Essex)."
<P>
<A NAME=TAG87><B>bboard</B></A> /bee'bord/ /n./ <P> [contraction of `bulletin board']
   1. Any electronic bulletin board; esp. used of  <A HREF="JARGO~18.HTM#TAG88" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG88">BBS</A> systems
   running on personal micros, less frequently of a Usenet
    <A HREF="JARGO~29.HTM#TAG1251" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1251">newsgroup</A> (in fact, use of this term for a newsgroup generally
   marks one either as a  <A HREF="JARGO~29.HTM#TAG1245" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1245">newbie</A> fresh in from the BBS world or as
   a real old-timer predating Usenet).  2. At CMU and other colleges
   with similar facilities, refers to campus-wide electronic bulletin
   boards.  3. The term `physical bboard' is sometimes used to refer
   to an old-fashioned, non-electronic cork-and-thumbtack memo board.
   At CMU, it refers to a particular one outside the CS Lounge.
<P>
   In either of senses 1 or 2, the term is usually prefixed by the
   name of the intended board (`the Moonlight Casino bboard' or
   `market bboard'); however, if the context is clear, the better-read
   bboards may be referred to by name alone, as in (at CMU) "Don't
   post for-sale ads on general".  <P>
<A NAME=TAG88><B>BBS</B></A> /B-B-S/ /n./ <P> [abbreviation, `Bulletin Board System'] An
   electronic bulletin board system; that is, a message database where
   people can log in and leave broadcast messages for others grouped
   (typically) into  <A HREF="JARGO~38.HTM#TAG1818" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1818">topic group</A>s.  Thousands of local BBS systems
   are in operation throughout the U.S., typically run by amateurs for
   fun out of their homes on MS-DOS boxes with a single modem line
   each.  Fans of Usenet and Internet or the big commercial
   timesharing bboards such as CompuServe and GEnie tend to consider
   local BBSes the low-rent district of the hacker culture, but they
   serve a valuable function by knitting together lots of hackers and
   users in the personal-micro world who would otherwise be unable to
   exchange code at all.  See also  <A HREF="JARGO~18.HTM#TAG87" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG87">bboard</A>.  <P>
<A NAME=TAG89><B>beam</B></A> /vt./ <P> [from Star Trek Classic's "Beam me up, Scotty!"]
   To transfer  <A HREF="JARGO~46.HTM#TAG1656" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1656">softcopy</A> of a file electronically; most often
   in combining forms such as `beam me a copy' or `beam that over
   to his site'.  Compare  <A HREF="JARGO~18.HTM#TAG133" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG133">blast</A>,  <A HREF="JARGO~46.HTM#TAG1643" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1643">snarf</A>,  <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A>.  <P>
<A NAME=TAG90><B>beanie key</B></A> /n./ <P> [Mac users] See  <A HREF="JARGO~19.HTM#TAG315" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG315">command key</A>.
<P>
<A NAME=TAG91><B>beep</B></A> /n.,v./ <P> Syn.  <A HREF="JARGO~22.HTM#TAG602" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG602">feep</A>.  This term is techspeak under
   MS-DOS and OS/2, and seems to be generally preferred among micro
   hobbyists.  <P>
<A NAME=TAG92><B>beige toaster</B></A> /n./ <P> A Macintosh. See  <A HREF="JARGO~38.HTM#TAG1812" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1812">toaster</A>; compare
    <A HREF="JARGO~30.HTM#TAG1086" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1086">Macintrash</A>,  <A HREF="JARGO~30.HTM#TAG1091" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1091">maggotbox</A>.  <P>
<A NAME=TAG93><B>bells and whistles</B></A> /n./ <P> [by analogy with the toyboxes on theater
   organs] Features added to a program or system to make it more
    <A HREF="JARGO~22.HTM#TAG654" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG654">flavorful</A> from a hacker's point of view, without necessarily
   adding to its utility for its primary function.  Distinguished from
    <A HREF="JARGO~19.HTM#TAG289" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG289">chrome</A>, which is intended to attract users.  "Now that we've
   got the basic program working, let's go back and add some bells and
   whistles."  No one seems to know what distinguishes a bell from a
   whistle.
<P>
<A NAME=TAG94><B>bells, whistles, and gongs</B></A> /n./ <P> A standard elaborated form of
    <A HREF="JARGO~18.HTM#TAG93" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG93">bells and whistles</A>; typically said with a pronounced and
   ironic accent on the `gongs'.  <P>
<A NAME=TAG95><B>benchmark</B></A> [techspeak] /n./ <P> An inaccurate measure of computer
   performance.  "In the computer industry, there are three kinds of
   lies: lies, damn lies, and benchmarks."  Well-known ones include
   Whetstone, Dhrystone, Rhealstone (see  <A HREF="JARGO~26.HTM#TAG822" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG822">h</A>), the Gabriel LISP
   benchmarks (see  <A HREF="JARGO~23.HTM#TAG725" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG725">gabriel</A>), the SPECmark suite, and LINPACK.
   See also  <A HREF="JARGO~30.HTM#TAG1084" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1084">machoflops</A>,  <A HREF="JARGO~30.HTM#TAG1151" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1151">MIPS</A>,  <A HREF="JARGO~46.HTM#TAG1634" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1634">smoke and mirrors</A>.  <P>
<A NAME=TAG96><B>Berkeley Quality Software</B></A> /adj./ <P> (often abbreviated `BQS')
   Term used in a pejorative sense to refer to software that was
   apparently created by rather spaced-out hackers late at night to
   solve some unique problem.  It usually has nonexistent, incomplete,
   or incorrect documentation, has been tested on at least two
   examples, and core dumps when anyone else attempts to use it.  This
   term was frequently applied to early versions of the <CODE>dbx(1)</CODE>
   debugger.  See also  <A HREF="JARGO~18.HTM#TAG98" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG98">Berzerkeley</A>.  <P>
   Note to British and Commonwealth readers: that's /berk'lee/, not
   /bark'lee/ as in British Received Pronunciation.  <P>
<A NAME=TAG97><B>berklix</B></A> /berk'liks/ /n.,adj./ <P> [contraction of `Berkeley
   Unix'] See  <A HREF="JARGO~18.HTM#TAG216" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG216">BSD</A>.  Not used at Berkeley itself.  May be more
   common among  <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>s attempting to sound like cognoscenti than
   among hackers, who usually just say `BSD'.  <P>
<A NAME=TAG98><B>Berzerkeley</B></A> /b*r-zer'klee/ /n./ <P> [from `berserk', via the
   name of a now-deceased record label] Humorous distortion of
   `Berkeley' used esp. to refer to the practices or products of the
    <A HREF="JARGO~18.HTM#TAG216" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG216">BSD</A> Unix hackers.  See  <A HREF="JARGO~46.HTM#TAG1657" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1657">software bloat</A>,
    <A HREF="JARGO~30.HTM#TAG1154" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1154">Missed'em-five</A>,  <A HREF="JARGO~18.HTM#TAG96" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG96">Berkeley Quality Software</A>.
<P>
   Mainstream use of this term in reference to the cultural and
   political peculiarities of UC Berkeley as a whole has been reported
   from as far back as the 1960s.  <P>
<A NAME=TAG99><B>beta</B></A> /bay't*/, /be't*/ or (Commonwealth) /bee't*/ /n./ <P>
   1. Mostly working, but still under test; usu. used with `in': `in
   beta'.  In the  <A HREF="JARGO~33.HTM#TAG1482" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1482">Real World</A>, systems (hardware or software)
   software often go through two stages of release testing: Alpha
   (in-house) and Beta (out-house?).  Beta releases are generally made
   to a group of lucky (or unlucky) trusted customers.
   2. Anything that is new and experimental.  "His girlfriend is in
   beta" means that he is still testing for compatibility and
   reserving judgment.  3. Flaky; dubious; suspect (since beta
   software is notoriously buggy).  <P>
   Historical note: More formally, to beta-test is to test a
   pre-release (potentially unreliable) version of a piece of software
   by making it available to selected (or self-selected) customers and
   users.  This term derives from early 1960s terminology for product
   cycle checkpoints, first used at IBM but later standard throughout
   the industry.  `Alpha Test' was the unit, module, or component test
   phase; `Beta Test' was initial system test.  These themselves came
   from earlier A- and B-tests for hardware.  The A-test was a
   feasibility and manufacturability evaluation done before any
   commitment to design and development.  The B-test was a
   demonstration that the engineering model functioned as specified.
   The C-test (corresponding to today's beta) was the B-test performed
   on early samples of the production design.  <P>
<A NAME=TAG100><B>BFI</B></A> /B-F-I/ /n./ <P> See  <A HREF="JARGO~18.HTM#TAG215" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG215">brute force and ignorance</A>.  Also
   encountered in the variants `BFMI', `brute force and
   <EM>massive</EM> ignorance' and `BFBI' `brute force and bloody
   ignorance'.  <P>
<A NAME=TAG101><B>bible</B></A> /n./ <P> 1. One of a small number of fundamental source
   books such as  <A HREF="JARGO~27.HTM#TAG1004" tppabs="http://www.ccil.org/jargon/jargon_26.html#TAG1004">Knuth</A> and  <A HREF="JARGO~27.HTM#TAG979" tppabs="http://www.ccil.org/jargon/jargon_26.html#TAG979">K&#38;R</A>.  2. The most detailed and
   authoritative reference for a particular language, operating
   system, or other complex software system.  <P>
<A NAME=TAG102><B>BiCapitalization</B></A> /n./ <P> The act said to have been performed on
   trademarks (such as  <A HREF="JARGO~34.HTM#TAG1401" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1401">PostScript</A>, NeXT,  <A HREF="JARGO~29.HTM#TAG1248" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1248">NeWS</A>, VisiCalc,
   FrameMaker, TK!solver, EasyWriter) that have been raised above the
   ruck of common coinage by nonstandard capitalization.  Too many
    <A HREF="JARGO~30.HTM#TAG1111" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1111">marketroid</A> types think this sort of thing is really cute, even
   the 2,317th time they do it.  Compare  <A HREF="JARGO~46.HTM#TAG1709" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1709">studlycaps</A>.  <P>
<A NAME=TAG103><B>B1FF</B></A> /bif/ [Usenet] (alt. `BIFF') /n./ <P> The most famous
    <A HREF="JARGO~34.HTM#TAG1429" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1429">pseudo</A>, and the prototypical  <A HREF="JARGO~29.HTM#TAG1245" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1245">newbie</A>.  Articles from B1FF
   feature all uppercase letters sprinkled liberally with bangs,
   typos, `cute' misspellings (EVRY BUDY LUVS GOOD OLD BIFF CUZ
   LIKE THIS!!!), use (and often misuse) of fragments of  <A HREF="JARGO~38.HTM#TAG1748" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1748">talk mode</A>
   abbreviations, a long  <A HREF="JARGO~46.HTM#TAG1607" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1607">sig block</A> (sometimes even a  <A HREF="JARGO~21.HTM#TAG502" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG502">doubled sig</A>), and unbounded naivete.  B1FF posts articles using his
   elder brother's VIC-20.  B1FF's location is a mystery, as his
   articles appear to come from a variety of sites.  However,
    <A HREF="JARGO~18.HTM#TAG122" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG122">BITNET</A> seems to be the most frequent origin.  The theory that
   B1FF is a denizen of BITNET is supported by B1FF's (unfortunately
   invalid) electronic mail address: B1FF@BIT.NET.  <P>
   [1993: Now It Can Be Told!  My spies inform me that B1FF was
   originally created by Joe Talmadge &#60;jat@cup.hp.com&#62;, also the
   author of the infamous and much-plagiarized "Flamer's Bible".
   The BIFF filter he wrote was later passed to Richard Sexton, who
   posted BIFFisms much more widely.  Versions have since been posted
   for the amusement of the net at large. --ESR]
<P>
<A NAME=TAG104><B>biff</B></A> /bif/ /vt./ <P> To notify someone of incoming mail.  From
   the BSD utility <CODE>biff(1)</CODE>, which was in turn named after a
   friendly golden Labrador who used to chase frisbees in the halls at
   UCB while 4.2BSD was in development.  There was a legend that it
   had a habit of barking whenever the mailman came, but the author of
   <CODE>biff</CODE> says this is not true.  No relation to  <A HREF="JARGO~18.HTM#TAG103" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG103">B1FF</A>. <P>
<A NAME=TAG105><B>Big Gray Wall</B></A> /n./ <P> What faces a  <A HREF="JARGO~36.HTM#TAG1918" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1918">VMS</A> user searching for
   documentation.  A full VMS kit comes on a pallet, the documentation
   taking up around 15 feet of shelf space before the addition of
   layered products such as compilers, databases, multivendor
   networking, and programming tools.  Recent (since VMS version 5)
   DEC documentation comes with gray binders; under VMS version 4 the
   binders were orange (`big orange wall'), and under version 3 they
   were blue.  See  <A HREF="JARGO~36.HTM#TAG1918" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1918">VMS</A>.  Often contracted to `Gray Wall'.  <P>
<A NAME=TAG106><B>big iron</B></A> /n./ <P> Large, expensive, ultra-fast computers.  Used
   generally of  <A HREF="JARGO~29.HTM#TAG1275" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1275">number-crunching</A> supercomputers such as Crays,
   but can include more conventional big commercial IBMish mainframes.
   Term of approval; compare  <A HREF="JARGO~26.HTM#TAG871" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG871">heavy metal</A>, oppose  <A HREF="JARGO~21.HTM#TAG474" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG474">dinosaur</A>.  <P>
<A NAME=TAG107><B>Big Red Switch</B></A> /n./ <P> [IBM] The power switch on a computer,
   esp. the `Emergency Pull' switch on an IBM  <A HREF="JARGO~30.HTM#TAG1100" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1100">mainframe</A> or the
   power switch on an IBM PC where it really is large and red.  "This
   !@%$%  <A HREF="JARGO~18.HTM#TAG124" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG124">bitty box</A> is hung again; time to hit the Big Red
   Switch."  Sources at IBM report that, in tune with the company's
   passion for  <A HREF="JARGO~38.HTM#TAG1805" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1805">TLA</A>s, this is often abbreviated as `BRS' (this
   has also become established on FidoNet and in the PC  <A HREF="JARGO~19.HTM#TAG299" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG299">clone</A>
   world).  It is alleged that the emergency pull switch on an IBM
   360/91 actually fired a non-conducting bolt into the main power
   feed; the BRSes on more recent mainframes physically drop a block
   into place so that they can't be pushed back in.  People get fired
   for pulling them, especially inappropriately (see also
    <A HREF="JARGO~30.HTM#TAG1163" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1163">molly-guard</A>).  Compare  <A HREF="JARGO~34.HTM#TAG1403" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1403">power cycle</A>,  <A HREF="JARGO~38.HTM#TAG1789" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1789">three-finger salute</A>,  <A HREF="JARGO~50.HTM#TAG2063" tppabs="http://www.ccil.org/jargon/jargon_42.html#TAG2063">120 reset</A>; see also  <A HREF="JARGO~46.HTM#TAG1556" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1556">scram switch</A>.  <P>
<A NAME=TAG108><B>Big Room, the</B></A> /n./ <P> The extremely large room with the blue
   ceiling and intensely bright light (during the day) or black
   ceiling with lots of tiny night-lights (during the night) found
   outside all computer installations.  "He can't come to the phone
   right now, he's somewhere out in the Big Room."
<P>
<A NAME=TAG109><B>big win</B></A> /n./ <P> Serendipity.  "Yes, those two physicists
   discovered high-temperature superconductivity in a batch of ceramic
   that had been prepared incorrectly according to their experimental
   schedule.  Small mistake; big win!" See  <A HREF="JARGO~40.HTM#TAG1977" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1977">win big</A>.  <P>
<A NAME=TAG110><B>big-endian</B></A> /adj./ <P> [From Swift's "Gulliver's Travels" via
   the famous paper "On Holy Wars and a Plea for Peace" by Danny
   Cohen, USC/ISI IEN 137, dated April 1, 1980] 1. Describes a
   computer architecture in which, within a given multi-byte numeric
   representation, the most significant byte has the lowest address
   (the word is stored `big-end-first').  Most processors,
   including the IBM 370 family, the  <A HREF="JARGO~34.HTM#TAG1345" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1345">PDP-10</A>, the Motorola
   microprocessor families, and most of the various RISC designs
   current in late 1995, are big-endian.  Big-endian byte order is
   also sometimes called `network order'. See  <A HREF="JARGO~28.HTM#TAG1051" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1051">little-endian</A>,
    <A HREF="JARGO~30.HTM#TAG1148" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1148">middle-endian</A>,  <A HREF="JARGO~29.HTM#TAG1277" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1277">NUXI problem</A>,  <A HREF="JARGO~46.HTM#TAG1729" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1729">swab</A>.  2. An
    <A HREF="JARGO~24.HTM#TAG948" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG948">Internet address</A> the wrong way round.  Most of the world
   follows the Internet standard and writes email addresses starting
   with the name of the computer and ending up with the name of the
   country.  In the U.K. the Joint Networking Team had decided to do
   it the other way round before the Internet domain standard was
   established.  Most gateway sites have  <A HREF="JARGO~17.HTM#TAG7" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG7">ad-hockery</A> in their
   mailers to handle this, but can still be confused.  In particular,
   the address <I>me@uk.ac.bris.pys.as</I> could be interpreted in
   JANET's big-endian way as one in the U.K. (domain <I>uk</I>) or in the
   standard little-endian way as one in the domain <I>as</I> (American
   Samoa) on the opposite side of the world.  <P>
<A NAME=TAG111><B>bignum</B></A> /big'nuhm/ /n./ <P> [orig. from MIT MacLISP]
   1. [techspeak] A multiple-precision computer representation for
   very large integers.  2. More generally, any very large number.
   "Have you ever looked at the United States Budget?  There's
   bignums for you!"  3. [Stanford] In backgammon, large numbers on
   the dice especially a roll of double fives or double sixes (compare
    <A HREF="JARGO~30.HTM#TAG1157" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1157">moby</A>, sense 4).  See also  <A HREF="JARGO~20.HTM#TAG540" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG540">El Camino Bignum</A>.  <P>
   Sense 1 may require some explanation.  Most computer languages
   provide a kind of data called `integer', but such computer
   integers are usually very limited in size; usually they must be
   smaller than than @Math{2^(31)} (2,147,483,648) or (on a
    <A HREF="JARGO~18.HTM#TAG124" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG124">bitty box</A>) @Math{2^(15)} (32,768).  If you want to work
   with numbers larger than that, you have to use floating-point
   numbers, which are usually accurate to only six or seven decimal
   places.  Computer languages that provide bignums can perform exact
   calculations on very large numbers, such as 1000! (the factorial
   of 1000, which is 1000 times 999 times 998 times ... times 2
   times 1).  For example, this value for 1000!  was computed by the
   MacLISP system using bignums:
<P>
<PRE>
40238726007709377354370243392300398571937486421071
46325437999104299385123986290205920442084869694048
00479988610197196058631666872994808558901323829669
94459099742450408707375991882362772718873251977950
59509952761208749754624970436014182780946464962910
56393887437886487337119181045825783647849977012476
63288983595573543251318532395846307555740911426241
74743493475534286465766116677973966688202912073791
43853719588249808126867838374559731746136085379534
52422158659320192809087829730843139284440328123155
86110369768013573042161687476096758713483120254785
89320767169132448426236131412508780208000261683151
02734182797770478463586817016436502415369139828126
48102130927612448963599287051149649754199093422215
66832572080821333186116811553615836546984046708975
60290095053761647584772842188967964624494516076535
34081989013854424879849599533191017233555566021394
50399736280750137837615307127761926849034352625200
01588853514733161170210396817592151090778801939317
81141945452572238655414610628921879602238389714760
88506276862967146674697562911234082439208160153780
88989396451826324367161676217916890977991190375403
12746222899880051954444142820121873617459926429565
81746628302955570299024324153181617210465832036786
90611726015878352075151628422554026517048330422614
39742869330616908979684825901254583271682264580665
26769958652682272807075781391858178889652208164348
34482599326604336766017699961283186078838615027946
59551311565520360939881806121385586003014356945272
24206344631797460594682573103790084024432438465657
24501440282188525247093519062092902313649327349756
55139587205596542287497740114133469627154228458623
77387538230483865688976461927383814900140767310446
64025989949022222176590433990188601856652648506179
97023561938970178600408118897299183110211712298459
01641921068884387121855646124960798722908519296819
37238864261483965738229112312502418664935314397013
74285319266498753372189406942814341185201580141233
44828015051399694290153483077644569099073152433278
28826986460278986432113908350621709500259738986355
42771967428222487575867657523442202075736305694988
25087968928162753848863396909959826280956121450994
87170124451646126037902930912088908694202851064018
21543994571568059418727489980942547421735824010636
77404595741785160829230135358081840096996372524230
56085590370062427124341690900415369010593398383577
79394109700277534720000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000
000000000000000000.
</PRE>
<P>
<A NAME=TAG112><B>bigot</B></A> /n./ <P> A person who is religiously attached to a
   particular computer, language, operating system, editor, or other
   tool (see  <A HREF="JARGO~33.HTM#TAG1495" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1495">religious issues</A>).  Usually found with a specifier;
   thus, `cray bigot', `ITS bigot', `APL bigot', `VMS bigot',
   `Berkeley bigot'.  Real bigots can be distinguished from mere
   partisans or zealots by the fact that they refuse to learn
   alternatives even when the march of time and/or technology is
   threatening to obsolete the favored tool.  It is truly said "You
   can tell a bigot, but you can't tell him much."  Compare
    <A HREF="JARGO~40.HTM#TAG1956" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1956">weenie</A>.  <P>
<A NAME=TAG113><B>bit</B></A> /n./ <P> [from the mainstream meaning and `Binary digIT']
   1. [techspeak] The unit of information; the amount of information
   obtained by asking a yes-or-no question for which the two outcomes
   are equally probable.  2. [techspeak] A computational quantity that
   can take on one of two values, such as true and false or 0 and 1.
   3. A mental flag: a reminder that something should be done
   eventually.  "I have a bit set for you."  (I haven't seen you for
   a while, and I'm supposed to tell or ask you something.)  4. More
   generally, a (possibly incorrect) mental state of belief.  "I have
   a bit set that says that you were the last guy to hack on EMACS."
   (Meaning "I think you were the last guy to hack on EMACS, and what
   I am about to say is predicated on this, so please stop me if this
   isn't true.") <P>
   "I just need one bit from you" is a polite way of indicating that
   you intend only a short interruption for a question that can
   presumably be answered yes or no.  <P>
   A bit is said to be `set' if its value is true or 1, and
   `reset' or `clear' if its value is false or 0.  One speaks of
   setting and clearing bits.  To  <A HREF="JARGO~38.HTM#TAG1814" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1814">toggle</A> or `invert' a bit is
   to change it, either from 0 to 1 or from 1 to 0.  See also
    <A HREF="JARGO~22.HTM#TAG638" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG638">flag</A>,  <A HREF="JARGO~38.HTM#TAG1835" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1835">trit</A>,  <A HREF="JARGO~30.HTM#TAG1161" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1161">mode bit</A>.  <P>
   The term `bit' first appeared in print in the computer-science
   sense in 1949, and seems to have been coined by early computer
   scientist John Tukey.  Tukey records that it evolved over a lunch
   table as a handier alternative to `bigit' or `binit'.  <P>
<A NAME=TAG114><B>bit bang</B></A> /n./ <P> Transmission of data on a serial line, when
   accomplished by rapidly tweaking a single output bit, in software,
   at the appropriate times.  The technique is a simple loop with
   eight OUT and SHIFT instruction pairs for each byte.  Input is more
   interesting.  And full duplex (doing input and output at the same
   time) is one way to separate the real hackers from the
    <A HREF="JARGO~40.HTM#TAG1937" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1937">wannabee</A>s.  <P>
   Bit bang was used on certain early models of Prime computers,
   presumably when UARTs were too expensive, and on archaic Z80 micros
   with a Zilog PIO but no SIO.  In an interesting instance of the
    <A HREF="JARGO~19.HTM#TAG411" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG411">cycle of reincarnation</A>, this technique returned to use in the
   early 1990s on some RISC architectures because it consumes such
   an infinitesimal part of the processor that it actually makes sense
   not to have a UART.  Compare  <A HREF="JARGO~19.HTM#TAG411" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG411">cycle of reincarnation</A>. <P>
<A NAME=TAG115><B>bit bashing</B></A> /n./ <P> (alt. `bit diddling' or  <A HREF="JARGO~18.HTM#TAG119" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG119">bit twiddling</A>) Term used to describe any of several kinds of low-level
   programming characterized by manipulation of  <A HREF="JARGO~18.HTM#TAG113" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG113">bit</A>,  <A HREF="JARGO~22.HTM#TAG638" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG638">flag</A>,
    <A HREF="JARGO~29.HTM#TAG1278" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1278">nybble</A>, and other smaller-than-character-sized pieces of data;
   these include low-level device control, encryption algorithms,
   checksum and error-correcting codes, hash functions, some flavors
   of graphics programming (see  <A HREF="JARGO~18.HTM#TAG121" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG121">bitblt</A>), and assembler/compiler
   code generation.  May connote either tedium or a real technical
   challenge (more usually the former).  "The command decoding for
   the new tape driver looks pretty solid but the bit-bashing for the
   control registers still has bugs."  See also  <A HREF="JARGO~18.HTM#TAG114" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG114">bit bang</A>,
    <A HREF="JARGO~30.HTM#TAG1161" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1161">mode bit</A>.  <P>
<A NAME=TAG116><B>bit bucket</B></A> /n./ <P> 1. The universal data sink (originally, the
   mythical receptacle used to catch bits when they fall off the end
   of a register during a shift instruction).  Discarded, lost, or
   destroyed data is said to have `gone to the bit bucket'.  On
    <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A>, often used for  <A HREF="JARGO~50.HTM#TAG2060" tppabs="http://www.ccil.org/jargon/jargon_42.html#TAG2060">/dev/null</A>.  Sometimes amplified as
   `the Great Bit Bucket in the Sky'.  2. The place where all lost
   mail and news messages eventually go.  The selection is performed
   according to  <A HREF="JARGO~22.HTM#TAG620" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG620">Finagle's Law</A>; important mail is much more likely
   to end up in the bit bucket than junk mail, which has an almost
   100% probability of getting delivered.  Routing to the bit bucket
   is automatically performed by mail-transfer agents, news systems,
   and the lower layers of the network.  3. The ideal location for all
   unwanted mail responses: "Flames about this article to the bit
   bucket."  Such a request is guaranteed to overflow one's mailbox
   with flames.  4. Excuse for all mail that has not been sent.  "I
   mailed you those figures last week; they must have landed in the
   bit bucket."  Compare  <A HREF="JARGO~18.HTM#TAG127" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG127">black hole</A>.  <P>
   This term is used purely in jest.  It is based on the fanciful
   notion that bits are objects that are not destroyed but only
   misplaced.  This appears to have been a mutation of an earlier term
   `bit box', about which the same legend was current; old-time
   hackers also report that trainees used to be told that when the CPU
   stored bits into memory it was actually pulling them `out of the
   bit box'.  See also  <A HREF="JARGO~19.HTM#TAG264" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG264">chad box</A>.  <P>
   Another variant of this legend has it that, as a consequence of the
   `parity preservation law', the number of 1 bits that go to the bit
   bucket must equal the number of 0 bits.  Any imbalance results in
   bits filling up the bit bucket.  A qualified computer technician
   can empty a full bit bucket as part of scheduled maintenance.  <P>
<A NAME=TAG117><B>bit decay</B></A> /n./ <P> See  <A HREF="JARGO~18.HTM#TAG118" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG118">bit rot</A>.  People with a physics
   background tend to prefer this variant for the analogy with
   particle decay.  See also  <A HREF="JARGO~19.HTM#TAG324" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG324">computron</A>,  <A HREF="JARGO~31.HTM#TAG1444" tppabs="http://www.ccil.org/jargon/jargon_32.html#TAG1444">quantum bogodynamics</A>.  <P>
<A NAME=TAG118><B>bit rot</B></A> /n./ <P> Also  <A HREF="JARGO~18.HTM#TAG117" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG117">bit decay</A>.  Hypothetical disease the
   existence of which has been deduced from the observation that
   unused programs or features will often stop working after
   sufficient time has passed, even if `nothing has changed'.  The
   theory explains that bits decay as if they were radioactive.  As
   time passes, the contents of a file or the code in a program will
   become increasingly garbled.
<P>
   There actually are physical processes that produce such effects
   (alpha particles generated by trace radionuclides in ceramic chip
   packages, for example, can change the contents of a computer memory
   unpredictably, and various kinds of subtle media failures can
   corrupt files in mass storage), but they are quite rare (and
   computers are built with error-detecting circuitry to compensate
   for them).  The notion long favored among hackers that cosmic
   rays are among the causes of such events turns out to be a myth;
   see the  <A HREF="JARGO~19.HTM#TAG359" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG359">cosmic rays</A> entry for details.
<P>
   The term  <A HREF="JARGO~46.HTM#TAG1660" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1660">software rot</A> is almost synonymous.  Software rot is
   the effect, bit rot the notional cause.  <P>
<A NAME=TAG119><B>bit twiddling</B></A> /n./ <P> 1. (pejorative) An exercise in tuning (see
    <A HREF="JARGO~38.HTM#TAG1848" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1848">tune</A>) in which incredible amounts of time and effort go to
   produce little noticeable improvement, often with the result that
   the code becomes incomprehensible.  2. Aimless small modification
   to a program, esp. for some pointless goal.  3. Approx. syn. for
    <A HREF="JARGO~18.HTM#TAG115" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG115">bit bashing</A>; esp. used for the act of frobbing the device
   control register of a peripheral in an attempt to get it back to a
   known state.  <P>
<A NAME=TAG120><B>bit-paired keyboard</B></A> /n./ obs. <P> (alt. `bit-shift keyboard')
   A non-standard keyboard layout that seems to have originated with
   the Teletype ASR-33 and remained common for several years on early
   computer equipment.  The ASR-33 was a mechanical device (see
    <A HREF="JARGO~20.HTM#TAG558" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG558">EOU</A>), so the only way to generate the character codes from
   keystrokes was by some physical linkage.  The design of the ASR-33
   assigned each character key a basic pattern that could be modified
   by flipping bits if the SHIFT or the CTRL key was pressed.  In
   order to avoid making the thing more of a Rube Goldberg kluge than
   it already was, the design had to group characters that shared the
   same basic bit pattern on one key.
<P>
   Looking at the ASCII chart, we find:
<P>
<PRE>
high  low bits
bits  0000 0001 0010 0011 0100 0101 0110 0111 1000 1001
 010        !    "    #    $    %    &#38;    '    (    )
 011   0    1    2    3    4    5    6    7    8    9
</PRE>
<P>
   This is why the characters !"#$%&#38;'() appear where they do on a
   Teletype (thankfully, they didn't use shift-0 for space).  This was
   <EM>not</EM> the weirdest variant of the  <A HREF="JARGO~31.HTM#TAG1453" tppabs="http://www.ccil.org/jargon/jargon_32.html#TAG1453">QWERTY</A> layout widely
   seen, by the way; that prize should probably go to one of several
   (differing) arrangements on IBM's even clunkier 026 and 029 card
   punches.
<P>
   When electronic terminals became popular, in the early 1970s, there
   was no agreement in the industry over how the keyboards should be
   laid out.  Some vendors opted to emulate the Teletype keyboard,
   while others used the flexibility of electronic circuitry to make
   their product look like an office typewriter.  These alternatives
   became known as `bit-paired' and `typewriter-paired' keyboards.  To
   a hacker, the bit-paired keyboard seemed far more logical -- and
   because most hackers in those days had never learned to touch-type,
   there was little pressure from the pioneering users to adapt
   keyboards to the typewriter standard.
<P>
   The doom of the bit-paired keyboard was the large-scale
   introduction of the computer terminal into the normal office
   environment, where out-and-out technophobes were expected to use
   the equipment.  The `typewriter-paired' standard became universal,
   `bit-paired' hardware was quickly junked or relegated to dusty
   corners, and both terms passed into disuse.  <P>
<A NAME=TAG121><B>bitblt</B></A> /bit'blit/ /n./ <P> [from  <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A>, q.v.] 1. Any of a
   family of closely related algorithms for moving and copying
   rectangles of bits between main and display memory on a bit-mapped
   device, or between two areas of either main or display memory (the
   requirement to do the  <A HREF="JARGO~33.HTM#TAG1507" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1507">Right Thing</A> in the case of overlapping
   source and destination rectangles is what makes BitBlt tricky).
   2. Synonym for  <A HREF="JARGO~18.HTM#TAG139" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG139">blit</A> or  <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A>.  Both uses are borderline
   techspeak.  <P>
<A NAME=TAG122><B>BITNET</B></A> /bit'net/ /n./ <P> [acronym: Because It's Time NETwork]
   Everybody's least favorite piece of the network (see  <A HREF="JARGO~29.HTM#TAG1242" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1242">network, the</A>).  The BITNET hosts are a collection of IBM dinosaurs and
   VAXen (the latter with lobotomized comm hardware) that communicate
   using 80-character  <A HREF="JARGO~20.HTM#TAG537" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG537">EBCDIC</A> card images (see  <A HREF="JARGO~20.HTM#TAG539" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG539">eighty-column mind</A>); thus, they tend to mangle the headers and text of
   third-party traffic from the rest of the ASCII/ <A HREF="JARGO~33.HTM#TAG1503" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1503">RFC</A>-822 world
   with annoying regularity.  BITNET was also notorious as the
   apparent home of  <A HREF="JARGO~18.HTM#TAG103" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG103">B1FF</A>.  <P>
<A NAME=TAG123><B>bits</B></A> /pl.n./ <P> 1. Information.  Examples: "I need some bits
   about file formats."  ("I need to know about file formats.")
   Compare  <A HREF="JARGO~19.HTM#TAG355" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG355">core dump</A>, sense 4.  2. Machine-readable
   representation of a document, specifically as contrasted with
   paper: "I have only a photocopy of the Jargon File; does anyone
   know where I can get the bits?".  See  <A HREF="JARGO~46.HTM#TAG1656" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1656">softcopy</A>,  <A HREF="JARGO~46.HTM#TAG1666" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1666">source of all good bits</A> See also  <A HREF="JARGO~18.HTM#TAG113" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG113">bit</A>.  <P>
<A NAME=TAG124><B>bitty box</B></A> /bit'ee boks/ /n./ <P> 1. A computer sufficiently
   small, primitive, or incapable as to cause a hacker acute
   claustrophobia at the thought of developing software on or for it.
   Especially used of small, obsolescent, single-tasking-only personal
   machines such as the Atari 800, Osborne, Sinclair, VIC-20, TRS-80,
   or IBM PC.  2. [Pejorative] More generally, the opposite of
   `real computer' (see  <A HREF="JARGO~23.HTM#TAG747" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG747">Get a real computer!</A>).  See also
    <A HREF="JARGO~30.HTM#TAG1133" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1133">mess-dos</A>,  <A HREF="JARGO~38.HTM#TAG1812" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1812">toaster</A>, and  <A HREF="JARGO~38.HTM#TAG1824" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1824">toy</A>.  <P>
<A NAME=TAG125><B>bixie</B></A> /bik'see/ /n./ <P> Variant  <A HREF="JARGO~20.HTM#TAG550" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG550">emoticon</A>s used on BIX
   (the Byte Information eXchange).  The  <A HREF="JARGO~46.HTM#TAG1632" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1632">smiley</A> bixie is &#60;@_@&#62;,
   apparently intending to represent two cartoon eyes and a mouth.  A
   few others have been reported.  <P>
<A NAME=TAG126><B>black art</B></A> /n./ <P> A collection of arcane, unpublished, and (by
   implication) mostly ad-hoc techniques developed for a particular
   application or systems area (compare  <A HREF="JARGO~18.HTM#TAG128" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG128">black magic</A>).  VLSI
   design and compiler code optimization were (in their beginnings)
   considered classic examples of black art; as theory developed they
   became  <A HREF="JARGO~21.HTM#TAG443" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG443">deep magic</A>, and once standard textbooks had been
   written, became merely  <A HREF="JARGO~26.HTM#TAG872" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG872">heavy wizardry</A>.  The huge proliferation
   of formal and informal channels for spreading around new
   computer-related technologies during the last twenty years has made
   both the term `black art' and what it describes less common than
   formerly.  See also  <A HREF="JARGO~36.HTM#TAG1921" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1921">voodoo programming</A>.  <P>
<A NAME=TAG127><B>black hole</B></A> /n./ <P> What a piece of email or netnews has fallen
   into if it disappears mysteriously between its origin and
   destination sites (that is, without returning a  <A HREF="JARGO~18.HTM#TAG184" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG184">bounce message</A>).  "I think there's a black hole at <I>foovax</I>!" conveys
   suspicion that site <I>foovax</I> has been dropping a lot of stuff on
   the floor lately (see  <A HREF="JARGO~21.HTM#TAG516" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG516">drop on the floor</A>).  The implied
   metaphor of email as interstellar travel is interesting in itself.
   Compare  <A HREF="JARGO~18.HTM#TAG116" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG116">bit bucket</A>.  <P>
<A NAME=TAG128><B>black magic</B></A> /n./ <P> A technique that works, though nobody really
   understands why.  More obscure than  <A HREF="JARGO~36.HTM#TAG1921" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1921">voodoo programming</A>, which
   may be done by cookbook.  Compare also  <A HREF="JARGO~18.HTM#TAG126" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG126">black art</A>,  <A HREF="JARGO~21.HTM#TAG443" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG443">deep magic</A>, and  <A HREF="JARGO~30.HTM#TAG1094" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1094">magic number</A> (sense 2).  <P>
<A NAME=TAG129><B>Black Screen of Death</B></A> n. <P> [prob. related to the
   Floating Head of Death in a famous "Far Side" cartoon.] A
   failure mode of  <A HREF="JARGO~30.HTM#TAG1146" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1146">Microsloth Windows</A>.  On an attempt to launch a
   DOS box, a networked Windows system not uncommonly blanks the
   screen and locks up the PC so hard that it requires a cold
    <A HREF="JARGO~18.HTM#TAG180" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG180">boot</A> to recover. This unhappy phenomenon is known as The Black
   Screen of Death.  <P>
<A NAME=TAG130><B>Black Thursday</B></A> n. <P> February 8th, 1996 -- the day of the
   signing into law of the  <A HREF="JARGO~19.HTM#TAG261" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG261">CDA</A>, so called by analogy with the
   catastrophic "Black Friday" in 1929 that began the Great
   Depression. <P>
<A NAME=TAG131><B>blammo</B></A> /v./ <P> [Oxford Brookes University and alumni, UK] To
   forcibly remove someone from any interactive system, especially
   talker systems. The operators, who may remain hidden, may `blammo'
   a user who is misbehaving.  Very similar to MIT  <A HREF="JARGO~23.HTM#TAG816" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG816">gun</A>; in fact,
   the `blammo-gun' is a notional device used to `blammo' someone.
   While in actual fact the only incarnation of the blammo-gun is the
   command used to forcibly eject a user, operators speak of different
   levels of blammo-gun fire; e.g., a blammo-gun to `stun' will
   temporarily remove someone, but a blammo-gun set to `maim' will
   stop someone coming back on for a while. <P>
<A NAME=TAG132><B>blargh</B></A> /blarg/ /n./ <P> [MIT] The opposite of  <A HREF="JARGO~34.HTM#TAG1368" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1368">ping</A>, sense
   5; an exclamation indicating that one has absorbed or is emitting a
   quantum of unhappiness.  Less common than  <A HREF="JARGO~34.HTM#TAG1368" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1368">ping</A>.
<P>
<A NAME=TAG133><B>blast</B></A> 1. /v.,n./ <P> Synonym for  <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A>, used esp. for large
   data sends over a network or comm line.  Opposite of  <A HREF="JARGO~46.HTM#TAG1643" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1643">snarf</A>.
   Usage: uncommon.  The variant `blat' has been reported.  2. vt.
   [HP/Apollo] Synonymous with  <A HREF="JARGO~29.HTM#TAG1274" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1274">nuke</A> (sense 3).  Sometimes the
   message <CODE>Unable to kill all processes.  Blast them (y/n)?</CODE>
   would appear in the command window upon logout.  <P>
<A NAME=TAG134><B>blat</B></A> /n./ <P> 1. Syn.  <A HREF="JARGO~18.HTM#TAG133" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG133">blast</A>, sense 1.  2. See  <A HREF="JARGO~38.HTM#TAG1790" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1790">thud</A>.  <P>
<A NAME=TAG135><B>bletch</B></A> /blech/ /interj./ <P> [from Yiddish/German `brechen', to
   vomit, poss.  via comic-strip exclamation `blech'] Term
   of disgust.  Often used in "Ugh, bletch".  Compare  <A HREF="JARGO~18.HTM#TAG75" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG75">barf</A>.  <P>
<A NAME=TAG136><B>bletcherous</B></A> /blech'*-r*s/ /adj./ <P> Disgusting in design or
   function; esthetically unappealing.  This word is seldom used of
   people.  "This keyboard is bletcherous!" (Perhaps the keys don't
   work very well, or are misplaced.)  See  <A HREF="JARGO~28.HTM#TAG1069" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1069">losing</A>,
    <A HREF="JARGO~19.HTM#TAG383" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG383">cretinous</A>,  <A HREF="JARGO~18.HTM#TAG63" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG63">bagbiting</A>,  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>, and  <A HREF="JARGO~33.HTM#TAG1457" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1457">random</A>.  The
   term  <A HREF="JARGO~18.HTM#TAG136" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG136">bletcherous</A> applies to the esthetics of the thing so
   described; similarly for  <A HREF="JARGO~19.HTM#TAG383" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG383">cretinous</A>.  By contrast, something
   that is `losing' or `bagbiting' may be failing to meet
   objective criteria.  See also  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A> and  <A HREF="JARGO~33.HTM#TAG1457" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1457">random</A>, which
   have richer and wider shades of meaning than any of the above.  <P>
<A NAME=TAG137><B>blink</B></A> /vi.,n./ <P> To use a navigator or off-line message reader
   to minimize time spent on-line to a commercial network service.
   As of late 1994, this term was said to be in wide use in the UK,
   but is rare or unknown in the US. <P>
<A NAME=TAG138><B>blinkenlights</B></A> /blink'*n-li:tz/ /n./ <P> Front-panel diagnostic
   lights on a computer, esp. a  <A HREF="JARGO~21.HTM#TAG474" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG474">dinosaur</A>.  Derives from the
   last word of the famous blackletter-Gothic sign in mangled
   pseudo-German that once graced about half the computer rooms in the
   English-speaking world.  One version ran in its entirety as
   follows: <P>
ACHTUNG!  ALLES LOOKENSPEEPERS!
<BLOCKQUOTE>
Das computermachine ist nicht fuer gefingerpoken und mittengrabben.
Ist easy schnappen der springenwerk, blowenfusen und poppencorken
mit spitzensparken.  Ist nicht fuer gewerken bei das dumpkopfen.
Das rubbernecken sichtseeren keepen das cotten-pickenen hans in das
pockets muss; relaxen und watchen das blinkenlichten.
</BLOCKQUOTE>
<P>
   This silliness dates back at least as far as 1959 at Stanford
   University and had already gone international by the early 1960s,
   when it was reported at London University's ATLAS computing site.
   There are several variants of it in circulation, some of which
   actually do end with the word `blinkenlights'.
<P>
   In an amusing example of turnabout-is-fair-play, German hackers
   have developed their own versions of the blinkenlights poster in
   fractured English, one of which is reproduced here:
<P>
ATTENTION
@br
<BLOCKQUOTE>
This room is fullfilled mit special electronische equippment.
Fingergrabbing and pressing the cnoeppkes from the computers is
allowed for die experts only!  So all the "lefthanders" stay away
and do not disturben the brainstorming von here working
intelligencies.  Otherwise you will be out thrown and kicked
anderswhere!  Also: please keep still and only watchen astaunished
the blinkenlights.  </BLOCKQUOTE>
<P>
   See also  <A HREF="JARGO~23.HTM#TAG737" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG737">geef</A>.  <P>
   Old-time hackers sometimes get nostalgic for blinkenlights because
   they were so much more fun to look at than a blank panel.  Sadly,
   very few computers still have them (the three LEDs on a PC keyboard
   certainly don't count). The obvious reasons (cost of wiring, cost
   of front-panel cutouts, almost nobody needs or wants to interpret
   machine-register states on the fly anymore) are only part of the
   story.  Another part of it is that radio-frequency leakage from the
   lamp wiring was beginning to be a problem as far back as transistor
   machines.  But the most fundamental fact is that there are very few
   signals slow enough to blink an LED these days!  With slow CPUs,
   you could watch the bus register or instruction counter tick, but
   at 33/66/150MHz it's all a blur.  <P>
<A NAME=TAG139><B>blit</B></A> /blit/ /vt./ <P> 1. To copy a large array of bits from one
   part of a computer's memory to another part, particularly when the
   memory is being used to determine what is shown on a display
   screen.  "The storage allocator picks through the table and copies
   the good parts up into high memory, and then blits it all back down
   again."  See  <A HREF="JARGO~18.HTM#TAG121" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG121">bitblt</A>,  <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A>,  <A HREF="JARGO~21.HTM#TAG423" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG423">dd</A>,  <A HREF="JARGO~19.HTM#TAG258" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG258">cat</A>,  <A HREF="JARGO~18.HTM#TAG133" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG133">blast</A>,
    <A HREF="JARGO~46.HTM#TAG1643" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1643">snarf</A>.  More generally, to perform some operation (such as
   toggling) on a large array of bits while moving them.  2. Sometimes
   all-capitalized as `BLIT': an early experimental bit-mapped
   terminal designed by Rob Pike at Bell Labs, later commercialized as
   the AT&#38;T 5620.  (The folk etymology from `Bell Labs Intelligent
   Terminal' is incorrect.  Its creators liked to claim that "Blit"
   stood for the Bacon, Lettuce, and Interactive Tomato.) <P>
<A NAME=TAG140><B>blitter</B></A> /blit'r/ /n./ <P> A special-purpose chip or hardware
   system built to perform  <A HREF="JARGO~18.HTM#TAG139" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG139">blit</A> operations, esp. used for fast
   implementation of bit-mapped graphics.  The Commodore Amiga and a
   few other micros have these, but sine 1990 the trend is away from
   them (however, see  <A HREF="JARGO~19.HTM#TAG411" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG411">cycle of reincarnation</A>).  Syn.  <A HREF="JARGO~33.HTM#TAG1462" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1462">raster blaster</A>.  <P>
<A NAME=TAG141><B>blivet</B></A> /bliv'*t/ /n./ <P> [allegedly from a World War II
   military term meaning "ten pounds of manure in a five-pound bag"]
   1. An intractable problem.  2. A crucial piece of hardware that
   can't be fixed or replaced if it breaks.  3. A tool that has been
   hacked over by so many incompetent programmers that it has become
   an unmaintainable tissue of hacks.  4. An out-of-control but
   unkillable development effort.  5. An embarrassing bug that pops up
   during a customer demo.  6. In the subjargon of computer security
   specialists, a denial-of-service attack performed by hogging
   limited resources that have no access controls (for example, shared
   spool space on a multi-user system).  <P>
   This term has other meanings in other technical cultures; among
   experimental physicists and hardware engineers of various kinds it
   seems to mean any random object of unknown purpose (similar to
   hackish use of  <A HREF="JARGO~22.HTM#TAG697" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG697">frob</A>).  It has also been used to describe an
   amusing trick-the-eye drawing resembling a three-pronged fork that
   appears to depict a three-dimensional object until one realizes
   that the parts fit together in an impossible way.  <P>
<A NAME=TAG142><B>BLOB</B></A> <P> 1. /n./ [acronym: Binary Large OBject] Used by database
   people to refer to any random large block of bits that needs to be
   stored in a database, such as a picture or sound file.  The
   essential point about a BLOB is that it's an object that cannot be
   interpreted within the database itself.  2. /v./ To  <A HREF="JARGO~30.HTM#TAG1097" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1097">mailbomb</A>
   someone by sending a BLOB to him/her; esp. used as a mild threat.
   "If that program crashes again, I'm going to BLOB the core dump to
   you." <P>
<A NAME=TAG143><B>block</B></A> /v./ <P> [from process scheduling terminology in OS theory]
   1. /vi./  To delay or sit idle while waiting for something.  "We're
   blocking until everyone gets here."  Compare  <A HREF="JARGO~18.HTM#TAG235" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG235">busy-wait</A>.
   2. `block on' /vt./ To block, waiting for (something).  "Lunch is
   blocked on Phil's arrival." <P>
<A NAME=TAG144><B>block transfer computations</B></A> /n./ <P> [from the television series
   "Dr. Who"] Computations so fiendishly subtle and complex that
   they could not be performed by machines.  Used to refer to any task
   that should be expressible as an algorithm in theory, but isn't.
   (The Z80's LDIR instruction, "Computed Block Transfer with
   increment", may also be relevant) <P>
<A NAME=TAG145><B>Bloggs Family, the</B></A> /n./ <P> An imaginary family consisting of
   Fred and Mary Bloggs and their children.  Used as a standard
   example in knowledge representation to show the difference between
   extensional and intensional objects.  For example, every occurrence
   of "Fred Bloggs" is the same unique person, whereas occurrences
   of "person" may refer to different people.  Members of the Bloggs
   family have been known to pop up in bizarre places such as the DEC
   Telephone Directory.  Compare  <A HREF="JARGO~30.HTM#TAG1118" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1118">Mbogo, Dr. Fred</A>.  <P>
<A NAME=TAG146><B>blow an EPROM</B></A> /bloh *n ee'prom/ /v./ <P> (alt. `blast an
   EPROM', `burn an EPROM') To program a read-only memory, e.g.
   for use with an embedded system.  This term arose because the
   programming process for the Programmable Read-Only Memories (PROMs)
   that preceded present-day Erasable Programmable Read-Only Memories
   (EPROMs) involved intentionally blowing tiny electrical fuses on
   the chip.  The usage lives on (it's too vivid and expressive to
   discard) even though the write process on EPROMs is nondestructive.  <P>
<A NAME=TAG147><B>blow away</B></A> /vt./ <P> To remove (files and directories) from
   permanent storage, generally by accident.  "He reformatted the
   wrong partition and blew away last night's netnews."  Oppose
    <A HREF="JARGO~29.HTM#TAG1274" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1274">nuke</A>.  <P>
<A NAME=TAG148><B>blow out</B></A> /vi./ <P> [prob. from mining and tunneling jargon] Of
   software, to fail spectacularly; almost as serious as  <A HREF="JARGO~19.HTM#TAG370" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG370">crash and burn</A>.  See  <A HREF="JARGO~18.HTM#TAG149" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG149">blow past</A>,  <A HREF="JARGO~18.HTM#TAG150" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG150">blow up</A>,  <A HREF="JARGO~21.HTM#TAG467" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG467">die horribly</A>.  <P>
<A NAME=TAG149><B>blow past</B></A> /vt./ <P> To  <A HREF="JARGO~18.HTM#TAG148" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG148">blow out</A> despite a safeguard.  "The
   server blew past the 5K reserve buffer." <P>
<A NAME=TAG150><B>blow up</B></A> /vi./ <P> 1. [scientific computation] To become unstable.
   Suggests that the computation is diverging so rapidly that it will
   soon overflow or at least go  <A HREF="JARGO~29.HTM#TAG1265" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1265">nonlinear</A>.  2.  Syn.  <A HREF="JARGO~18.HTM#TAG148" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG148">blow out</A>.  <P>
<A NAME=TAG151><B>BLT</B></A> /B-L-T/, /bl*t/ or (rarely) /belt/ /n.,vt./ <P> Synonym
   for  <A HREF="JARGO~18.HTM#TAG139" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG139">blit</A>.  This is the original form of  <A HREF="JARGO~18.HTM#TAG139" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG139">blit</A> and the
   ancestor of  <A HREF="JARGO~18.HTM#TAG121" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG121">bitblt</A>.  It referred to any large bit-field copy
   or move operation (one resource-intensive memory-shuffling
   operation done on pre-paged versions of ITS, WAITS, and TOPS-10 was
   sardonically referred to as `The Big BLT').  The jargon usage has
   outlasted the  <A HREF="JARGO~34.HTM#TAG1345" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1345">PDP-10</A> BLock Transfer instruction from which
    <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A> derives; nowadays, the assembler mnemonic  <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A> almost
   always means `Branch if Less Than zero'.  <P>
<A NAME=TAG152><B>Blue Book</B></A> /n./ <P> 1. Informal name for one of the three standard
   references on the page-layout and graphics-control language
    <A HREF="JARGO~34.HTM#TAG1401" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1401">PostScript</A> ("PostScript Language Tutorial and Cookbook",
   Adobe Systems, Addison-Wesley 1985, QA76.73.P67P68, ISBN
   0-201-10179-3); the other three official guides are known as the
    <A HREF="JARGO~23.HTM#TAG795" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG795">Green Book</A>, the  <A HREF="JARGO~33.HTM#TAG1488" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1488">Red Book</A>, and the  <A HREF="JARGO~40.HTM#TAG1969" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1969">White Book</A> (sense
   2).  2. Informal name for one of the three standard references on
   Smalltalk: "Smalltalk-80: The Language and its
   Implementation", David Robson, Addison-Wesley 1983, QA76.8.S635G64,
   ISBN 0-201-11371-63 (this book also has green and red siblings).
   3. Any of the 1988 standards issued by the CCITT's ninth plenary
   assembly.  These include, among other things, the X.400 email spec
   and the Group 1 through 4 fax standards.  See also  <A HREF="JARGO~18.HTM#TAG179" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG179">book titles</A>.  <P>
<A NAME=TAG153><B>blue box</B></A> <P> /n./ 1. obs. Once upon a time, before
   all-digital switches made it possible for the phone companies to
   move them out of band, one could actually hear the switching tones
   used to route long-distance calls.  Early  <A HREF="JARGO~34.HTM#TAG1363" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1363">phreaker</A>s built
   devices called `blue boxes' that could reproduce these tones,
   which could be used to commandeer portions of the phone network.
   (This was not as hard as it may sound; one early phreak acquired
   the sobriquet `Captain Crunch' after he proved that he could
   generate switching tones with a plastic whistle pulled out of a box
   of Captain Crunch cereal!) There were other colors of box with more
   specialized phreaking uses; red boxes, black boxes, silver boxes,
   etc.  2. /n./ An  <A HREF="JARGO~24.HTM#TAG919" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG919">IBM</A> machine, especially a large (non-PC)
   one. <P>
<A NAME=TAG154><B>Blue Glue</B></A> /n./ <P> [IBM] IBM's SNA (Systems Network
   Architecture), an incredibly  <A HREF="JARGO~28.HTM#TAG1069" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1069">losing</A> and  <A HREF="JARGO~18.HTM#TAG136" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG136">bletcherous</A>
   communications protocol widely favored at commercial shops that
   don't know any better.  The official IBM definition is "that which
   binds blue boxes together."  See  <A HREF="JARGO~22.HTM#TAG596" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG596">fear and loathing</A>.  It may
   not be irrelevant that  <A HREF="JARGO~18.HTM#TAG154" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG154">Blue Glue</A> is the trade name of a 3M
   product that is commonly used to hold down the carpet squares to
   the removable panel floors common in  <A HREF="JARGO~21.HTM#TAG475" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG475">dinosaur pen</A>s.  A
   correspondent at U. Minn. reports that the CS department there has
   about 80 bottles of the stuff hanging about, so they often refer to
   any messy work to be done as `using the blue glue'.  <P>
<A NAME=TAG155><B>blue goo</B></A> /n./ <P> Term for `police'  <A HREF="JARGO~29.HTM#TAG1213" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1213">nanobot</A>s intended to
   prevent  <A HREF="JARGO~23.HTM#TAG790" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG790">gray goo</A>, denature hazardous waste, destroy pollution,
   put ozone back into the stratosphere, prevent halitosis, and
   promote truth, justice, and the American way, etc.  The term
   `Blue Goo' can be found in Dr. Seuss's "Fox In Socks" to
   refer to a substance much like bubblegum.  `Would you like to
   chew blue goo, sir?'.  See  <A HREF="JARGO~29.HTM#TAG1216" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1216">nanotechnology</A>.  <P>
<A NAME=TAG156><B>blue wire</B></A> /n./ <P> [IBM] Patch wires added to circuit boards at
   the factory to correct design or fabrication problems.  These may
   be necessary if there hasn't been time to design and qualify
   another board version.  Compare  <A HREF="JARGO~34.HTM#TAG1439" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1439">purple wire</A>,  <A HREF="JARGO~33.HTM#TAG1489" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1489">red wire</A>,
    <A HREF="JARGO~39.HTM#TAG2030" tppabs="http://www.ccil.org/jargon/jargon_40.html#TAG2030">yellow wire</A>.  <P>
<A NAME=TAG157><B>blurgle</B></A> /bler'gl/ /n./ <P> [UK] Spoken  <A HREF="JARGO~30.HTM#TAG1136" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1136">metasyntactic variable</A>, to indicate some text that is obvious from context, or
   which is already known. If several words are to be replaced,
   blurgle may well be doubled or tripled. "To look for something in
   several files use `grep string blurgle blurgle'."  In each case,
   "blurgle blurgle" would be understood to be replaced by the file
   you wished to search.  Compare  <A HREF="JARGO~30.HTM#TAG1191" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1191">mumble</A>, sense 7.  <P>
<A NAME=TAG158><B>BNF</B></A> /B-N-F/ /n./ <P> 1. [techspeak] Acronym for `Backus-Naur
   Form', a metasyntactic notation used to specify the syntax of
   programming languages, command sets, and the like.  Widely used for
   language descriptions but seldom documented anywhere, so that it
   must usually be learned by osmosis from other hackers.  Consider
   this BNF for a U.S. postal address:
<P>
<PRE>
 &#60;postal-address&#62; ::= &#60;name-part&#62; &#60;street-address&#62; &#60;zip-part&#62;

 &#60;personal-part&#62; ::= &#60;name&#62; | &#60;initial&#62; "."

 &#60;name-part&#62; ::= &#60;personal-part&#62; &#60;last-name&#62; [&#60;jr-part&#62;] &#60;EOL&#62;
               | &#60;personal-part&#62; &#60;name-part&#62;

 &#60;street-address&#62; ::= [&#60;apt&#62;] &#60;house-num&#62; &#60;street-name&#62; &#60;EOL&#62;

 &#60;zip-part&#62; ::= &#60;town-name&#62; "," &#60;state-code&#62; &#60;ZIP-code&#62; &#60;EOL&#62;
</PRE>
<P>
   This translates into English as: "A postal-address consists of a
   name-part, followed by a street-address part, followed by a
   zip-code part.  A personal-part consists of either a first name or
   an initial followed by a dot.  A name-part consists of either: a
   personal-part followed by a last name followed by an optional
   `jr-part' (Jr., Sr., or dynastic number) and end-of-line, or a
   personal part followed by a name part (this rule illustrates the
   use of recursion in BNFs, covering the case of people who use
   multiple first and middle names and/or initials).  A street address
   consists of an optional apartment specifier, followed by a street
   number, followed by a street name.  A zip-part consists of a
   town-name, followed by a comma, followed by a state code, followed
   by a ZIP-code followed by an end-of-line."  Note that many things
   (such as the format of a personal-part, apartment specifier, or
   ZIP-code) are left unspecified.  These are presumed to be obvious
   from context or detailed somewhere nearby.  See also  <A HREF="JARGO~34.HTM#TAG1332" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1332">parse</A>.
   2. Any of a number number of variants and extensions of BNF proper,
   possibly containing some or all of the  <A HREF="JARGO~33.HTM#TAG1490" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1490">regexp</A> wildcards such
   as <CODE>*</CODE> or <CODE>+</CODE>.  In fact the example above isn't the pure
   form invented for the Algol-60 report; it uses <CODE>[]</CODE>, which was
   introduced a few years later in IBM's PL/I definition but is now
   universally recognized.  3. In  <A HREF="JARGO~46.HTM#TAG1555" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1555">science-fiction fandom</A>, a
   `Big-Name Fan' (someone famous or notorious).  Years ago a fan
   started handing out black-on-green BNF buttons at SF conventions;
   this confused the hacker contingent terribly.  <P>
<A NAME=TAG159><B>boa</B></A> [IBM] /n./ <P> Any one of the fat cables that lurk under the
   floor in a  <A HREF="JARGO~21.HTM#TAG475" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG475">dinosaur pen</A>.  Possibly so called because they
   display a ferocious life of their own when you try to lay them
   straight and flat after they have been coiled for some time.  It is
   rumored within IBM that channel cables for the 370 are limited to
   200 feet because beyond that length the boas get dangerous -- and
   it is worth noting that one of the major cable makers uses the
   trademark `Anaconda'.  <P>
<A NAME=TAG160><B>board</B></A> /n./ <P> 1. In-context synonym for  <A HREF="JARGO~18.HTM#TAG87" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG87">bboard</A>; sometimes
   used even for Usenet newsgroups (but see usage note under
    <A HREF="JARGO~18.HTM#TAG87" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG87">bboard</A>, sense 1).  2. An electronic circuit board.  <P>
<A NAME=TAG161><B>boat anchor</B></A> /n./ <P> 1. Like  <A HREF="JARGO~21.HTM#TAG498" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG498">doorstop</A> but more severe;
   implies that the offending hardware is irreversibly dead or
   useless.  "That was a working motherboard once.  One lightning
   strike later, instant boat anchor!"  2. A person who just takes up
   space.  3. Obsolete but still working hardware, especially
   when used of an old S100-bus hobbyist system; originally a term of
   annoyance, but became more and more affectionate as the hardware
   became more and more obsolete.  <P>
<A NAME=TAG162><B>bodysurf code</B></A> /n./ <P> A program or segment of code written
   quickly in the heat of inspiration without the benefit of formal
   design or deep thought.  Like its namesake sport, the result is
   too often a wipeout that leaves the programmer eating sand. <P>
<A NAME=TAG163><B>BOF</B></A> /B-O-F/ or /bof/ /n./ <P> Abbreviation for the phrase
   "Birds Of a Feather" (flocking together), an informal discussion
   group and/or bull session scheduled on a conference program.  It is
   not clear where or when this term originated, but it is now
   associated with the USENIX conferences for Unix techies and was
   already established there by 1984.  It was used earlier than that
   at DECUS conferences and is reported to have been common at SHARE
   meetings as far back as the early 1960s.  <P>
<A NAME=TAG164><B>BOFH</B></A> // /n./ <P> Acronym, Bastard Operator From Hell.  A system
   administrator with absolutely no tolerance for  <A HREF="JARGO~28.HTM#TAG1080" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1080">luser</A>s.  "You
   say you need more filespace?  &#60;massive-global-delete&#62; Seems to me
   you have plenty left..."  Many BOFHs (and others who would be
   BOFHs if they could get away with it) hang out in the newsgroup
   <I><a href="news:alt.sysadmin.recovery">alt.sysadmin.recovery</a></I>, although there has also been created a
   top-level newsgroup hierarchy (<I><a href="news:bofh.*">bofh.*</a></I>) of their own. <P>
   Several people have written stories about BOFHs. The set usually
   considered canonical is by Simon Travaglia and may be found at the
   Bastard Home Page,
   <I><a href="../../tppmsgs/msgs9.htm#922" tppabs="http://prime-mover.cc.waikato.ac.nz/Bastard.html">http://prime-mover.cc.waikato.ac.nz/Bastard.html</a></I>. <P>
<A NAME=TAG165><B>bogo-sort</B></A> /boh`goh-sort'/ /n./ <P> (var. `stupid-sort') The
   archetypical perversely awful algorithm (as opposed to  <A HREF="JARGO~18.HTM#TAG219" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG219">bubble sort</A>, which is merely the generic <EM>bad</EM> algorithm).
   Bogo-sort is equivalent to repeatedly throwing a deck of cards in
   the air, picking them up at random, and then testing whether they
   are in order.  It serves as a sort of canonical example of
   awfulness.  Looking at a program and seeing a dumb algorithm, one
   might say "Oh, I see, this program uses bogo-sort."  Compare
    <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>,  <A HREF="JARGO~18.HTM#TAG214" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG214">brute force</A>,  <A HREF="JARGO~28.HTM#TAG1014" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1014">Lasherism</A>.  <P>
<A NAME=TAG166><B>bogometer</B></A> /boh-gom'-*t-er/ /n./ <P> A notional instrument for
   measuring  <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A>.  Compare the `wankometer' described in
   the  <A HREF="JARGO~40.HTM#TAG1936" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1936">wank</A> entry; see also  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>.  <P>
<A NAME=TAG167><B>bogon</B></A> /boh'gon/ /n./ <P> [by analogy with
   proton/electron/neutron, but doubtless reinforced after 1980 by the
   similarity to Douglas Adams's `Vogons'; see the  <A HREF="JARGO~72.HTM#SEC77" tppabs="http://www.ccil.org/jargon/jargon_70.html#SEC77">Bibliography</A>
   in Appendix C and note that Arthur Dent actually mispronounces
   `Vogons' as `Bogons' at one point] 1. The elementary particle of
   bogosity (see  <A HREF="JARGO~31.HTM#TAG1444" tppabs="http://www.ccil.org/jargon/jargon_32.html#TAG1444">quantum bogodynamics</A>).  For instance, "the
   Ethernet is emitting bogons again" means that it is broken or
   acting in an erratic or bogus fashion.  2. A query packet sent from
   a TCP/IP domain resolver to a root server, having the reply bit set
   instead of the query bit.  3. Any bogus or incorrectly formed
   packet sent on a network.  4. By synecdoche, used to refer to any
   bogus thing, as in "I'd like to go to lunch with you but I've got
   to go to the weekly staff bogon".  5. A person who is bogus or
   who says bogus things.  This was historically the original usage,
   but has been overtaken by its derivative senses 1--4.  See also
    <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A>,  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>; compare  <A HREF="JARGO~34.HTM#TAG1433" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1433">psyton</A>,  <A HREF="JARGO~22.HTM#TAG593" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG593">fat electrons</A>,
    <A HREF="JARGO~30.HTM#TAG1095" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1095">magic smoke</A>.  <P>
   The bogon has become the type case for a whole bestiary of nonce
   particle names, including the `clutron' or `cluon' (indivisible
   particle of cluefulness, obviously the antiparticle of the bogon)
   and the futon (elementary particle of  <A HREF="JARGO~33.HTM#TAG1459" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1459">randomness</A>, or sometimes
   of lameness).  These are not so much live usages in themselves as
   examples of a live meta-usage: that is, it has become a standard
   joke or linguistic maneuver to "explain" otherwise mysterious
   circumstances by inventing nonce particle names.  And these imply
   nonce particle theories, with all their dignity or lack thereof (we
   might note parenthetically that this is a generalization from
   "(bogus particle) theories" to "bogus (particle theories)"!).
   Perhaps such particles are the modern-day equivalents of trolls and
   wood-nymphs as standard starting-points around which to construct
   explanatory myths.  Of course, playing on an existing word (as in
   the `futon') yields additional flavor.  Compare  <A HREF="JARGO~30.HTM#TAG1095" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1095">magic smoke</A>.  <P>
<A NAME=TAG168><B>bogon filter</B></A> /boh'gon fil'tr/ /n./ <P> Any device, software or
   hardware, that limits or suppresses the flow and/or emission of
   bogons.  "Engineering hacked a bogon filter between the Cray and
   the VAXen, and now we're getting fewer dropped packets."  See also
    <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A>,  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>.  <P>
<A NAME=TAG169><B>bogon flux</B></A> /boh'gon fluhks/ /n./ <P> A measure of a supposed
   field of  <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A> emitted by a speaker, measured by a
    <A HREF="JARGO~18.HTM#TAG166" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG166">bogometer</A>; as a speaker starts to wander into increasing
   bogosity a listener might say "Warning, warning, bogon flux is
   rising".  See  <A HREF="JARGO~31.HTM#TAG1444" tppabs="http://www.ccil.org/jargon/jargon_32.html#TAG1444">quantum bogodynamics</A>.
<P>
<A NAME=TAG170><B>bogosity</B></A> /boh-go's*-tee/ /n./ <P> 1. The degree to which
   something is  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>.  At CMU, bogosity is measured with a
    <A HREF="JARGO~18.HTM#TAG166" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG166">bogometer</A>; in a seminar, when a speaker says something bogus,
   a listener might raise his hand and say "My bogometer just
   triggered".  More extremely, "You just pinned my bogometer"
   means you just said or did something so outrageously bogus that it
   is off the scale, pinning the bogometer needle at the highest
   possible reading (one might also say "You just redlined my
   bogometer").  The agreed-upon unit of bogosity is the
    <A HREF="JARGO~30.HTM#TAG1144" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1144">microLenat</A>.  2. The potential field generated by a  <A HREF="JARGO~18.HTM#TAG169" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG169">bogon flux</A>; see  <A HREF="JARGO~31.HTM#TAG1444" tppabs="http://www.ccil.org/jargon/jargon_32.html#TAG1444">quantum bogodynamics</A>.  See also  <A HREF="JARGO~18.HTM#TAG169" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG169">bogon flux</A>,
    <A HREF="JARGO~18.HTM#TAG168" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG168">bogon filter</A>,  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>.  <P>
<A NAME=TAG171><B>bogotify</B></A> /boh-go't*-fi:/ /vt./ <P> To make or become bogus.  A
   program that has been changed so many times as to become completely
   disorganized has become bogotified.  If you tighten a nut too hard
   and strip the threads on the bolt, the bolt has become bogotified
   and you had better not use it any more.  This coinage led to the
   notional `autobogotiphobia' defined as `the fear of becoming
   bogotified'; but is not clear that the latter has ever been
   `live' jargon rather than a self-conscious joke in jargon about
   jargon.  See also  <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A>,  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>.  <P>
<A NAME=TAG172><B>bogue out</B></A> /bohg owt/ /vi./ <P> To become bogus, suddenly and
   unexpectedly.  "His talk was relatively sane until somebody asked
   him a trick question; then he bogued out and did nothing but
    <A HREF="JARGO~22.HTM#TAG642" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG642">flame</A> afterwards."  See also  <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A>,  <A HREF="JARGO~18.HTM#TAG173" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG173">bogus</A>.  <P>
<A NAME=TAG173><B>bogus</B></A> /adj./ <P> 1. Non-functional.  "Your patches are bogus."
   2. Useless.  "OPCON is a bogus program."  3. False.  "Your
   arguments are bogus."  4. Incorrect.  "That algorithm is bogus."
   5. Unbelievable.  "You claim to have solved the halting problem
   for Turing Machines?  That's totally bogus."  6. Silly.  "Stop
   writing those bogus sagas." <P>
   Astrology is bogus.  So is a bolt that is obviously about to break.
   So is someone who makes blatantly false claims to have solved a
   scientific problem.  (This word seems to have some, but not all, of
   the connotations of  <A HREF="JARGO~33.HTM#TAG1457" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1457">random</A> -- mostly the negative ones.) <P>
   It is claimed that `bogus' was originally used in the hackish sense
   at Princeton in the late 1960s.  It was spread to CMU and Yale by
   Michael Shamos, a migratory Princeton alumnus.  A glossary of bogus
   words was compiled at Yale when the word was first popularized (see
    <A HREF="JARGO~17.HTM#TAG48" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG48">autobogotiphobia</A> under  <A HREF="JARGO~18.HTM#TAG171" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG171">bogotify</A>). The word spread into
   hackerdom from CMU and MIT.  By the early 1980s it was also
   current in something like the hackish sense in West Coast teen
   slang, and it had gone mainstream by 1985.  A correspondent from
   Cambridge reports, by contrast, that these uses of `bogus' grate on
   British nerves; in Britain the word means, rather specifically,
   `counterfeit', as in "a bogus 10-pound note".  <P>
<A NAME=TAG174><B>Bohr bug</B></A> /bohr buhg/ /n./ <P> [from quantum physics] A repeatable
    <A HREF="JARGO~18.HTM#TAG223" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG223">bug</A>; one that manifests reliably under a possibly unknown but
   well-defined set of conditions.  Antonym of  <A HREF="JARGO~26.HTM#TAG874" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG874">heisenbug</A>; see also
    <A HREF="JARGO~30.HTM#TAG1102" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1102">mandelbug</A>,  <A HREF="JARGO~46.HTM#TAG1554" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1554">schroedinbug</A>.  <P>
<A NAME=TAG175><B>boink</B></A> /boynk/ <P> [Usenet: variously ascribed to the TV
   series "Cheers" "Moonlighting", and "Soap"]
   1. /v./ To have sex with; compare  <A HREF="JARGO~18.HTM#TAG183" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG183">bounce</A>, sense 3. (This is
   mainstream slang.) In Commonwealth hackish the variant `bonk' is
   more common.  2. /n./ After the original Peter Korn `Boinkon'
    <A HREF="JARGO~35.HTM#TAG1882" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1882">Usenet</A> parties, used for almost any net social gathering,
   e.g., Miniboink, a small boink held by Nancy Gillett in 1988;
   Minniboink, a Boinkcon in Minnesota in 1989; Humpdayboinks,
   Wednesday get-togethers held in the San Francisco Bay Area.
   Compare  <A HREF="JARGO~50.HTM#TAG2065" tppabs="http://www.ccil.org/jargon/jargon_42.html#TAG2065">@-party</A>.  3. Var of `bonk'; see  <A HREF="JARGO~18.HTM#TAG178" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG178">bonk/oif</A>. <P>
<A NAME=TAG176><B>bomb</B></A> <P> 1. /v./ General synonym for  <A HREF="JARGO~19.HTM#TAG369" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG369">crash</A> (sense 1) except
   that it is not used as a noun; esp. used of software or OS
   failures.  "Don't run Empire with less than 32K stack, it'll
   bomb."  2. /n.,v./ Atari ST and Macintosh equivalents of a Unix
   `panic' or Amiga  <A HREF="JARGO~23.HTM#TAG819" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG819">guru</A> (sense 2), in which icons of little
   black-powder bombs or mushroom clouds are displayed, indicating
   that the system has died.  On the Mac, this may be accompanied by a
   decimal (or occasionally hexadecimal) number indicating what went
   wrong, similar to the Amiga  <A HREF="JARGO~23.HTM#TAG820" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG820">guru meditation</A> number.
    <A HREF="JARGO~30.HTM#TAG1182" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1182">MS-DOS</A> machines tend to get  <A HREF="JARGO~28.HTM#TAG1060" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1060">locked up</A> in this situation.  <P>
<A NAME=TAG177><B>bondage-and-discipline language</B></A> /n./ <P> A language (such as
    <A HREF="JARGO~34.HTM#TAG1333" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1333">Pascal</A>,  <A HREF="JARGO~17.HTM#TAG8" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG8">Ada</A>, APL, or Prolog) that, though ostensibly
   general-purpose, is designed so as to enforce an author's theory of
   `right programming' even though said theory is demonstrably
   inadequate for systems hacking or even vanilla general-purpose
   programming.  Often abbreviated `B&#38;D'; thus, one may speak of
   things "having the B&#38;D nature".  See  <A HREF="JARGO~34.HTM#TAG1333" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1333">Pascal</A>; oppose
    <A HREF="JARGO~28.HTM#TAG1010" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1010">languages of choice</A>.  <P>
<A NAME=TAG178><B>bonk/oif</B></A> /bonk/, /oyf/ /interj./ <P> In the  <A HREF="JARGO~30.HTM#TAG1184" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1184">MUD</A>
   community, it has become traditional to express pique or censure by
   `bonking' the offending person.  Convention holds that one should
   acknowledge a bonk by saying `oif!' and there is a myth to the
   effect that failing to do so upsets the cosmic bonk/oif balance,
   causing much trouble in the universe.  Some MUDs have implemented
   special commands for bonking and oifing.  See also  <A HREF="JARGO~38.HTM#TAG1748" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1748">talk mode</A>.  <P>
<A NAME=TAG179><B>book titles</B></A> <P> There is a tradition in hackerdom of
   informally tagging important textbooks and standards documents with
   the dominant color of their covers or with some other conspicuous
   feature of the cover.  Many of these are described in this lexicon
   under their own entries. See  <A HREF="JARGO~17.HTM#TAG26" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG26">Aluminum Book</A>,  <A HREF="JARGO~18.HTM#TAG152" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG152">Blue Book</A>,
    <A HREF="JARGO~19.HTM#TAG246" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG246">Camel Book</A>,  <A HREF="JARGO~19.HTM#TAG292" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG292">Cinderella Book</A>,  <A HREF="JARGO~21.HTM#TAG462" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG462">Devil Book</A>,  <A HREF="JARGO~21.HTM#TAG509" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG509">Dragon Book</A>,  <A HREF="JARGO~23.HTM#TAG795" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG795">Green Book</A>,  <A HREF="JARGO~32.HTM#TAG1304" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1304">Orange Book</A>,  <A HREF="JARGO~34.HTM#TAG1369" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1369">Pink-Shirt Book</A>,
    <A HREF="JARGO~34.HTM#TAG1438" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1438">Purple Book</A>,  <A HREF="JARGO~33.HTM#TAG1488" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1488">Red Book</A>,  <A HREF="JARGO~46.HTM#TAG1614" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1614">Silver Book</A>,  <A HREF="JARGO~40.HTM#TAG1969" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1969">White Book</A>,
    <A HREF="JARGO~40.HTM#TAG1995" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1995">Wizard Book</A>,  <A HREF="JARGO~39.HTM#TAG2029" tppabs="http://www.ccil.org/jargon/jargon_40.html#TAG2029">Yellow Book</A>, and  <A HREF="JARGO~18.HTM#TAG101" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG101">bible</A>; see also
    <A HREF="JARGO~33.HTM#TAG1456" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1456">rainbow series</A>.  Since about 1983 this tradition has gotten a
   boost from the popular O'Reilly Associates line of technical books,
   which usually feature some kind of exotic animal on the
   cover. <P>
<A NAME=TAG180><B>boot</B></A> /v.,n./ <P> [techspeak; from `by one's bootstraps'] To
   load and initialize the operating system on a machine.  This usage
   is no longer jargon (having passed into techspeak) but has given
   rise to some derivatives that are still jargon.  <P>
   The derivative `reboot' implies that the machine hasn't been down
   for long, or that the boot is a  <A HREF="JARGO~18.HTM#TAG183" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG183">bounce</A> (sense 4) intended to
   clear some state of  <A HREF="JARGO~40.HTM#TAG1953" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1953">wedgitude</A>.  This is sometimes used of
   human thought processes, as in the following exchange: "You've
   lost me."  "OK, reboot.  Here's the theory...."<P>
   This term is also found in the variants `cold boot' (from
   power-off condition) and `warm boot' (with the CPU and all
   devices already powered up, as after a hardware reset or software
   crash).  <P>
   Another variant: `soft boot', reinitialization of only part of a
   system, under control of other software still running: "If
   you're running the  <A HREF="JARGO~30.HTM#TAG1133" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1133">mess-dos</A> emulator, control-alt-insert will
   cause a soft-boot of the emulator, while leaving the rest of the
   system running."<P>
   Opposed to this there is `hard boot', which connotes hostility
   towards or frustration with the machine being booted:  "I'll have
   to hard-boot this losing Sun."  "I recommend booting it
   hard."  One often hard-boots by performing a  <A HREF="JARGO~34.HTM#TAG1403" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1403">power cycle</A>.  <P>
   Historical note: this term derives from `bootstrap loader', a short
   program that was read in from cards or paper tape, or toggled in
   from the front panel switches.  This program was always very short
   (great efforts were expended on making it short in order to
   minimize the labor and chance of error involved in toggling it in),
   but was just smart enough to read in a slightly more complex
   program (usually from a card or paper tape reader), to which it
   handed control; this program in turn was smart enough to read the
   application or operating system from a magnetic tape drive or disk
   drive.  Thus, in successive steps, the computer `pulled itself up
   by its bootstraps' to a useful operating state.  Nowadays the
   bootstrap is usually found in ROM or EPROM, and reads the first
   stage in from a fixed location on the disk, called the `boot
   block'.  When this program gains control, it is powerful enough to
   load the actual OS and hand control over to it.  <P>
<A NAME=TAG181><B>bottom feeder</B></A> /n./ <P> Syn. for  <A HREF="JARGO~46.HTM#TAG1626" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1626">slopsucker</A>, derived from the
   fishermen's and naturalists' term for finny creatures who subsist
   on the primordial ooze.  <P>
<A NAME=TAG182><B>bottom-up implementation</B></A> /n./ <P> Hackish opposite of the
   techspeak term `top-down design'.  It is now received wisdom in
   most programming cultures that it is best to design from higher
   levels of abstraction down to lower, specifying sequences of action
   in increasing detail until you get to actual code.  Hackers often
   find (especially in exploratory designs that cannot be closely
   specified in advance) that it works best to <EM>build</EM> things in
   the opposite order, by writing and testing a clean set of primitive
   operations and then knitting them together.  <P>
<A NAME=TAG183><B>bounce</B></A> /v./ <P> 1. [perhaps by analogy to a bouncing check] An
   electronic mail message that is undeliverable and returns an error
   notification to the sender is said to `bounce'.  See also
    <A HREF="JARGO~18.HTM#TAG184" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG184">bounce message</A>.  2. [Stanford] To play volleyball.  The
   now-demolished  <A HREF="JARGO~21.HTM#TAG414" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG414">D. C. Power Lab</A> building used by the Stanford
   AI Lab in the 1970s had a volleyball court on the front lawn.  From
   5 P.M. to 7 P.M. was the scheduled maintenance time for the
   computer, so every afternoon at 5 would come over the intercom the
   cry: "Now hear this: bounce, bounce!", followed by Brian McCune
   loudly bouncing a volleyball on the floor outside the offices of
   known volleyballers.  3. To engage in sexual intercourse; prob.
   from the expression `bouncing the mattress', but influenced by
   Roo's psychosexually loaded "Try bouncing me, Tigger!" from the
   "Winnie-the-Pooh" books.  Compare  <A HREF="JARGO~18.HTM#TAG175" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG175">boink</A>.  4. To casually
   reboot a system in order to clear up a transient problem.  Reported
   primarily among  <A HREF="JARGO~36.HTM#TAG1918" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1918">VMS</A> users.  5.  [VM/CMS programmers]
   <EM>Automatic</EM> warm-start of a machine after an error.  "I
   logged on this morning and found it had bounced 7 times during the
   night" 6. [IBM] To  <A HREF="JARGO~34.HTM#TAG1403" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1403">power cycle</A> a peripheral in order to reset
   it.  <P>
<A NAME=TAG184><B>bounce message</B></A> /n./ <P> [Unix] Notification message returned to sender
   by a site unable to relay  <A HREF="JARGO~20.HTM#TAG549" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG549">email</A> to the intended  <A HREF="JARGO~24.HTM#TAG948" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG948">Internet address</A> recipient or the next link in a  <A HREF="JARGO~18.HTM#TAG71" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG71">bang path</A> (see
    <A HREF="JARGO~18.HTM#TAG183" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG183">bounce</A>, sense 1).  Reasons might include a nonexistent or
   misspelled username or a  <A HREF="JARGO~21.HTM#TAG503" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG503">down</A> relay site.  Bounce messages can
   themselves fail, with occasionally ugly results; see  <A HREF="JARGO~46.HTM#TAG1664" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1664">sorcerer's apprentice mode</A> and  <A HREF="JARGO~46.HTM#TAG1659" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1659">software laser</A>.  The terms `bounce
   mail' and `barfmail' are also common.  <P>
<A NAME=TAG185><B>boustrophedon</B></A> /n./ <P> [from a Greek word for turning like an ox
   while plowing] An ancient method of writing using alternate
   left-to-right and right-to-left lines.  This term is actually
   philologists' techspeak and typesetters' jargon.  Erudite hackers
   use it for an optimization performed by some computer typesetting
   software and moving-head printers.  The adverbial form
   `boustrophedonically' is also found (hackers purely love
   constructions like this).  <P>
<A NAME=TAG186><B>box</B></A> /n./ <P> 1. A computer; esp. in the construction `foo
   box' where <I>foo</I> is some functional qualifier, like
   `graphics', or the name of an OS (thus, `Unix box', `MS-DOS
   box', etc.)  "We preprocess the data on Unix boxes before handing
   it up to the mainframe."  2. [IBM] Without qualification but
   within an SNA-using site, this refers specifically to an IBM
   front-end processor or FEP /F-E-P/.  An FEP is a small computer
   necessary to enable an IBM  <A HREF="JARGO~30.HTM#TAG1100" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1100">mainframe</A> to communicate beyond the
   limits of the  <A HREF="JARGO~21.HTM#TAG475" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG475">dinosaur pen</A>.  Typically used in expressions
   like the cry that goes up when an SNA network goes down: "Looks
   like the  <A HREF="JARGO~18.HTM#TAG186" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG186">box</A> has fallen over." (See  <A HREF="JARGO~22.HTM#TAG582" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG582">fall over</A>.) See also
    <A HREF="JARGO~24.HTM#TAG919" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG919">IBM</A>,  <A HREF="JARGO~22.HTM#TAG596" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG596">fear and loathing</A>,  <A HREF="JARGO~22.HTM#TAG609" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG609">fepped out</A>,  <A HREF="JARGO~18.HTM#TAG154" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG154">Blue Glue</A>.  <P>
<A NAME=TAG187><B>boxed comments</B></A> /n./ <P> Comments (explanatory notes attached to
   program instructions) that occupy several lines by themselves; so
   called because in assembler and C code they are often surrounded by
   a box in a style something like this:
<P>
<PRE>
/*************************************************
 *
 * This is a boxed comment in C style
 *
 *************************************************/
</PRE>
<P>
   Common variants of this style omit the asterisks in column 2 or add
   a matching row of asterisks closing the right side of the box.  The
   sparest variant omits all but the comment delimiters themselves;
   the `box' is implied.  Oppose  <A HREF="JARGO~40.HTM#TAG1983" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1983">winged comments</A>.  <P>
<A NAME=TAG188><B>boxen</B></A> /bok'sn/ /pl.n./ <P> [by analogy with  <A HREF="JARGO~36.HTM#TAG1897" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1897">VAXen</A>]
   Fanciful plural of  <A HREF="JARGO~18.HTM#TAG186" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG186">box</A> often encountered in the phrase `Unix
   boxen', used to describe commodity  <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A> hardware.  The
   connotation is that any two Unix boxen are interchangeable.  <P>
<A NAME=TAG189><B>boxology</B></A> /bok-sol'*-jee/ /n./ <P> Syn.  <A HREF="JARGO~17.HTM#TAG44" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG44">ASCII art</A>.  This
   term implies a more restricted domain, that of box-and-arrow
   drawings.  "His report has a lot of boxology in it."  Compare
    <A HREF="JARGO~30.HTM#TAG1089" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1089">macrology</A>.  <P>
<A NAME=TAG190><B>bozotic</B></A> /boh-zoh'tik/ or /boh-zo'tik/ /adj./ <P> [from the name of
   a TV clown even more losing than Ronald McDonald] Resembling
   or having the quality of a bozo; that is, clownish, ludicrously
   wrong, unintentionally humorous.  Compare  <A HREF="JARGO~40.HTM#TAG2001" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2001">wonky</A>,
    <A HREF="JARGO~21.HTM#TAG450" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG450">demented</A>.  Note that the noun `bozo' occurs in slang, but
   the mainstream adjectival form would be `bozo-like' or (in New
   England) `bozoish'.  <P>
<A NAME=TAG191><B>BQS</B></A> /B-Q-S/ /adj./ <P> Syn.  <A HREF="JARGO~18.HTM#TAG96" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG96">Berkeley Quality Software</A>.  <P>
<A NAME=TAG192><B>brain dump</B></A> /n./ <P> The act of telling someone everything one
   knows about a particular topic or project.  Typically used when
   someone is going to let a new party maintain a piece of code.
   Conceptually analogous to an operating system  <A HREF="JARGO~19.HTM#TAG355" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG355">core dump</A> in
   that it saves a lot of useful  <A HREF="JARGO~46.HTM#TAG1694" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1694">state</A> before an exit.  "You'll
   have to give me a brain dump on FOOBAR before you start your new
   job at HackerCorp."  See  <A HREF="JARGO~19.HTM#TAG355" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG355">core dump</A> (sense 4).  At Sun, this
   is also known as `TOI' (transfer of information).  <P>
<A NAME=TAG193><B>brain fart</B></A> /n./ <P> The actual result of a  <A HREF="JARGO~18.HTM#TAG196" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG196">braino</A>, as
   opposed to the mental glitch that is the braino itself.  E.g.,
   typing <CODE>dir</CODE> on a Unix box after a session with DOS.
<P>
<A NAME=TAG194><B>brain-damaged</B></A> /adj./ <P> 1. [generalization of `Honeywell Brain
   Damage' (HBD), a theoretical disease invented to explain certain
   utter cretinisms in Honeywell  <A HREF="JARGO~30.HTM#TAG1188" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1188">Multics</A>] /adj./ Obviously
   wrong;  <A HREF="JARGO~19.HTM#TAG383" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG383">cretinous</A>;  <A HREF="JARGO~21.HTM#TAG450" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG450">demented</A>.  There is an implication that
   the person responsible must have suffered brain damage, because he
   should have known better.  Calling something brain-damaged is
   really bad; it also implies it is unusable, and that its failure to
   work is due to poor design rather than some accident.  "Only six
   monocase characters per file name?  Now <EM>that's</EM>
   brain-damaged!"  2. [esp. in the Mac world] May refer to free
   demonstration software that has been deliberately crippled in some
   way so as not to compete with the commercial product it is intended
   to sell.  Syn.   <A HREF="JARGO~19.HTM#TAG384" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG384">crippleware</A>.  <P>
<A NAME=TAG195><B>brain-dead</B></A> /adj./ <P> Brain-damaged in the extreme.  It tends to
   imply terminal design failure rather than malfunction or simple
   stupidity.  "This comm program doesn't know how to send a break
   -- how brain-dead!" <P>
<A NAME=TAG196><B>braino</B></A> /bray'no/ /n./ <P> Syn. for  <A HREF="JARGO~38.HTM#TAG1784" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1784">thinko</A>. See also
    <A HREF="JARGO~18.HTM#TAG193" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG193">brain fart</A>.  <P>
<A NAME=TAG197><B>branch to Fishkill</B></A> /n./ <P> [IBM: from the location of one of the
   corporation's facilities] Any unexpected jump in a program that
   produces catastrophic or just plain weird results.  See  <A HREF="JARGO~25.HTM#TAG976" tppabs="http://www.ccil.org/jargon/jargon_25.html#TAG976">jump off into never-never land</A>,  <A HREF="JARGO~26.HTM#TAG915" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG915">hyperspace</A>.  <P>
<A NAME=TAG198><B>bread crumbs</B></A> /n./ <P> Debugging statements inserted into a
   program that emit output or log indicators of the program's
    <A HREF="JARGO~46.HTM#TAG1694" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1694">state</A> to a file so you can see where it dies or pin down the
   cause of surprising behavior. The term is probably a reference to
   the Hansel and Gretel story from the Brothers Grimm; in several
   variants, a character leaves a trail of bread crumbs so as not to
   get lost in the woods.  <P>
<A NAME=TAG199><B>break</B></A> <P> 1. /vt./ To cause to be  <A HREF="JARGO~18.HTM#TAG207" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG207">broken</A> (in any sense).
   "Your latest patch to the editor broke the paragraph commands."
   2. /v./  (of a program) To stop temporarily, so that it may debugged.
   The place where it stops is a `breakpoint'.  3. [techspeak]
   /vi./ To send an RS-232 break (two character widths of line high)
   over a serial comm line.  4. [Unix] /vi./ To strike whatever key
   currently causes the tty driver to send SIGINT to the current
   process.  Normally, break (sense 3), delete or  <A HREF="JARGO~19.HTM#TAG335" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG335">control-C</A> does
   this.  5. `break break' may be said to interrupt a conversation
   (this is an example of verb doubling).  This usage comes from radio
   communications, which in turn probably came from landline
   telegraph/teleprinter usage, as badly abused in the Citizen's Band
   craze a few years ago.  <P>
<A NAME=TAG200><B>break-even point</B></A> /n./ <P> In the process of implementing a new
   computer language, the point at which the language is sufficiently
   effective that one can implement the language in itself.  That is,
   for a new language called, hypothetically, FOOGOL, one has reached
   break-even when one can write a demonstration compiler for FOOGOL
   in FOOGOL, discard the original implementation language, and
   thereafter use working versions of FOOGOL to develop newer ones.
   This is an important milestone; see  <A HREF="JARGO~30.HTM#TAG1137" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1137">MFTL</A>.  <P>
   Since this entry was first written, several correspondents have
   reported that there actually was a compiler for a tiny Algol-like
   language called Foogol floating around on various  <A HREF="JARGO~36.HTM#TAG1897" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1897">VAXen</A> in the
   early and mid-1980s.  A FOOGOL implementation is available at the
   Retrocomputing Museum <I><a href="../../tppmsgs/msgs9.htm#932" tppabs="http://www.ccil.org/retro">http://www.ccil.org/retro</a></I>. <P>
<A NAME=TAG201><B>breath-of-life packet</B></A> /n./ <P> [XEROX PARC] An Ethernet packet
   that contains bootstrap (see  <A HREF="JARGO~18.HTM#TAG180" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG180">boot</A>) code, periodically sent out
   from a working computer to infuse the `breath of life' into any
   computer on the network that has happened to crash.  Machines
   depending on such packets have sufficient hardware or firmware code
   to wait for (or request) such a packet during the reboot process.
   See also  <A HREF="JARGO~21.HTM#TAG463" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG463">dickless workstation</A>.  <P>
   The notional `kiss-of-death packet', with a function
   complementary to that of a breath-of-life packet, is recommended
   for dealing with hosts that consume too many network resources.
   Though `kiss-of-death packet' is usually used in jest, there is
   at least one documented instance of an Internet subnet with limited
   address-table slots in a gateway machine in which such packets were
   routinely used to compete for slots, rather like Christmas shoppers
   competing for scarce parking spaces.  <P>
<A NAME=TAG202><B>breedle</B></A> /n./ <P> See  <A HREF="JARGO~22.HTM#TAG602" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG602">feep</A>.
<P>
<A NAME=TAG203><B>bring X to its knees</B></A> /v./ <P> To present a machine, operating
   system, piece of software, or algorithm with a load so extreme or
    <A HREF="JARGO~34.HTM#TAG1338" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1338">pathological</A> that it grinds to a halt. "To bring a MicroVAX
   to its knees, try twenty users running  <A HREF="JARGO~36.HTM#TAG1909" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1909">vi</A> -- or four running
    <A HREF="JARGO~20.HTM#TAG548" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG548">EMACS</A>."  Compare  <A HREF="JARGO~26.HTM#TAG894" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG894">hog</A>.  <P>
<A NAME=TAG204><B>brittle</B></A> /adj./ <P> Said of software that is functional but easily
   broken by changes in operating environment or configuration, or by
   any minor tweak to the software itself.  Also, any system that
   responds inappropriately and disastrously to abnormal but expected
   external stimuli; e.g., a file system that is usually totally
   scrambled by a power failure is said to be brittle.  This term is
   often used to describe the results of a research effort that were
   never intended to be robust, but it can be applied to commercially
   developed software, which displays the quality far more often than
   it ought to.  Oppose  <A HREF="JARGO~33.HTM#TAG1511" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1511">robust</A>.  <P>
<A NAME=TAG205><B>broadcast storm</B></A> /n./ <P> An incorrect packet broadcast on a
   network that causes most hosts to respond all at once, typically
   with wrong answers that start the process over again.  See
    <A HREF="JARGO~29.HTM#TAG1241" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1241">network meltdown</A>; compare  <A HREF="JARGO~30.HTM#TAG1096" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1096">mail storm</A>.  <P>
<A NAME=TAG206><B>brochureware</B></A> /n./ <P> Planned but non-existent product like
    <A HREF="JARGO~36.HTM#TAG1893" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1893">vaporware</A>, but with the added implication that marketing is
   actively selling and promoting it (they've printed brochures).
   Brochureware is often deployed as a strategic weapon; the idea is
   to con customers into not committing to an existing product of the
   competition's.  It is a safe bet that when a brochureware product
   finally becomes real, it will be more expensive than and inferior
   to the alternatives that had been available for years.  <P>
<A NAME=TAG207><B>broken</B></A> /adj./ <P> 1. Not working properly (of programs).
   2. Behaving strangely; especially (when used of people) exhibiting
   extreme depression.  <P>
<A NAME=TAG208><B>broken arrow</B></A> /n./ <P> [IBM] The error code displayed on line 25
   of a 3270 terminal (or a PC emulating a 3270) for various kinds of
   protocol violations and "unexpected" error conditions (including
   connection to a  <A HREF="JARGO~21.HTM#TAG503" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG503">down</A> computer).  On a PC, simulated with
   `-&#62;/_', with the two center characters overstruck.  <P>
   Note: to appreciate this term fully, it helps to know that `broken
   arrow' is also military jargon for an accident involving nuclear
   weapons.... 
<P>
<A NAME=TAG209><B>BrokenWindows</B></A> /n./ <P> Abusive hackerism for the  <A HREF="JARGO~19.HTM#TAG393" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG393">crufty</A> and
    <A HREF="JARGO~20.HTM#TAG543" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG543">elephantine</A>  <A HREF="JARGO~37.HTM#TAG2017" tppabs="http://www.ccil.org/jargon/jargon_39.html#TAG2017">X</A> environment on Sun machines; properly
   called `OpenWindows'. <P>
<A NAME=TAG210><B>broket</B></A> /broh'k*t/ or /broh'ket`/ /n./ <P> [by analogy with
   `bracket': a `broken bracket'] Either of the characters
   <SAMP>`&#60;'</SAMP> and <SAMP>`&#62;'</SAMP>, when used as paired enclosing delimiters.
   This word originated as a contraction of the phrase `broken
   bracket', that is, a bracket that is bent in the middle.  (At MIT,
   and apparently in the  <A HREF="JARGO~33.HTM#TAG1482" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1482">Real World</A> as well, these are usually
   called  <A HREF="JARGO~17.HTM#TAG30" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG30">angle brackets</A>.) <P>
<A NAME=TAG211><B>Brooks's Law</B></A> /prov./ <P> "Adding manpower to a late software
   project makes it later" -- a result of the fact that the expected
   advantage from splitting work among @Math{N} programmers is
   @Math{O(N)} (that is, proportional to @Math{N}), but the complexity
   and communications cost associated with coordinating and then
   merging their work is @Math{O(N^2)} (that is, proportional to the
   square of @Math{N}).  The quote is from Fred Brooks, a manager of
   IBM's OS/360 project and author of "The Mythical Man-Month"
   (Addison-Wesley, 1975, ISBN 0-201-00650-2), an excellent early book
   on software engineering.  The myth in question has been most
   tersely expressed as "Programmer time is fungible" and Brooks
   established conclusively that it is not.  Hackers have never
   forgotten his advice; too often,  <A HREF="JARGO~30.HTM#TAG1101" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1101">management</A> still does.  See
   also  <A HREF="JARGO~19.HTM#TAG377" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG377">creationism</A>,  <A HREF="JARGO~46.HTM#TAG1571" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1571">second-system effect</A>,  <A HREF="JARGO~32.HTM#TAG1303" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1303">optimism</A>.  <P>
<A NAME=TAG212><B>browser</B></A> /n./ <P> A program specifically designed to help users view
   and navigate hypertext, on-line documentation, or a database.
   While this general sense has been present in jargon for a long
   time, the proliferation of browsers for the World Wide Web after
   1992 has made it much more popular and provided a central or
   default meaning of the word previously lacking in hacker usage.
   Nowadays, if someone mentions using a `browser' without
   qualification, one may assume it is a Web browser. <P>
<A NAME=TAG213><B>BRS</B></A> /B-R-S/ /n./ <P> Syn.  <A HREF="JARGO~18.HTM#TAG107" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG107">Big Red Switch</A>.  This
   abbreviation is fairly common on-line.  <P>
<A NAME=TAG214><B>brute force</B></A> /adj./ <P> Describes a primitive programming style,
   one in which the programmer relies on the computer's processing
   power instead of using his or her own intelligence to simplify the
   problem, often ignoring problems of scale and applying naive
   methods suited to small problems directly to large ones.  The term
   can also be used in reference to programming style: brute-force
   programs are written in a heavyhanded, tedious way, full of
   repetition and devoid of any elegance or useful abstraction (see
   also  <A HREF="JARGO~18.HTM#TAG215" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG215">brute force and ignorance</A>).  <P>
   The  <A HREF="JARGO~19.HTM#TAG250" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG250">canonical</A> example of a brute-force algorithm is associated
   with the `traveling salesman problem' (TSP), a classical
    <A HREF="JARGO~29.HTM#TAG1269" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1269">NP-</A>hard problem: Suppose a person is in, say, Boston, and
   wishes to drive to @Math{N} other cities.  In what order should the
   cities be visited in order to minimize the distance travelled?  The
   brute-force method is to simply generate all possible routes and
   compare the distances; while guaranteed to work and simple to
   implement, this algorithm is clearly very stupid in that it
   considers even obviously absurd routes (like going from Boston to
   Houston via San Francisco and New York, in that order).  For very
   small @Math{N} it works well, but it rapidly becomes absurdly
   inefficient when @Math{N} increases (for @Math{N = 15}, there are
   already 1,307,674,368,000 possible routes to consider, and for
   @Math{N = 1000} -- well, see  <A HREF="JARGO~18.HTM#TAG111" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG111">bignum</A>).  Sometimes,
   unfortunately, there is no better general solution than brute
   force.  See also  <A HREF="JARGO~29.HTM#TAG1269" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1269">NP-</A>.  <P>
   A more simple-minded example of brute-force programming is finding
   the smallest number in a large list by first using an existing
   program to sort the list in ascending order, and then picking the
   first number off the front.  <P>
   Whether brute-force programming should actually be considered
   stupid or not depends on the context; if the problem is not
   terribly big, the extra CPU time spent on a brute-force solution
   may cost less than the programmer time it would take to develop a
   more `intelligent' algorithm.  Additionally, a more intelligent
   algorithm may imply more long-term complexity cost and bug-chasing
   than are justified by the speed improvement.  <P>
   Ken Thompson, co-inventor of Unix, is reported to have uttered the
   epigram "When in doubt, use brute force".  He probably intended
   this as a  <A HREF="JARGO~26.HTM#TAG823" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG823">ha ha only serious</A>, but the original Unix kernel's
   preference for simple, robust, and portable algorithms over
    <A HREF="JARGO~18.HTM#TAG204" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG204">brittle</A> `smart' ones does seem to have been a significant
   factor in the success of that OS.  Like so many other tradeoffs in
   software design, the choice between brute force and complex,
   finely-tuned cleverness is often a difficult one that requires both
   engineering savvy and delicate esthetic judgment.  <P>
<A NAME=TAG215><B>brute force and ignorance</B></A> /n./ <P> A popular design technique at
   many software houses --  <A HREF="JARGO~18.HTM#TAG214" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG214">brute force</A> coding unrelieved by any
   knowledge of how problems have been previously solved in elegant
   ways.  Dogmatic adherence to design methodologies tends to
   encourage this sort of thing.  Characteristic of early  <A HREF="JARGO~28.HTM#TAG1011" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1011">larval stage</A> programming; unfortunately, many never outgrow it.  Often
   abbreviated BFI: "Gak, they used a  <A HREF="JARGO~18.HTM#TAG219" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG219">bubble sort</A>!  That's
   strictly from BFI."  Compare  <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A>.  <P>
<A NAME=TAG216><B>BSD</B></A> /B-S-D/ /n./ <P> [abbreviation for `Berkeley Software
   Distribution'] a family of  <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A> versions for the  <A HREF="JARGO~21.HTM#TAG435" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG435">DEC</A>
    <A HREF="JARGO~36.HTM#TAG1895" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1895">VAX</A> and PDP-11 developed by Bill Joy and others at
    <A HREF="JARGO~18.HTM#TAG98" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG98">Berzerkeley</A> starting around 1980, incorporating paged virtual
   memory, TCP/IP networking enhancements, and many other features.
   The BSD versions (4.1, 4.2, and 4.3) and the commercial versions
   derived from them (SunOS, ULTRIX, and Mt. Xinu) held the technical
   lead in the Unix world until AT&#38;T's successful standardization
   efforts after about 1986, and are still widely popular.  Note that
   BSD versions going back to 2.9 are often referred to by their
   version numbers, without the BSD prefix.  See  <A HREF="JARGO~50.HTM#TAG2055" tppabs="http://www.ccil.org/jargon/jargon_42.html#TAG2055">4.2</A>,  <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A>,
    <A HREF="JARGO~35.HTM#TAG1886" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1886">USG Unix</A>.  <P>
<A NAME=TAG217><B>BUAF</B></A> // /n./ <P> [abbreviation, from <I><a href="news:alt.fan.warlord">alt.fan.warlord</a></I>] Big
   Ugly ASCII Font -- a special form of  <A HREF="JARGO~17.HTM#TAG44" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG44">ASCII art</A>.  Various
   programs exist for rendering text strings into block, bloob, and
   pseudo-script fonts in cells between four and six character cells
   on a side; this is smaller than the letters generated by older
    <A HREF="JARGO~18.HTM#TAG72" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG72">banner</A> (sense 2) programs.  These are sometimes used to render
   one's name in a  <A HREF="JARGO~46.HTM#TAG1607" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1607">sig block</A>, and are critically referred to as
   `BUAF's.  See  <A HREF="JARGO~40.HTM#TAG1941" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1941">warlording</A>.  <P>
<A NAME=TAG218><B>BUAG</B></A> // /n./ <P> [abbreviation, from <I><a href="news:alt.fan.warlord">alt.fan.warlord</a></I>] Big
   Ugly ASCII Graphic.  Pejorative term for ugly  <A HREF="JARGO~17.HTM#TAG44" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG44">ASCII art</A>,
   especially as found in  <A HREF="JARGO~46.HTM#TAG1607" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1607">sig block</A>s.  For some reason, mutations
   of the head of Bart Simpson are particularly common in the least
   imaginative  <A HREF="JARGO~46.HTM#TAG1607" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1607">sig block</A>s.  See  <A HREF="JARGO~40.HTM#TAG1941" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1941">warlording</A>.  <P>
<A NAME=TAG219><B>bubble sort</B></A> /n./ <P> Techspeak for a particular sorting technique
   in which pairs of adjacent values in the list to be sorted are
   compared and interchanged if they are out of order; thus, list
   entries `bubble upward' in the list until they bump into one
   with a lower sort value.  Because it is not very good relative to
   other methods and is the one typically stumbled on by  <A HREF="JARGO~29.HTM#TAG1207" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1207">naive</A>
   and untutored programmers, hackers consider it the  <A HREF="JARGO~19.HTM#TAG250" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG250">canonical</A>
   example of a naive algorithm.  The canonical example of a really
   <EM>bad</EM> algorithm is  <A HREF="JARGO~18.HTM#TAG165" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG165">bogo-sort</A>.  A bubble sort might be
   used out of ignorance, but any use of bogo-sort could issue only
   from brain damage or willful perversity.  <P>
<A NAME=TAG220><B>bucky bits</B></A> /buh'kee bits/ /n./ <P> 1. obs. The bits produced by
   the CONTROL and META shift keys on a SAIL keyboard (octal 200 and
   400 respectively), resulting in a 9-bit keyboard character set.
   The MIT AI TV (Knight) keyboards extended this with TOP and
   separate left and right CONTROL and META keys, resulting in a
   12-bit character set; later, LISP Machines added such keys as
   SUPER, HYPER, and GREEK (see  <A HREF="JARGO~46.HTM#TAG1667" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1667">space-cadet keyboard</A>).  2. By
   extension, bits associated with `extra' shift keys on any
   keyboard, e.g., the ALT on an IBM PC or command and option keys on
   a Macintosh.  <P>
   It has long been rumored that `bucky bits' were named for
   Buckminster Fuller during a period when he was consulting at
   Stanford.  Actually, bucky bits were invented by Niklaus Wirth when
   <EM>he</EM> was at Stanford in 1964--65; he first suggested the idea
   of an EDIT key to set the 8th bit of an otherwise 7-bit ASCII
   character).  It seems that, unknown to Wirth, certain Stanford
   hackers had privately nicknamed him `Bucky' after a prominent
   portion of his dental anatomy, and this nickname transferred to the
   bit.  Bucky-bit commands were used in a number of editors written
   at Stanford, including most notably TV-EDIT and NLS.  <P>
   The term spread to MIT and CMU early and is now in general use.
   Ironically, Wirth himself remained unaware of its derivation for
   nearly 30 years, until GLS dug up this history in early 1993!  See
    <A HREF="JARGO~21.HTM#TAG500" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG500">double bucky</A>,  <A HREF="JARGO~31.HTM#TAG1442" tppabs="http://www.ccil.org/jargon/jargon_32.html#TAG1442">quadruple bucky</A>.  <P>
<A NAME=TAG221><B>buffer chuck</B></A> /n./ <P> Shorter and ruder syn. for  <A HREF="JARGO~18.HTM#TAG222" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG222">buffer overflow</A>. <P>
<A NAME=TAG222><B>buffer overflow</B></A> /n./ <P> What happens when you try to stuff more
   data into a buffer (holding area) than it can handle.  This may be
   due to a mismatch in the processing rates of the producing and
   consuming processes (see  <A HREF="JARGO~32.HTM#TAG1316" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1316">overrun</A> and  <A HREF="JARGO~22.HTM#TAG628" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG628">firehose syndrome</A>),
   or because the buffer is simply too small to hold all the data that
   must accumulate before a piece of it can be processed.  For
   example, in a text-processing tool that  <A HREF="JARGO~19.HTM#TAG395" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG395">crunch</A>es a line at a
   time, a short line buffer can result in  <A HREF="JARGO~28.HTM#TAG1071" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1071">lossage</A> as input from
   a long line overflows the buffer and trashes data beyond it.  Good
   defensive programming would check for overflow on each character
   and stop accepting data when the buffer is full up.  The term is
   used of and by humans in a metaphorical sense.  "What time did I
   agree to meet you?  My buffer must have overflowed."  Or "If I
   answer that phone my buffer is going to overflow."  See also
    <A HREF="JARGO~46.HTM#TAG1672" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1672">spam</A>,  <A HREF="JARGO~32.HTM#TAG1317" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1317">overrun screw</A>.  <P>
<A NAME=TAG223><B>bug</B></A> /n./ <P> An unwanted and unintended property of a program or
   piece of hardware, esp. one that causes it to malfunction.
   Antonym of  <A HREF="JARGO~22.HTM#TAG597" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG597">feature</A>.  Examples: "There's a bug in the editor:
   it writes things out backwards."  "The system crashed because of
   a hardware bug."  "Fred is a winner, but he has a few bugs"
   (i.e., Fred is a good guy, but he has a few personality problems).  <P>
   Historical note: Admiral Grace Hopper (an early computing pioneer
   better known for inventing  <A HREF="JARGO~19.HTM#TAG303" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG303">COBOL</A>) liked to tell a story in
   which a technician solved a  <A HREF="JARGO~23.HTM#TAG760" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG760">glitch</A> in the Harvard Mark II
   machine by pulling an actual insect out from between the contacts
   of one of its relays, and she subsequently promulgated  <A HREF="JARGO~18.HTM#TAG223" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG223">bug</A> in
   its hackish sense as a joke about the incident (though, as she was
   careful to admit, she was not there when it happened).  For many
   years the logbook associated with the incident and the actual bug
   in question (a moth) sat in a display case at the Naval Surface
   Warfare Center (NSWC).  The entire story, with a picture of the
   logbook and the moth taped into it, is recorded in the "Annals
   of the History of Computing", Vol. 3, No. 3 (July 1981),
   pp. 285--286.  <P>
   The text of the log entry (from September 9, 1947), reads "1545
   Relay #70 Panel F (moth) in relay.  First actual case of bug being
   found".  This wording establishes that the term was already
   in use at the time in its current specific sense -- and Hopper
   herself reports that the term `bug' was regularly applied to
   problems in radar electronics during WWII.  <P>
   Indeed, the use of `bug' to mean an industrial defect was already
   established in Thomas Edison's time, and a more specific and rather
   modern use can be found in an electrical handbook from 1896
   ("Hawkin's New Catechism of Electricity", Theo. Audel &#38; Co.)
   which says: "The term `bug' is used to a limited extent to
   designate any fault or trouble in the connections or working of
   electric apparatus."  It further notes that the term is "said to
   have originated in quadruplex telegraphy and have been transferred
   to all electric apparatus." <P>
   The latter observation may explain a common folk etymology of the
   term; that it came from telephone company usage, in which "bugs in
   a telephone cable" were blamed for noisy lines.  Though this
   derivation seems to be mistaken, it may well be a distorted memory
   of a joke first current among <EM>telegraph</EM> operators more than
   a century ago! <P>
   Or perhaps not a joke.  Historians of the field inform us that the
   term "bug" was regularly used in the early days of telegraphy to
   refer to a variety of semi-automatic telegraphy keyers that would
   send a string of dots if you held them down.  In fact, the
   Vibroplex keyers (which were among the most common of this type)
   even had a graphic of a beetle on them!  While the ability to send
   repeated dots automatically was very useful for professional morse
   code operators, these were also significantly trickier to use than
   the older manual keyers, and it could take some practice to ensure
   one didn't introduce extraneous dots into the code by holding the
   key down a fraction too long.  In the hands of an inexperienced
   operator, a Vibroplex "bug" on the line could mean that a lot
   of garbled Morse would soon be coming your way.  <P>
   Actually, use of `bug' in the general sense of a disruptive event
   goes back to Shakespeare!  In the first edition of Samuel Johnson's
   dictionary one meaning of `bug' is "A frightful object; a
   walking spectre"; this is traced to `bugbear', a Welsh term for
   a variety of mythological monster which (to complete the circle)
   has recently been reintroduced into the popular lexicon through
   fantasy role-playing games.  <P>
   In any case, in jargon the word almost never refers to insects.
   Here is a plausible conversation that never actually happened:<P>
   "There is a bug in this ant farm!"
<P>
   "What do you mean?  I don't see any ants in it."
<P>
   "That's the bug."
<P>
   A careful discussion of the etymological issues can be found in a
   paper by Fred R. Shapiro, 1987, "Entomology of the Computer Bug:
   History and Folklore", American Speech 62(4):376-378. <P>
   [There has been a widespread myth that the original bug was moved
   to the Smithsonian, and an earlier version of this entry so
   asserted.  A correspondent who thought to check discovered that the
   bug was not there.  While investigating this in late 1990, your
   editor discovered that the NSWC still had the bug, but had
   unsuccessfully tried to get the Smithsonian to accept it -- and
   that the present curator of their History of American Technology
   Museum didn't know this and agreed that it would make a worthwhile
   exhibit.  It was moved to the Smithsonian in mid-1991, but due to
   space and money constraints has not yet been exhibited.  Thus, the
   process of investigating the original-computer-bug bug fixed it in
   an entirely unexpected way, by making the myth true!  --ESR]
<P>
<A NAME=TAG224><B>bug-compatible</B></A> /adj./ <P> Said of a design or revision that has
   been badly compromised by a requirement to be compatible with
    <A HREF="JARGO~22.HTM#TAG686" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG686">fossil</A>s or  <A HREF="JARGO~30.HTM#TAG1153" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1153">misfeature</A>s in other programs or (esp.)
   previous releases of itself. "MS-DOS 2.0 used \ as a path
   separator to be bug-compatible with some cretin's choice of / as an
   option character in 1.0." <P>
<A NAME=TAG225><B>bug-for-bug compatible</B></A> /n./ <P> Same as  <A HREF="JARGO~18.HTM#TAG224" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG224">bug-compatible</A>, with
   the additional implication that much tedious effort went into
   ensuring that each (known) bug was replicated.  <P>
<A NAME=TAG226><B>bug-of-the-month club</B></A> /n./ <P> [from "book-of-the-month
   club", a time-honored mail-order-marketing technique in the U.S.]
   A mythical club which users of `sendmail(1)' (the UNIX mail
   daemon) belong to; this was coined on the Usenet newsgroup
   comp.security.unix at a time when sendmail security holes, which
   allowed outside  <A HREF="JARGO~19.HTM#TAG365" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG365">cracker</A>s access to the system, were being
   uncovered at an alarming rate, forcing sysadmins to update very
   often.  Also, more completely, `fatal security bug-of-the-month
   club'. <P>
<A NAME=TAG227><B>buglix</B></A> /buhg'liks/ /n./ <P> Pejorative term referring to
    <A HREF="JARGO~21.HTM#TAG435" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG435">DEC</A>'s ULTRIX operating system in its earlier <EM>severely</EM>
   buggy versions.  Still used to describe ULTRIX, but without nearly
   so much venom.  Compare  <A HREF="JARGO~17.HTM#TAG18" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG18">AIDX</A>,  <A HREF="JARGO~26.HTM#TAG909" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG909">HP-SUX</A>,  <A HREF="JARGO~29.HTM#TAG1263" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1263">Nominal Semidestructor</A>,  <A HREF="JARGO~38.HTM#TAG1763" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1763">Telerat</A>,  <A HREF="JARGO~46.HTM#TAG1720" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1720">sun-stools</A>.  <P>
<A NAME=TAG228><B>bulletproof</B></A> /adj./ <P> Used of an algorithm or implementation
   considered extremely  <A HREF="JARGO~33.HTM#TAG1511" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1511">robust</A>; lossage-resistant; capable of
   correctly recovering from any imaginable exception condition -- a
   rare and valued quality.  Syn.  <A HREF="JARGO~17.HTM#TAG39" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG39">armor-plated</A>.  <P>
<A NAME=TAG229><B>bum</B></A> <P> 1. /vt./ To make highly efficient, either in time or
   space, often at the expense of clarity.  "I managed to bum three
   more instructions out of that code."  "I spent half the night
   bumming the interrupt code."  In 1996, this term and the practice it
   describes are semi-obsolete. In  <A HREF="JARGO~20.HTM#TAG541" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG541">elder days</A>, John McCarthy
   (inventor of  <A HREF="JARGO~28.HTM#TAG1047" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1047">LISP</A>) used to compare some efficiency-obsessed
   hackers among his students to "ski bums"; thus, optimization
   became "program bumming", and eventually just "bumming".  2. To
   squeeze out excess; to remove something in order to improve
   whatever it was removed from (without changing function; this
   distinguishes the process from a  <A HREF="JARGO~22.HTM#TAG601" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG601">featurectomy</A>).  3. /n./ A small
   change to an algorithm, program, or hardware device to make it more
   efficient.  "This hardware bum makes the jump instruction
   faster."  Usage: now uncommon, largely superseded by /v./  <A HREF="JARGO~38.HTM#TAG1848" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1848">tune</A>
   (and /n./  <A HREF="JARGO~38.HTM#TAG1852" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1852">tweak</A>,  <A HREF="JARGO~26.HTM#TAG824" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG824">hack</A>), though none of these exactly
   capture sense 2.  All these uses are rare in Commonwealth hackish,
   because in the parent dialects of English `bum' is a rude synonym
   for `buttocks'.  <P>
<A NAME=TAG230><B>bump</B></A> /vt./ <P> Synonym for increment.  Has the same meaning as
   C's ++ operator.  Used esp. of counter variables, pointers, and
   index dummies in <CODE>for</CODE>, <CODE>while</CODE>, and <CODE>do-while</CODE>
   loops.  <P>
<A NAME=TAG231><B>burble</B></A> /v./ <P> [from Lewis Carroll's "Jabberwocky"] Like
    <A HREF="JARGO~22.HTM#TAG642" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG642">flame</A>, but connotes that the source is truly clueless and
   ineffectual (mere flamers can be competent).  A term of deep
   contempt.  "There's some guy on the phone burbling about how he
   got a DISK FULL error and it's all our comm software's fault."
   This is mainstream slang in some parts of England.  <P>
<A NAME=TAG232><B>buried treasure</B></A> /n./ <P> A surprising piece of code found in some
   program.  While usually not wrong, it tends to vary from
    <A HREF="JARGO~19.HTM#TAG393" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG393">crufty</A> to  <A HREF="JARGO~18.HTM#TAG136" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG136">bletcherous</A>, and has lain undiscovered only
   because it was functionally correct, however horrible it is.  Used
   sarcastically, because what is found is anything <EM>but</EM>
   treasure.  Buried treasure almost always needs to be dug up and
   removed.  "I just found that the scheduler sorts its queue using
    <A HREF="JARGO~18.HTM#TAG219" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG219">bubble sort</A>!  Buried treasure!" <P>
<A NAME=TAG233><B>burn-in period</B></A> /n./ <P> 1. A factory test designed to catch
   systems with  <A HREF="JARGO~30.HTM#TAG1108" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1108">marginal</A> components before they get out the door;
   the theory is that burn-in will protect customers by outwaiting the
   steepest part of the  <A HREF="JARGO~18.HTM#TAG83" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG83">bathtub curve</A> (see  <A HREF="JARGO~24.HTM#TAG936" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG936">infant mortality</A>).  2. A period of indeterminate length in which a person
   using a computer is so intensely involved in his project that he
   forgets basic needs such as food, drink, sleep, etc.  Warning:
   Excessive burn-in can lead to burn-out.  See  <A HREF="JARGO~26.HTM#TAG826" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG826">hack mode</A>,
    <A HREF="JARGO~28.HTM#TAG1011" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1011">larval stage</A>.  <P>
   Historical note:  the origin of "burn-in" (sense 1) is apparently
   the practice of setting a new-model airplane's brakes on fire, then
   extinguishing the fire, in order to make them hold better.  This was
   done on the first version of the U.S. spy-plane, the U-2. <P>
<A NAME=TAG234><B>burst page</B></A> /n./ <P> Syn.  <A HREF="JARGO~18.HTM#TAG72" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG72">banner</A>, sense 1.
<P>
<A NAME=TAG235><B>busy-wait</B></A> /vi./ <P> Used of human behavior, conveys that the
   subject is busy waiting for someone or something, intends to move
   instantly as soon as it shows up, and thus cannot do anything else
   at the moment.  "Can't talk now, I'm busy-waiting till Bill gets
   off the phone."<P>
   Technically, `busy-wait' means to wait on an event by
    <A HREF="JARGO~46.HTM#TAG1679" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1679">spin</A>ning through a tight or timed-delay loop that polls for
   the event on each pass, as opposed to setting up an interrupt
   handler and continuing execution on another part of the task.  This
   is a wasteful technique, best avoided on time-sharing systems where
   a busy-waiting program may  <A HREF="JARGO~26.HTM#TAG894" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG894">hog</A> the processor.  <P>
<A NAME=TAG236><B>buzz</B></A> /vi./ <P> 1. Of a program, to run with no indication of
   progress and perhaps without guarantee of ever finishing; esp.
   said of programs thought to be executing tight loops of code.  A
   program that is buzzing appears to be  <A HREF="JARGO~19.HTM#TAG259" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG259">catatonic</A>, but never
   gets out of catatonia, while a buzzing loop may eventually end of
   its own accord.  "The program buzzes for about 10 seconds trying
   to sort all the names into order."  See  <A HREF="JARGO~46.HTM#TAG1679" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1679">spin</A>; see also
    <A HREF="JARGO~23.HTM#TAG811" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG811">grovel</A>.  2. [ETA Systems] To test a wire or printed circuit
   trace for continuity by applying an AC rather than DC signal.  Some
   wire faults will pass DC tests but fail a buzz test.  3. To process
   an array or list in sequence, doing the same thing to each element.
   "This loop buzzes through the tz array looking for a terminator
   type."<P>
<A NAME=TAG237><B>BWQ</B></A> /B-W-Q/ /n./ <P> [IBM: abbreviation, `Buzz Word Quotient']
   The percentage of buzzwords in a speech or documents.  Usually
   roughly proportional to  <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A>.  See  <A HREF="JARGO~38.HTM#TAG1805" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1805">TLA</A>.  <P>
<A NAME=TAG238><B>by hand</B></A> /adv./ <P> 1. Said of an operation (especially a
   repetitive, trivial, and/or tedious one) that ought to be performed
   automatically by the computer, but which a hacker instead has to
   step tediously through.  "My mailer doesn't have a command to
   include the text of the message I'm replying to, so I have to do it
   by hand."  This does not necessarily mean the speaker has to
   retype a copy of the message; it might refer to, say, dropping into
   a subshell from the mailer, making a copy of one's mailbox file,
   reading that into an editor, locating the top and bottom of the
   message in question, deleting the rest of the file, inserting `&#62;'
   characters on each line, writing the file, leaving the editor,
   returning to the mailer, reading the file in, and later remembering
   to delete the file.  Compare  <A HREF="JARGO~20.HTM#TAG579" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG579">eyeball search</A>.  2. By extension,
   writing code which does something in an explicit or low-level way
   for which a presupplied library routine ought to have been
   available.  "This cretinous B-tree library doesn't supply a decent
   iterator, so I'm having to walk the trees by hand."<P>
<A NAME=TAG239><B>byte</B></A> /bi:t/ /n./ <P> [techspeak] A unit of memory or data equal to
   the amount used to represent one character; on modern architectures
   this is usually 8 bits, but may be 9 on 36-bit machines.  Some
   older architectures used `byte' for quantities of 6 or 7 bits, and
   the PDP-10 supported `bytes' that were actually bitfields of
   1 to 36 bits!  These usages are now obsolete, and even 9-bit bytes
   have become rare in the general trend toward power-of-2 word sizes.  <P>
   Historical note: The term was coined by Werner Buchholz in 1956
   during the early design phase for the IBM Stretch computer;
   originally it was described as 1 to 6 bits (typical I/O equipment
   of the period used 6-bit chunks of information).  The move to an
   8-bit byte happened in late 1956, and this size was later adopted
   and promulgated as a standard by the System/360.  The word was
   coined by mutating the word `bite' so it would not be
   accidentally misspelled as  <A HREF="JARGO~18.HTM#TAG113" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG113">bit</A>.  See also  <A HREF="JARGO~29.HTM#TAG1278" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1278">nybble</A>.  <P>
<A NAME=TAG240><B>bytesexual</B></A> /bi:t`sek'shu-*l/ /adj./ <P> Said of hardware,
   denotes willingness to compute or pass data in either
    <A HREF="JARGO~18.HTM#TAG110" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG110">big-endian</A> or  <A HREF="JARGO~28.HTM#TAG1051" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1051">little-endian</A> format (depending,
   presumably, on a  <A HREF="JARGO~30.HTM#TAG1161" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1161">mode bit</A> somewhere).  See also  <A HREF="JARGO~29.HTM#TAG1277" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1277">NUXI problem</A>. <P>
<A NAME=TAG241><B>bzzzt, wrong</B></A> /bzt rong/ /excl./ <P> [Usenet/Internet] From a Robin
   Williams routine in the movie "Dead Poets Society" spoofing
   radio or TV quiz programs, such as <EM>Truth or Consequences</EM>,
   where an incorrect answer earns one a blast from the buzzer and
   condolences from the interlocutor.  A way of expressing mock-rude
   disagreement, usually immediately following an included quote from
   another poster.  The less abbreviated "*Bzzzzt*, wrong, but thank
   you for playing" is also common; capitalization and emphasis of
   the buzzer sound varies.  <P>
<P>Go to the <A HREF="JARGO~17.HTM" tppabs="http://www.ccil.org/jargon/jargon_16.html">previous</A>, <A HREF="JARGO~19.HTM" tppabs="http://www.ccil.org/jargon/jargon_18.html">next</A> section.<P>
</BODY>
</HTML>
