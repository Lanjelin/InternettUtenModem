<!doctype HTML public "-//W3O//DTD W3 HTML 2.0//EN">
<!-- This HTML file was created by texi2html 1.28
     from jargon.tex on 26 July 1996 -->
<HTML>
<HEAD>

<TITLE>The New Hacker's Dictionary  - = D =</TITLE>
</HEAD>
<BODY>
<P>Go to the <A HREF="JARGO~19.HTM" tppabs="http://www.ccil.org/jargon/jargon_18.html">previous</A>, <A HREF="JARGO~20.HTM" tppabs="http://www.ccil.org/jargon/jargon_20.html">next</A> section.<P>
<H2><A NAME="SEC26" HREF="JARGON~1.HTM#SEC26" tppabs="http://www.ccil.org/jargon/jargon_toc.html#SEC26">= D =</A></H2>



<A NAME=TAG414><B>D. C. Power Lab</B></A> /n./ <P> The former site of  <A HREF="JARGO~46.HTM#TAG1539" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1539">SAIL</A>.  Hackers
   thought this was very funny because the obvious connection to
   electrical engineering was nonexistent -- the lab was named for a
   Donald C.  Power.  Compare  <A HREF="JARGO~30.HTM#TAG1109" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1109">Marginal Hacks</A>.  <P>
<A NAME=TAG415><B>daemon</B></A> /day'mn/ or /dee'mn/ /n./ <P> [from the mythological
   meaning, later rationalized as the acronym `Disk And Execution
   MONitor'] A program that is not invoked explicitly, but lies
   dormant waiting for some condition(s) to occur.  The idea is that
   the perpetrator of the condition need not be aware that a daemon is
   lurking (though often a program will commit an action only because
   it knows that it will implicitly invoke a daemon).  For example,
   under  <A HREF="JARGO~24.HTM#TAG958" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG958">ITS</A> writing a file on the  <A HREF="JARGO~28.HTM#TAG1076" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1076">LPT</A> spooler's directory
   would invoke the spooling daemon, which would then print the file.
   The advantage is that programs wanting (in this example) files
   printed need neither compete for access to nor understand any
   idiosyncrasies of the  <A HREF="JARGO~28.HTM#TAG1076" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1076">LPT</A>.  They simply enter their implicit
   requests and let the daemon decide what to do with them.  Daemons
   are usually spawned automatically by the system, and may either
   live forever or be regenerated at intervals.  <P>
   Daemon and  <A HREF="JARGO~21.HTM#TAG454" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG454">demon</A> are often used interchangeably, but seem to
   have distinct connotations.  The term `daemon' was introduced to
   computing by  <A HREF="JARGO~19.HTM#TAG398" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG398">CTSS</A> people (who pronounced it /dee'mon/) and
   used it to refer to what ITS called a  <A HREF="JARGO~21.HTM#TAG508" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG508">dragon</A>.  Although the
   meaning and the pronunciation have drifted, we think this glossary
   reflects current (1996) usage.  <P>
<A NAME=TAG416><B>daemon book</B></A> /n./ <P> "The Design and Implementation of the
   4.3BSD UNIX Operating System", by Samuel J. Leffler, Marshall Kirk
   McKusick, Michael J. Karels, and John S. Quarterman (Addison-Wesley
   Publishers, 1989, ISBN 0-201-06196-1) -- the standard reference
   book on the internals of  <A HREF="JARGO~18.HTM#TAG216" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG216">BSD</A> Unix.  So called because the
   cover has a picture depicting a little devil (a visual play on
    <A HREF="JARGO~21.HTM#TAG415" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG415">daemon</A>) in sneakers, holding a pitchfork (referring to one of
   the characteristic features of Unix, the <CODE>fork(2)</CODE> system
   call).  Also known as the  <A HREF="JARGO~21.HTM#TAG462" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG462">Devil Book</A>.
<P>
<A NAME=TAG417><B>dahmum</B></A> /dah'mum/ /n./ <P> [Usenet] The material of which
   protracted  <A HREF="JARGO~22.HTM#TAG645" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG645">flame war</A>s, especially those about operating
   systems, is composed.  Homeomorphic to  <A HREF="JARGO~46.HTM#TAG1672" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1672">spam</A>.  The term
   `dahmum' is derived from the name of a militant  <A HREF="JARGO~32.HTM#TAG1310" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1310">OS/2</A>
   advocate, and originated when an extensively crossposted
   OS/2-versus- <A HREF="JARGO~28.HTM#TAG1044" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1044">Linux</A> debate was fed through  <A HREF="JARGO~21.HTM#TAG483" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG483">Dissociated Press</A>. <P>
<A NAME=TAG418><B>dangling pointer</B></A> /n./ <P> A reference that doesn't actually lead
   anywhere (in C and some other languages, a pointer that doesn't
   actually point at anything valid).  Usually this happens because it
   formerly pointed to something that has moved or disappeared.  Used
   as jargon in a generalization of its techspeak meaning; for
   example, a local phone number for a person who has since moved to
   the other coast is a dangling pointer.  Compare  <A HREF="JARGO~21.HTM#TAG428" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG428">dead link</A>.  <P>
<A NAME=TAG419><B>dark-side hacker</B></A> /n./ <P> A criminal or malicious hacker; a
    <A HREF="JARGO~19.HTM#TAG365" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG365">cracker</A>.  From George Lucas's Darth Vader, "seduced by the
   dark side of the Force".  The implication that hackers form a sort
   of elite of technological Jedi Knights is intended.  Oppose
    <A HREF="JARGO~46.HTM#TAG1546" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1546">samurai</A>.  <P>
<A NAME=TAG420><B>Datamation</B></A> /day`t*-may'sh*n/ /n./ <P> A magazine that many
   hackers assume all  <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>s read.  Used to question an unbelieved
   quote, as in "Did you read that in `Datamation?"' (But see
   below; this slur may be dated by the time you read this.) It used
   to publish something hackishly funny every once in a while, like
   the original paper on  <A HREF="JARGO~19.HTM#TAG313" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG313">COME FROM</A> in 1973, and Ed Post's
   "Real Programmers Don't Use Pascal" ten years later, but for
   a long time after that it was much more exclusively
    <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>-oriented and boring.  Following a change of editorship in
   1994, Datamation is trying for more of the technical content and
   irreverent humor that marked its early days.  <P>
   Datamation now has a WWW page at <I><a href="../../TPPMSGS/MSGS9.HTM#974" tppabs="http://www.datamation.com/">http://www.datamation.com</a></I>
   worth visiting for its selection of computer humor, including
   "Real Programmers Don't Use Pascal" and the `Bastard Operator
   From Hell' stories by Simon Travaglia (see  <A HREF="JARGO~18.HTM#TAG164" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG164">BOFH</A>). <P>
<A NAME=TAG421><B>DAU</B></A> /dow/ [German FidoNet] /n./ <P> German acronym for
   D&uuml;mmster Anzunehmender User (stupidest imaginable user).
   From the engineering-slang GAU for Gr&ouml;sster Anzunehmender
   Unfall, worst assumable accident, esp. of a LNG tank farm plant
   or something with similarly disastrous consequences.  In popular
   German, GAU is used only to refer to worst-case nuclear acidents
   such as a core meltdown. See  <A HREF="JARGO~19.HTM#TAG382" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG382">cretin</A>,  <A HREF="JARGO~22.HTM#TAG672" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG672">fool</A>,  <A HREF="JARGO~28.HTM#TAG1068" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1068">loser</A> and
    <A HREF="JARGO~40.HTM#TAG1948" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1948">weasel</A>.  <P>
<A NAME=TAG422><B>day mode</B></A> /n./ <P> See  <A HREF="JARGO~34.HTM#TAG1360" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1360">phase</A> (sense 1).  Used of people only.  <P>
<A NAME=TAG423><B>dd</B></A> /dee-dee/ /vt./ <P> [Unix: from IBM  <A HREF="JARGO~25.HTM#TAG965" tppabs="http://www.ccil.org/jargon/jargon_25.html#TAG965">JCL</A>] Equivalent to
    <A HREF="JARGO~19.HTM#TAG258" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG258">cat</A> or  <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A>.  Originally the name of a Unix copy command
   with special options suitable for block-oriented devices; it was
   often used in heavy-handed system maintenance, as in "Let's
   <CODE>dd</CODE> the root partition onto a tape, then use the boot PROM to
   load it back on to a new disk".  The Unix <CODE>dd(1)</CODE> was
   designed with a weird, distinctly non-Unixy keyword option syntax
   reminiscent of IBM System/360 JCL (which had an elaborate DD
   `Dataset Definition' specification for I/O devices); though the
   command filled a need, the interface design was clearly a prank.
   The jargon usage is now very rare outside Unix sites and now nearly
   obsolete even there, as <CODE>dd(1)</CODE> has been  <A HREF="JARGO~21.HTM#TAG457" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG457">deprecated</A> for a
   long time (though it has no exact replacement).  The term has been
   displaced by  <A HREF="JARGO~18.HTM#TAG151" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG151">BLT</A> or simple English `copy'.  <P>
<A NAME=TAG424><B>DDT</B></A> /D-D-T/ /n./ <P> 1. Generic term for a program that assists
   in debugging other programs by showing individual machine
   instructions in a readable symbolic form and letting the user
   change them.  In this sense the term DDT is now archaic, having
   been widely displaced by `debugger' or names of individual
   programs like <CODE>adb</CODE>, <CODE>sdb</CODE>, <CODE>dbx</CODE>, or <CODE>gdb</CODE>.
   2. [ITS] Under MIT's fabled  <A HREF="JARGO~24.HTM#TAG958" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG958">ITS</A> operating system, DDT (running
   under the alias HACTRN, a six-letterism for `Hack Translator') was
   also used as the  <A HREF="JARGO~46.HTM#TAG1594" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1594">shell</A> or top level command language used to
   execute other programs.  3. Any one of several specific DDTs (sense
   1) supported on early  <A HREF="JARGO~21.HTM#TAG435" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG435">DEC</A> hardware.  The DEC PDP-10 Reference
   Handbook (1969) contained a footnote on the first page of the
   documentation for DDT that illuminates the origin of the term:
   <P>
<BLOCKQUOTE>
Historical footnote: DDT was developed at MIT for the PDP-1
computer in 1961.  At that time DDT stood for "DEC Debugging
Tape".  Since then, the idea of an on-line debugging program has
propagated throughout the computer industry.  DDT programs are now
available for all DEC computers.  Since media other than tape are
now frequently used, the more descriptive name "Dynamic Debugging
Technique" has been adopted, retaining the DDT abbreviation.  Confusion
between DDT-10 and another well known pesticide,
dichloro-diphenyl-trichloroethaneshould be minimal since each attacks a
different, and apparently mutually exclusive, class of bugs.  </BLOCKQUOTE>
<P>
   (The `tape' referred to was, incidentally, not magnetic but paper.)
   Sadly, this quotation was removed from later editions of the
   handbook after the  <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>s took over and DEC became much more
   `businesslike'.  <P>
   The history above is known to many old-time hackers.  But there's
   more: Peter Samson, compiler of the original  <A HREF="JARGO~38.HTM#TAG1806" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1806">TMRC</A> lexicon,
   reports that he named `DDT' after a similar tool on the TX-0
   computer, the direct ancestor of the PDP-1 built at MIT's Lincoln
   Lab in 1957.  The debugger on that ground-breaking machine (the
   first transistorized computer) rejoiced in the name FLIT
   (FLexowriter Interrogation Tape).  <P>
<A NAME=TAG425><B>de-rezz</B></A> /dee-rez'/ <P> [from `de-resolve' via the movie
   "Tron"] (also `derez') 1. /vi./ To disappear or dissolve; the
   image that goes with it is of an object breaking up into raster
   lines and static and then dissolving.  Occasionally used of a
   person who seems to have suddenly `fuzzed out' mentally rather than
   physically.  Usage: extremely silly, also rare.  This verb was
   actually invented as <EM>fictional</EM> hacker jargon, and adopted in
   a spirit of irony by real hackers years after the fact.  2. /vt./ The
   Macintosh resource decompiler.  On a Macintosh, many program
   structures (including the code itself) are managed in small
   segments of the program file known as `resources'; `Rez' and
   `DeRez' are a pair of utilities for compiling and decompiling
   resource files.  Thus, decompiling a resource is `derezzing'.
   Usage: very common.  <P>
<A NAME=TAG426><B>dead</B></A> /adj./ <P> 1. Non-functional;  <A HREF="JARGO~21.HTM#TAG503" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG503">down</A>;  <A HREF="JARGO~19.HTM#TAG369" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG369">crash</A>ed.
   Especially used of hardware.  2. At XEROX PARC, software that is
   working but not undergoing continued development and support.
   3. Useless; inaccessible.  Antonym: `live'.  Compare  <A HREF="JARGO~21.HTM#TAG427" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG427">dead code</A>.  <P>
<A NAME=TAG427><B>dead code</B></A> /n./ <P> Routines that can never be accessed because
   all calls to them have been removed, or code that cannot be reached
   because it is guarded by a control structure that provably must
   always transfer control somewhere else.  The presence of dead code
   may reveal either logical errors due to alterations in the program
   or significant changes in the assumptions and environment of the
   program (see also  <A HREF="JARGO~46.HTM#TAG1660" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1660">software rot</A>); a good compiler should report
   dead code so a maintainer can think about what it means.
   (Sometimes it simply means that an <EM>extremely</EM> defensive
   programmer has inserted  <A HREF="JARGO~19.HTM#TAG248" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG248">can't happen</A> tests which really can't
   happen -- yet.)  Syn.  <A HREF="JARGO~23.HTM#TAG812" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG812">grunge</A>.  See also  <A HREF="JARGO~21.HTM#TAG426" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG426">dead</A>, and
    <A HREF="JARGO~48.HTM#SEC56" tppabs="http://www.ccil.org/jargon/jargon_49.html#SEC56">The Story of Mel, a Real Programmer</A>.  <P>
<A NAME=TAG428><B>dead link</B></A> /n./ <P> [WWW] A World-Wide-Web URL that no longer
   points to the information it was written to reach.  Usually this
   happens because the document has been moved or deleted.  Lots of
   dead links make a WWW page frustrating and useless and are the #1
   sign of poor page maintainance. Compare  <A HREF="JARGO~21.HTM#TAG418" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG418">dangling pointer</A>. <P>
<A NAME=TAG429><B>DEADBEEF</B></A> /ded-beef/ /n./ <P> The hexadecimal word-fill pattern
   for freshly allocated memory (decimal -21524111) under a number of
   IBM environments, including the RS/6000.  Some modern debugging
   tools deliberately fill freed memory with this value as a way of
   converting  <A HREF="JARGO~26.HTM#TAG874" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG874">heisenbug</A>s into  <A HREF="JARGO~18.HTM#TAG174" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG174">Bohr bug</A>s.  As in "Your
   program is DEADBEEF" (meaning gone, aborted, flushed from memory);
   if you start from an odd half-word boundary, of course, you have
   BEEFDEAD.  See also the anecdote under  <A HREF="JARGO~22.HTM#TAG672" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG672">fool</A>.  <P>
<A NAME=TAG430><B>deadlock</B></A> /n./ <P> 1. [techspeak] A situation wherein two or more
   processes are unable to proceed because each is waiting for one of
   the others to do something.  A common example is a program
   communicating to a server, which may find itself waiting for output
   from the server before sending anything more to it, while the
   server is similarly waiting for more input from the controlling
   program before outputting anything.  (It is reported that this
   particular flavor of deadlock is sometimes called a `starvation
   deadlock', though the term `starvation' is more properly used for
   situations where a program can never run simply because it never
   gets high enough priority.  Another common flavor is
   `constipation', in which each process is trying to send stuff to
   the other but all buffers are full because nobody is reading
   anything.)  See  <A HREF="JARGO~21.HTM#TAG431" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG431">deadly embrace</A>.  2. Also used of deadlock-like
   interactions between humans, as when two people meet in a narrow
   corridor, and each tries to be polite by moving aside to let the
   other pass, but they end up swaying from side to side without
   making any progress because they always move the same way at the
   same time.  <P>
<A NAME=TAG431><B>deadly embrace</B></A> /n./ <P> Same as  <A HREF="JARGO~21.HTM#TAG430" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG430">deadlock</A>, though usually
   used only when exactly two processes are involved.  This is the
   more popular term in Europe, while  <A HREF="JARGO~21.HTM#TAG430" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG430">deadlock</A> predominates in
   the United States.  <P>
<A NAME=TAG432><B>death code</B></A> /n./ <P> A routine whose job is to set everything in
   the computer -- registers, memory, flags, everything -- to zero,
   including that portion of memory where it is running; its last act
   is to stomp on its own "store zero" instruction.  Death code
   isn't very useful, but writing it is an interesting hacking
   challenge on architectures where the instruction set makes it
   possible, such as the PDP-8 (it has also been done on the DG Nova).
<P>
   Perhaps the ultimate death code is on the TI 990 series, where all
   registers are actually in RAM, and the instruction "store
   immediate 0" has the opcode "0". The PC will immediately wrap
   around core as many times as it can until a user hits HALT.  Any
   empty memory location is death code.  Worse, the manufacturer
   recommended use of this instruction in startup code (which would be
   in ROM and therefore survive).  <P>
<A NAME=TAG433><B>Death Square</B></A> /n./ <P> The corporate logo of Novell, the people
   who acquired USL after AT&#38;T let go of it (Novell eventually sold
   the Unix group to SCO).  Coined by analogy with  <A HREF="JARGO~21.HTM#TAG434" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG434">Death Star</A>,
   because many people believed Novell was bungling the lead in Unix
   systems exactly as AT&#38;T did for many years.  <P>
<A NAME=TAG434><B>Death Star</B></A> /n./ <P> [from the movie "Star Wars"] 1. The
   AT&#38;T corporate logo, which appears on computers sold by AT&#38;T and
   bears an uncanny resemblance to the Death Star in the movie.  This
   usage is particularly common among partisans of  <A HREF="JARGO~18.HTM#TAG216" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG216">BSD</A> Unix, who
   tend to regard the AT&#38;T versions as inferior and AT&#38;T as a bad guy.
   Copies still circulate of a poster printed by Mt. Xinu showing a
   starscape with a space fighter labeled 4.2 BSD streaking away from
   a broken AT&#38;T logo wreathed in flames.  2. AT&#38;T's internal
   magazine, "Focus", uses `death star' to describe an
   incorrectly done AT&#38;T logo in which the inner circle in the top
   left is dark instead of light -- a frequent result of
   dark-on-light logo images.  <P>
<A NAME=TAG435><B>DEC</B></A> /dek/ /n./ <P> Commonly used abbreviation for Digital
   Equipment Corporation, now deprecated by DEC itself in favor of
   "Digital".  Before the  <A HREF="JARGO~27.HTM#TAG992" tppabs="http://www.ccil.org/jargon/jargon_26.html#TAG992">killer micro</A> revolution of the late
   1980s, hackerdom was closely symbiotic with DEC's pioneering
   timesharing machines.  The first of the group of cultures described
   by this lexicon nucleated around the PDP-1 (see  <A HREF="JARGO~38.HTM#TAG1806" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1806">TMRC</A>).
   Subsequently, the PDP-6,  <A HREF="JARGO~34.HTM#TAG1345" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1345">PDP-10</A>,  <A HREF="JARGO~34.HTM#TAG1346" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1346">PDP-20</A>, PDP-11 and
    <A HREF="JARGO~36.HTM#TAG1895" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1895">VAX</A> were all foci of large and important hackerdoms, and DEC
   machines long dominated the ARPANET and Internet machine
   population.  DEC was the technological leader of the minicomputer
   era (roughly 1967 to 1987), but its failure to embrace
   microcomputers and Unix early cost it heavily in profits and
   prestige after  <A HREF="JARGO~46.HTM#TAG1611" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1611">silicon</A> got cheap.  Nevertheless, the
   microprocessor design tradition owes a heavy debt to the PDP-11
   instruction set, and every one of the major general-purpose
   microcomputer OSs so far (CP/M, MS-DOS, Unix, OS/2, Windows NT)
   was either genetically descended from a DEC OS, or incubated on
   DEC hardware, or both.  Accordingly, DEC is still regarded with a
   certain wry affection even among many hackers too young to have
   grown up on DEC machines.  The contrast with  <A HREF="JARGO~24.HTM#TAG919" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG919">IBM</A> is
   instructive.  <P>
   [1996 update: DEC has gradually been reclaiming some of its old
   reputation among techies in the last five years.  The success of
   the Alpha, an innovatively-designed and very high-performance
    <A HREF="JARGO~27.HTM#TAG992" tppabs="http://www.ccil.org/jargon/jargon_26.html#TAG992">killer micro</A>, has helped a lot.  So has DEC's newfound
   receptiveness to Unix and open systems in general. --ESR] <P>
<A NAME=TAG436><B>dec</B></A> /dek/ /v./ <P> Verbal (and only rarely written) shorthand
   for <I>decrement</I>, i.e. `decrease by one'.  Especially used by
   assembly programmers, as many assembly languages have a <CODE>dec</CODE>
   mnemonic.  Antonym:  <A HREF="JARGO~24.HTM#TAG930" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG930">inc</A>.  <P>
<A NAME=TAG437><B>DEC Wars</B></A> /n./ <P> A 1983  <A HREF="JARGO~35.HTM#TAG1882" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1882">Usenet</A> posting by Alan Hastings and
   Steve Tarr spoofing the "Star Wars" movies in hackish terms.
   Some years later, ESR (disappointed by Hastings and Tarr's failure
   to exploit a great premise more thoroughly) posted a 3-times-longer
   complete rewrite called "Unix WARS"; the two are often
   confused.  <P>
<A NAME=TAG438><B>decay</B></A> /n.,vi/ <P> [from nuclear physics] An automatic conversion which
   is applied to most array-valued expressions in  <A HREF="JARGO~19.HTM#TAG242" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG242">C</A>; they `decay
   into' pointer-valued expressions pointing to the array's first
   element.  This term is borderline techspeak, but is not used in the
   official standard for the language.  <P>
<A NAME=TAG439><B>DEChead</B></A> /dek'hed/ /n./ <P> 1. A  <A HREF="JARGO~21.HTM#TAG435" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG435">DEC</A>  <A HREF="JARGO~22.HTM#TAG612" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG612">field servoid</A>.
   Not flattering.  2. [from `deadhead'] A Grateful Dead fan working
   at DEC.  <P>
<A NAME=TAG440><B>deckle</B></A> /dek'l/ /n./ <P> [from dec- and  <A HREF="JARGO~29.HTM#TAG1278" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1278">nybble</A>; the original
   spelling seems to have been `decle'] Two  <A HREF="JARGO~29.HTM#TAG1253" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1253">nickle</A>s; 10
   bits.  Reported among developers for Mattel's GI 1600 (the
   Intellivision games processor), a chip with 16-bit-wide RAM but
   10-bit-wide ROM.  See  <A HREF="JARGO~29.HTM#TAG1278" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1278">nybble</A> for other such terms. <P>
<A NAME=TAG441><B>DED</B></A> /D-E-D/ /n./ <P> Dark-Emitting Diode (that is, a burned-out
   LED).  Compare  <A HREF="JARGO~46.HTM#TAG1574" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1574">SED</A>,  <A HREF="JARGO~28.HTM#TAG1024" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1024">LER</A>,  <A HREF="JARGO~40.HTM#TAG2011" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2011">write-only memory</A>.  In the
   early 1970s both Signetics and Texas instruments released DED spec
   sheets as  <A HREF="JARGO~17.HTM#TAG13" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG13">AFJ</A>s (suggested uses included "as a power-off
   indicator").
<P>
<A NAME=TAG442><B>deep hack mode</B></A> /n./ <P> See  <A HREF="JARGO~26.HTM#TAG826" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG826">hack mode</A>.  <P>
<A NAME=TAG443><B>deep magic</B></A> /n./ <P> [poss. from C. S. Lewis's "Narnia"
   books] An awesomely arcane technique central to a program or
   system, esp. one neither generally published nor available to
   hackers at large (compare  <A HREF="JARGO~18.HTM#TAG126" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG126">black art</A>); one that could only have
   been composed by a true  <A HREF="JARGO~40.HTM#TAG1994" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1994">wizard</A>.  Compiler optimization
   techniques and many aspects of  <A HREF="JARGO~32.HTM#TAG1309" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1309">OS</A> design used to be  <A HREF="JARGO~21.HTM#TAG443" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG443">deep magic</A>; many techniques in cryptography, signal processing,
   graphics, and AI still are.  Compare  <A HREF="JARGO~26.HTM#TAG872" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG872">heavy wizardry</A>.  Esp.
   found in comments of the form "Deep magic begins here...".
   Compare  <A HREF="JARGO~36.HTM#TAG1921" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1921">voodoo programming</A>.  <P>
<A NAME=TAG444><B>deep space</B></A> /n./ <P> 1. Describes the notional location of any
   program that has gone  <A HREF="JARGO~32.HTM#TAG1286" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1286">off the trolley</A>.  Esp. used of
   programs that just sit there silently grinding long after either
   failure or some output is expected.  "Uh oh.  I should have gotten
   a prompt ten seconds ago.  The program's in deep space somewhere."
   Compare  <A HREF="JARGO~18.HTM#TAG236" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG236">buzz</A>,  <A HREF="JARGO~19.HTM#TAG259" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG259">catatonic</A>,  <A HREF="JARGO~26.HTM#TAG915" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG915">hyperspace</A>.  2. The
   metaphorical location of a human so dazed and/or confused or caught
   up in some esoteric form of  <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A> that he or she no longer
   responds coherently to normal communication.  Compare  <A HREF="JARGO~34.HTM#TAG1322" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1322">page out</A>.  <P>
<A NAME=TAG445><B>defenestration</B></A> /n./ <P> [from the traditional Czechoslovakian
   method of assassinating prime ministers, via SF fandom] 1. Proper
   karmic retribution for an incorrigible punster.  "Oh, ghod, that
   was <EM>awful</EM>!"  "Quick! Defenestrate him!"  2. The act of
   exiting a window system in order to get better response time from a
   full-screen program.  This comes from the dictionary meaning of
   `defenestrate', which is to throw something out a window.  3. The
   act of discarding something under the assumption that it will
   improve matters.  "I don't have any disk space left."  "Well,
   why don't you defenestrate that 100 megs worth of old core dumps?"
   4. Under a GUI, the act of dragging something out of a window
   (onto the screen). "Next, defenestrate the MugWump icon." 
   5. [proposed] The requirement to support a command-line interface.
   "It has to run on a VT100."  "Curses!  I've been
   defenestrated!" <P>
<A NAME=TAG446><B>defined as</B></A> /adj./ <P> In the role of, usually in an
   organization-chart sense.  "Pete is currently defined as bug
   prioritizer."  Compare  <A HREF="JARGO~28.HTM#TAG1062" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1062">logical</A>.  <P>
<A NAME=TAG447><B>dehose</B></A> /dee-hohz/ /vt./ <P> To clear a  <A HREF="JARGO~26.HTM#TAG904" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG904">hosed</A> condition.  <P>
<A NAME=TAG448><B>delint</B></A> /dee-lint/ /v. obs./ <P> To modify code to remove
   problems detected when  <A HREF="JARGO~28.HTM#TAG1043" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1043">lint</A>ing.  Confusingly, this process is
   also referred to as `linting' code.  This term is no longer in
   general use because ANSI C compilers typically issue compile-time
   warnings almost as detailed as lint warnings. <P>
<A NAME=TAG449><B>delta</B></A> /n./ <P> 1. [techspeak] A quantitative change, especially a
   small or incremental one (this use is general in physics and
   engineering).  "I just doubled the speed of my program!"  "What
   was the delta on program size?"  "About 30 percent."  (He
   doubled the speed of his program, but increased its size by only 30
   percent.)  2. [Unix] A  <A HREF="JARGO~21.HTM#TAG468" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG468">diff</A>, especially a  <A HREF="JARGO~21.HTM#TAG468" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG468">diff</A> stored
   under the set of version-control tools called SCCS (Source Code
   Control System) or RCS (Revision Control System).  3. /n./ A small
   quantity, but not as small as  <A HREF="JARGO~20.HTM#TAG560" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG560">epsilon</A>.  The jargon usage of
    <A HREF="JARGO~21.HTM#TAG449" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG449">delta</A> and  <A HREF="JARGO~20.HTM#TAG560" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG560">epsilon</A> stems from the traditional use of these
   letters in mathematics for very small numerical quantities,
   particularly in `epsilon-delta' proofs in limit theory (as in the
   differential calculus).  The term  <A HREF="JARGO~21.HTM#TAG449" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG449">delta</A> is often used, once
    <A HREF="JARGO~20.HTM#TAG560" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG560">epsilon</A> has been mentioned, to mean a quantity that is
   slightly bigger than  <A HREF="JARGO~20.HTM#TAG560" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG560">epsilon</A> but still very small.  "The cost
   isn't epsilon, but it's delta" means that the cost isn't totally
   negligible, but it is nevertheless very small.  Common
   constructions include `within delta of ---', `within epsilon of
   ---': that is, `close to' and `even closer to'.  <P>
<A NAME=TAG450><B>demented</B></A> /adj./ <P> Yet another term of disgust used to describe
   a program.  The connotation in this case is that the program works
   as designed, but the design is bad.  Said, for example, of a
   program that generates large numbers of meaningless error messages,
   implying that it is on the brink of imminent collapse.  Compare
    <A HREF="JARGO~40.HTM#TAG2001" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2001">wonky</A>,  <A HREF="JARGO~18.HTM#TAG190" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG190">bozotic</A>.  <P>
<A NAME=TAG451><B>demigod</B></A> /n./ <P> A hacker with years of experience, a world-wide
   reputation, and a major role in the development of at least one
   design, tool, or game used by or known to more than half of the
   hacker community.  To qualify as a genuine demigod, the person must
   recognizably identify with the hacker community and have helped
   shape it.  Major demigods include Ken Thompson and Dennis Ritchie
   (co-inventors of  <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A> and  <A HREF="JARGO~19.HTM#TAG242" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG242">C</A>), Richard M. Stallman
   (inventor of  <A HREF="JARGO~20.HTM#TAG548" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG548">EMACS</A>), Linus Torvalds (inventor of Linux), and
   most recently James Gosling (inventor of Java).  In their hearts of
   hearts, most hackers dream of someday becoming demigods themselves,
   and more than one major software project has been driven to
   completion by the author's veiled hopes of apotheosis.  See also
    <A HREF="JARGO~29.HTM#TAG1227" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1227">net.god</A>,  <A HREF="JARGO~38.HTM#TAG1843" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1843">true-hacker</A>.  <P>
<A NAME=TAG452><B>demo</B></A> /de'moh/ <P> [short for `demonstration'] 1. /v./ To
   demonstrate a product or prototype.  A far more effective way of
   inducing bugs to manifest than any number of  <A HREF="JARGO~38.HTM#TAG1776" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1776">test</A> runs,
   especially when important people are watching.  2. /n./ The act of
   demoing.  "I've gotta give a demo of the drool-proof interface;
   how does it work again?"  3. /n./ Esp. as `demo version', can
   refer either to an early, barely-functional version of a program
   which can be used for demonstration purposes as long as the
   operator uses <EM>exactly</EM> the right commands and skirts its
   numerous bugs, deficiencies, and unimplemented portions, or to a
   special version of a program (frequently with some features
   crippled) which is distributed at little or no cost to the user for
   enticement purposes.  <P>
<A NAME=TAG453><B>demo mode</B></A> /n./ <P> 1. [Sun] The state of being  <A HREF="JARGO~26.HTM#TAG868" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG868">heads down</A>
   in order to finish code in time for a  <A HREF="JARGO~21.HTM#TAG452" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG452">demo</A>, usually due
   yesterday.  2. A mode in which video games sit by themselves
   running through a portion of the game, also known as `attract
   mode'.  Some serious  <A HREF="JARGO~17.HTM#TAG35" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG35">app</A>s have a demo mode they use as a
   screen saver, or may go through a demo mode on startup (for
   example, the Microsoft Windows opening screen -- which lets you
   impress your neighbors without actually having to put up with
    <A HREF="JARGO~30.HTM#TAG1146" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1146">Microsloth Windows</A>).  <P>
<A NAME=TAG454><B>demon</B></A> /n./ <P> 1. [MIT] A portion of a program that is not
   invoked explicitly, but that lies dormant waiting for some
   condition(s) to occur.  See  <A HREF="JARGO~21.HTM#TAG415" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG415">daemon</A>.  The distinction is that
   demons are usually processes within a program, while daemons are
   usually programs running on an operating system.  2. [outside MIT]
   Often used equivalently to  <A HREF="JARGO~21.HTM#TAG415" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG415">daemon</A> -- especially in the
    <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A> world, where the latter spelling and pronunciation is
   considered mildly archaic.  <P>
   Demons in sense 1 are particularly common in AI programs.  For
   example, a knowledge-manipulation program might implement inference
   rules as demons.  Whenever a new piece of knowledge was added,
   various demons would activate (which demons depends on the
   particular piece of data) and would create additional pieces of
   knowledge by applying their respective inference rules to the
   original piece.  These new pieces could in turn activate more
   demons as the inferences filtered down through chains of logic.
   Meanwhile, the main program could continue with whatever its
   primary task was.  <P>
<A NAME=TAG455><B>demon dialer</B></A> /n./ <P> A program which repeatedly calls the same
   telephone number.  Demon dialing may be benign (as when a number of
   communications programs contend for legitimate access to a  <A HREF="JARGO~18.HTM#TAG88" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG88">BBS</A>
   line) or malign (that is, used as a prank or denial-of-service
   attack).  This term dates from the  <A HREF="JARGO~18.HTM#TAG153" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG153">blue box</A> days of the 1970s
   and early 1980s and is now semi-obsolescent among  <A HREF="JARGO~34.HTM#TAG1363" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1363">phreaker</A>s;
   see  <A HREF="JARGO~40.HTM#TAG1938" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1938">war dialer</A> for its contemporary progeny.  <P>
<A NAME=TAG456><B>depeditate</B></A> /dee-ped'*-tayt/ /n./ <P> [by (faulty) analogy with
   `decapitate'] Humorously, to cut off the feet of.  When one is
   using some computer-aided typesetting tools, careless placement of
   text blocks within a page or above a rule can result in chopped-off
   letter descenders.  Such letters are said to have been depeditated.  <P>
<A NAME=TAG457><B>deprecated</B></A> /adj./ <P> Said of a program or feature that is
   considered obsolescent and in the process of being phased out,
   usually in favor of a specified replacement.  Deprecated features
   can, unfortunately, linger on for many years.  This term appears
   with distressing frequency in standards documents when the
   committees writing the documents realize that large amounts of
   extant (and presumably happily working) code depend on the
   feature(s) that have passed out of favor.  See also  <A HREF="JARGO~21.HTM#TAG530" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG530">dusty deck</A>.  <P>
<A NAME=TAG458><B>derf</B></A> /derf/ /v.,n./ <P> [PLATO] The act of exploiting a
   terminal which someone else has absentmindedly left logged on, to
   use that person's account, especially to post articles intended to
   make an ass of the victim you're impersonating.  <P>
<A NAME=TAG459><B>deserves to lose</B></A> /adj./ <P> Said of someone who willfully does
   the  <A HREF="JARGO~40.HTM#TAG2012" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2012">Wrong Thing</A>; humorously, if one uses a feature known to be
    <A HREF="JARGO~30.HTM#TAG1108" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1108">marginal</A>.  What is meant is that one deserves the consequences
   of one's  <A HREF="JARGO~28.HTM#TAG1069" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1069">losing</A> actions.  "Boy, anyone who tries to use
    <A HREF="JARGO~30.HTM#TAG1133" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1133">mess-dos</A> deserves to  <A HREF="JARGO~28.HTM#TAG1066" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1066">lose</A>!" ( <A HREF="JARGO~24.HTM#TAG958" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG958">ITS</A> fans used to say
   the same thing of  <A HREF="JARGO~35.HTM#TAG1869" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1869">Unix</A>; many still do.)  See also  <A HREF="JARGO~46.HTM#TAG1561" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1561">screw</A>,
    <A HREF="JARGO~19.HTM#TAG284" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG284">chomp</A>,  <A HREF="JARGO~18.HTM#TAG62" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG62">bagbiter</A>.  <P>
<A NAME=TAG460><B>desk check</B></A> /n.,v./ <P> To  <A HREF="JARGO~23.HTM#TAG811" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG811">grovel</A> over hardcopy of source
   code, mentally simulating the control flow; a method of catching
   bugs.  No longer common practice in this age of on-screen editing,
   fast compiles, and sophisticated debuggers -- though some maintain
   stoutly that it ought to be.  Compare  <A HREF="JARGO~20.HTM#TAG579" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG579">eyeball search</A>,
    <A HREF="JARGO~36.HTM#TAG1901" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1901">vdiff</A>,  <A HREF="JARGO~36.HTM#TAG1908" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1908">vgrep</A>.  <P>
<A NAME=TAG461><B>despew</B></A> /d*-spyoo'/ /v./ <P> [Usenet] To automatically generate
   a large amount of garbage to the net, esp. from an automated
   posting program gone wild.  See  <A HREF="JARGO~17.HTM#TAG38" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG38">ARMM</A>.  <P>
<A NAME=TAG462><B>Devil Book</B></A> /n./ <P> See  <A HREF="JARGO~21.HTM#TAG416" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG416">daemon book</A>, the term preferred by
   its authors. <P>
<A NAME=TAG463><B>dickless workstation</B></A> /n./ <P> Extremely pejorative hackerism for
   `diskless workstation', a class of botches including the Sun 3/50
   and other machines designed exclusively to network with an
   expensive central disk server.  These combine all the disadvantages
   of time-sharing with all the disadvantages of distributed personal
   computers; typically, they cannot even  <A HREF="JARGO~18.HTM#TAG180" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG180">boot</A> themselves without
   help (in the form of some kind of  <A HREF="JARGO~18.HTM#TAG201" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG201">breath-of-life packet</A>) from
   the server.  <P>
<A NAME=TAG464><B>dictionary flame</B></A> /n./ <P> [Usenet] An attempt to sidetrack a
   debate away from issues by insisting on meanings for key terms that
   presuppose a desired conclusion or smuggle in an implicit premise.
   A common tactic of people who prefer argument over definitions to
   disputes about reality.  Compare  <A HREF="JARGO~46.HTM#TAG1676" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1676">spelling flame</A>.  <P>
<A NAME=TAG465><B>diddle</B></A> <P> 1. /vt./ To work with or modify in a not particularly
   serious manner.  "I diddled a copy of  <A HREF="JARGO~17.HTM#TAG11" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG11">ADVENT</A> so it didn't
   double-space all the time."  "Let's diddle this piece of code and
   see if the problem goes away."  See  <A HREF="JARGO~38.HTM#TAG1852" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1852">tweak</A> and  <A HREF="JARGO~38.HTM#TAG1855" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1855">twiddle</A>.
   2. /n./ The action or result of diddling.  See also  <A HREF="JARGO~38.HTM#TAG1852" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1852">tweak</A>,
    <A HREF="JARGO~38.HTM#TAG1855" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1855">twiddle</A>,  <A HREF="JARGO~22.HTM#TAG697" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG697">frob</A>.  <P>
<A NAME=TAG466><B>die</B></A> /v./ <P> Syn.  <A HREF="JARGO~19.HTM#TAG369" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG369">crash</A>.  Unlike  <A HREF="JARGO~19.HTM#TAG369" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG369">crash</A>, which is used
   primarily of hardware, this verb is used of both hardware and
   software.  See also  <A HREF="JARGO~23.HTM#TAG767" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG767">go flatline</A>,  <A HREF="JARGO~19.HTM#TAG256" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG256">casters-up mode</A>.  <P>
<A NAME=TAG467><B>die horribly</B></A> /v./ <P> The software equivalent of  <A HREF="JARGO~19.HTM#TAG370" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG370">crash and burn</A>, and the preferred emphatic form of  <A HREF="JARGO~21.HTM#TAG466" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG466">die</A>.  "The
   converter choked on an FF in its input and died horribly".
<P>
<A NAME=TAG468><B>diff</B></A> /dif/ /n./ <P> 1. A change listing, especially giving
   differences between (and additions to) source code or documents
   (the term is often used in the plural `diffs').  "Send me your
   diffs for the Jargon File!"  Compare  <A HREF="JARGO~36.HTM#TAG1901" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1901">vdiff</A>.  2. Specifically,
   such a listing produced by the <CODE>diff(1)</CODE> command, esp. when
   used as specification input to the <CODE>patch(1)</CODE> utility (which
   can actually perform the modifications; see  <A HREF="JARGO~34.HTM#TAG1335" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1335">patch</A>).  This is a
   common method of distributing patches and source updates in the
   Unix/C world.  3. /v./ To compare (whether or not by use of automated
   tools on machine-readable files); see also  <A HREF="JARGO~36.HTM#TAG1901" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1901">vdiff</A>,  <A HREF="JARGO~30.HTM#TAG1159" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1159">mod</A>.  <P>
<A NAME=TAG469><B>digit</B></A> /n./ <P> An employee of Digital Equipment Corporation.  See
   also  <A HREF="JARGO~36.HTM#TAG1895" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1895">VAX</A>,  <A HREF="JARGO~36.HTM#TAG1918" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1918">VMS</A>,  <A HREF="JARGO~34.HTM#TAG1345" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1345">PDP-10</A>,  <A HREF="JARGO~38.HTM#TAG1819" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1819">TOPS-10</A>,  <A HREF="JARGO~21.HTM#TAG439" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG439">DEChead</A>,
    <A HREF="JARGO~21.HTM#TAG501" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG501">double DECkers</A>,  <A HREF="JARGO~22.HTM#TAG611" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG611">field circus</A>.  <P>
<A NAME=TAG470><B>dike</B></A> /vt./ <P> To remove or disable a portion of something, as a
   wire from a computer or a subroutine from a program.  A standard
   slogan is "When in doubt, dike it out".  (The implication is that
   it is usually more effective to attack software problems by
   reducing complexity than by increasing it.)  The word `dikes' is
   widely used among mechanics and engineers to mean `diagonal
   cutters', esp. the heavy-duty metal-cutting version, but may also
   refer to a kind of wire-cutters used by electronics techs.  To
   `dike something out' means to use such cutters to remove
   something.  Indeed, the TMRC Dictionary defined dike as "to attack
   with dikes".  Among hackers this term has been metaphorically
   extended to informational objects such as sections of code.  <P>
<A NAME=TAG471><B>Dilbert</B></A>  <P> /n./ Name and title character of a comic strip
   nationally syndicated in the U.S. and enormously popular among
   hackers.  Dilbert is an archetypical engineer-nerd who works at an
   anonymous high-technology company; the strips present a lacerating
   satire of insane working conditions and idiotic  <A HREF="JARGO~30.HTM#TAG1101" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1101">management</A>
   practices all too readily recognized by hackers.  Adams, who spent
   nine years in  <A HREF="JARGO~19.HTM#TAG400" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG400">cube</A> 4S700R at Pacific Bell (not  <A HREF="JARGO~21.HTM#TAG435" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG435">DEC</A> as often
   reported), often remarks that he has never been able to come up
   with a fictional management blunder that his correspondents didn't
   quickly either report to have actually happened or top with a
   similar but even more bizarre incident.  In 1996 Adams distilled
   his insights into the collective psychology of businesses into an
   even funnier book, "The Dilbert Principle" (HarperCollins,
   ISBN 0-887-30787-6).  See also  <A HREF="JARGO~33.HTM#TAG1465" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1465">rat dance</A>.<P>
<A NAME=TAG472><B>ding</B></A> /n.,vi./ <P> 1. Synonym for  <A HREF="JARGO~22.HTM#TAG602" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG602">feep</A>.  Usage: rare among
   hackers, but commoner in the  <A HREF="JARGO~33.HTM#TAG1482" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1482">Real World</A>.  2. `dinged': What
   happens when someone in authority gives you a minor bitching about
   something, esp. something trivial.  "I was dinged for having a
   messy desk." <P>
<A NAME=TAG473><B>dink</B></A> /dink/ /adj./ <P> Said of a machine that has the  <A HREF="JARGO~18.HTM#TAG124" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG124">bitty box</A> nature; a machine too small to be worth bothering with ---
   sometimes the system you're currently forced to work on.  First
   heard from an MIT hacker working on a CP/M system with 64K, in
   reference to any 6502 system, then from fans of 32-bit
   architectures about 16-bit machines.  "GNUMACS will never work on
   that dink machine."  Probably derived from mainstream `dinky',
   which isn't sufficiently pejorative.  See  <A HREF="JARGO~30.HTM#TAG1082" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1082">macdink</A>.  <P>
<A NAME=TAG474><B>dinosaur</B></A> /n./ <P> 1. Any hardware requiring raised flooring and
   special power.  Used especially of old minis and mainframes, in
   contrast with newer microprocessor-based machines.  In a famous
   quote from the 1988 Unix EXPO, Bill Joy compared the liquid-cooled
   mainframe in the massive IBM display with a grazing dinosaur "with
   a truck outside pumping its bodily fluids through it".  IBM was
   not amused.  Compare  <A HREF="JARGO~18.HTM#TAG106" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG106">big iron</A>; see also  <A HREF="JARGO~30.HTM#TAG1100" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1100">mainframe</A>.
   2. [IBM] A very conservative user; a  <A HREF="JARGO~41.HTM#TAG2049" tppabs="http://www.ccil.org/jargon/jargon_41.html#TAG2049">zipperhead</A>.  <P>
<A NAME=TAG475><B>dinosaur pen</B></A> /n./ <P> A traditional  <A HREF="JARGO~30.HTM#TAG1100" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1100">mainframe</A> computer room
   complete with raised flooring, special power, its own
   ultra-heavy-duty air conditioning, and a side order of Halon fire
   extinguishers.  See  <A HREF="JARGO~18.HTM#TAG159" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG159">boa</A>.  <P>
<A NAME=TAG476><B>dinosaurs mating</B></A> /n./ <P> Said to occur when yet another  <A HREF="JARGO~18.HTM#TAG106" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG106">big iron</A> merger or buyout occurs; reflects a perception by hackers
   that these signal another stage in the long, slow dying of the
    <A HREF="JARGO~30.HTM#TAG1100" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1100">mainframe</A> industry.  In its glory days of the 1960s, it was
   `IBM and the Seven Dwarves': Burroughs, Control Data, General
   Electric, Honeywell, NCR, RCA, and Univac.  RCA and GE sold out
   early, and it was `IBM and the Bunch' (Burroughs, Univac, NCR,
   Control Data, and Honeywell) for a while.  Honeywell was bought out
   by Bull; Burroughs merged with Univac to form Unisys (in 1984 ---
   this was when the phrase `dinosaurs mating' was coined); and in
   1991 AT&#38;T absorbed NCR.  More such earth-shaking unions of doomed
   giants seem inevitable.  <P>
<A NAME=TAG477><B>dirtball</B></A> /n./ <P> [XEROX PARC] A small, perhaps struggling
   outsider; not in the major or even the minor leagues.  For example,
   "Xerox is not a dirtball company".  <P>
   [Outsiders often observe in the PARC culture an institutional
   arrogance which usage of this term exemplifies.  The brilliance and
   scope of PARC's contributions to computer science have been such
   that this superior attitude is not much resented. --ESR]<P>
<A NAME=TAG478><B>dirty power</B></A> /n./ <P> Electrical mains voltage that is unfriendly
   to the delicate innards of computers.  Spikes,  <A HREF="JARGO~21.HTM#TAG518" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG518">drop-outs</A>,
   average voltage significantly higher or lower than nominal, or just
   plain noise can all cause problems of varying subtlety and severity
   (these are collectively known as  <A HREF="JARGO~34.HTM#TAG1404" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1404">power hit</A>s).  <P>
<A NAME=TAG479><B>disclaimer</B></A> /n./ <P> [Usenet] Statement ritually appended to many
   Usenet postings (sometimes automatically, by the posting software)
   reiterating the fact (which should be obvious, but is easily
   forgotten) that the article reflects its author's opinions and not
   necessarily those of the organization running the machine through
   which the article entered the network.  <P>
<A NAME=TAG480><B>Discordianism</B></A> /dis-kor'di-*n-ism/ /n./ <P> The veneration of
    <A HREF="JARGO~20.HTM#TAG564" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG564">Eris</A>, a.k.a. Discordia; widely popular among hackers.
   Discordianism was popularized by Robert Shea and Robert Anton
   Wilson's novel " <A HREF="JARGO~72.HTM#TAG2069" tppabs="http://www.ccil.org/jargon/jargon_70.html#TAG2069">Illuminatus!</A>" as a sort of
   self-subverting Dada-Zen for Westerners -- it should on no account
   be taken seriously but is far more serious than most jokes.
   Consider, for example, the Fifth Commandment of the Pentabarf, from
   "Principia Discordia": "A Discordian is Prohibited of
   Believing What he Reads."  Discordianism is usually connected with
   an elaborate conspiracy theory/joke involving millennia-long
   warfare between the anarcho-surrealist partisans of Eris and a
   malevolent, authoritarian secret society called the Illuminati.
   See  <A HREF="JARGO~62.HTM#SEC68" tppabs="http://www.ccil.org/jargon/jargon_61.html#SEC68">Religion</A> in Appendix B,  <A HREF="JARGO~19.HTM#TAG291" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG291">Church of the SubGenius</A>, and  <A HREF="JARGO~26.HTM#TAG823" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG823">ha ha only serious</A>.  <P>
<A NAME=TAG481><B>disk farm</B></A> /n./ <P> (also  <A HREF="JARGO~28.HTM#TAG1015" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1015">laundromat</A>) A large room or rooms
   filled with disk drives (esp.  <A HREF="JARGO~40.HTM#TAG1944" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1944">washing machine</A>s).  <P>
<A NAME=TAG482><B>display hack</B></A> /n./ <P> A program with the same approximate purpose
   as a kaleidoscope: to make pretty pictures.  Famous display hacks
   include  <A HREF="JARGO~30.HTM#TAG1194" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1194">munching squares</A>,  <A HREF="JARGO~46.HTM#TAG1636" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1636">smoking clover</A>, the BSD Unix
   <CODE>rain(6)</CODE> program, <CODE>worms(6)</CODE> on miscellaneous Unixes,
   and the  <A HREF="JARGO~37.HTM#TAG2017" tppabs="http://www.ccil.org/jargon/jargon_39.html#TAG2017">X</A> <CODE>kaleid(1)</CODE> program.  Display hacks can also be
   implemented without programming by creating text files containing
   numerous escape sequences for interpretation by a video terminal;
   one notable example displayed, on any VT100, a Christmas tree with
   twinkling lights and a toy train circling its base.  The  <A HREF="JARGO~26.HTM#TAG830" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG830">hack value</A> of a display hack is proportional to the esthetic value of
   the images times the cleverness of the algorithm divided by the
   size of the code.  Syn.  <A HREF="JARGO~34.HTM#TAG1432" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1432">psychedelicware</A>.  <P>
<A NAME=TAG483><B>Dissociated Press</B></A> /n./ <P> [play on `Associated Press'; perhaps
   inspired by a reference in the 1950 Bugs Bunny cartoon
   "What's Up, Doc?"] An algorithm for transforming any text
   into potentially humorous garbage even more efficiently than by
   passing it through a  <A HREF="JARGO~30.HTM#TAG1111" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1111">marketroid</A>.  The algorithm starts by
   printing any @Math{N} consecutive words (or letters) in the text.
   Then at every step it searches for any random occurrence in the
   original text of the last @Math{N} words (or letters) already
   printed and then prints the next word or letter.   <A HREF="JARGO~20.HTM#TAG548" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG548">EMACS</A> has a
   handy command for this.  Here is a short example of word-based
   Dissociated Press applied to an earlier version of this Jargon
   File:
<P>
<BLOCKQUOTE>
wart: /n./ A small, crocky  <A HREF="JARGO~22.HTM#TAG597" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG597">feature</A> that sticks out of
an array (C has no checks for this).  This is relatively
benign and easy to spot if the phrase is bent so as to be
not worth paying attention to the medium in question.
</BLOCKQUOTE>
<P>
   Here is a short example of letter-based Dissociated Press applied
   to the same source:
<P>
<BLOCKQUOTE>
window sysIWYG: /n./ A bit was named aften /bee't*/ prefer
to use the other guy's re, especially in every cast a
chuckle on neithout getting into useful informash speech
makes removing a featuring a move or usage actual
abstractionsidered /interj./ Indeed spectace logic or problem!
</BLOCKQUOTE>
<P>
   A hackish idle pastime is to apply letter-based Dissociated Press
   to a random body of text and  <A HREF="JARGO~36.HTM#TAG1908" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1908">vgrep</A> the output in hopes of finding
   an interesting new word.  (In the preceding example, `window
   sysIWYG' and `informash' show some promise.)  Iterated applications
   of Dissociated Press usually yield better results.  Similar
   techniques called `travesty generators' have been employed with
   considerable satirical effect to the utterances of Usenet flamers;
   see  <A HREF="JARGO~34.HTM#TAG1429" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1429">pseudo</A>.  <P>
<A NAME=TAG484><B>distribution</B></A> /n./ <P> 1. A software source tree packaged for
   distribution; but see  <A HREF="JARGO~27.HTM#TAG997" tppabs="http://www.ccil.org/jargon/jargon_26.html#TAG997">kit</A>.  2. A vague term encompassing
   mailing lists and Usenet newsgroups (but not  <A HREF="JARGO~18.HTM#TAG88" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG88">BBS</A>  <A HREF="JARGO~22.HTM#TAG679" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG679">fora</A>);
   any topic-oriented message channel with multiple recipients.  3. An
   information-space domain (usually loosely correlated with
   geography) to which propagation of a Usenet message is restricted;
   a much-underutilized feature.  <P>
<A NAME=TAG485><B>disusered</B></A> /adj./ <P> [Usenet] Said of a person whose account on a
   computer has been removed, esp. for cause rather than through
   normal attrition.  "He got disusered when they found out he'd been
   cracking through the school's Internet access."  The verbal form
   `disuser' is live but less common.  Both usages probably derive
   from the DISUSER account status flag on VMS; setting it disables
   the account.  Compare  <A HREF="JARGO~46.HTM#TAG1693" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1693">star out</A>. <P>
<A NAME=TAG486><B>do protocol</B></A> /vi./ <P> [from network protocol programming] To
   perform an interaction with somebody or something that follows a
   clearly defined procedure.  For example, "Let's do protocol with
   the check" at a restaurant means to ask for the check, calculate
   the tip and everybody's share, collect money from everybody,
   generate change as necessary, and pay the bill.  See  <A HREF="JARGO~34.HTM#TAG1426" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1426">protocol</A>.  <P>
<A NAME=TAG487><B>doc</B></A> /dok/ /n./ <P> Common spoken and written shorthand for
   `documentation'.  Often used in the plural `docs' and in the
   construction `doc file' (i.e., documentation available on-line).  <P>
<A NAME=TAG488><B>documentation</B></A> /n./ <P> The multiple kilograms of macerated,
   pounded, steamed, bleached, and pressed trees that accompany most
   modern software or hardware products (see also  <A HREF="JARGO~38.HTM#TAG1833" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1833">tree-killer</A>).
   Hackers seldom read paper documentation and (too) often resist
   writing it; they prefer theirs to be terse and on-line.  A common
   comment on this predilection is "You can't  <A HREF="JARGO~23.HTM#TAG801" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG801">grep</A> dead trees".
   See  <A HREF="JARGO~21.HTM#TAG515" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG515">drool-proof paper</A>,  <A HREF="JARGO~36.HTM#TAG1906" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1906">verbiage</A>,  <A HREF="JARGO~38.HTM#TAG1834" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1834">treeware</A>.  <P>
<A NAME=TAG489><B>dodgy</B></A> /adj./ <P> Syn. with  <A HREF="JARGO~22.HTM#TAG640" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG640">flaky</A>.  Preferred outside the
   U.S.  <P>
<A NAME=TAG490><B>dogcow</B></A> /dog'kow/ /n./ <P> See  <A HREF="JARGO~30.HTM#TAG1169" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1169">Moof</A>.  The dogcow is a
   semi-legendary creature that lurks in the depths of the Macintosh
   Technical Notes Hypercard stack V3.1.  The full story of the dogcow
   is told in technical note #31 (the particular dogcow illustrated is
   properly named `Clarus').  Option-shift-click will cause it to emit
   a characteristic `Moof!' or `!fooM' sound.  <EM>Getting</EM> to tech
   note 31 is the hard part; to discover how to do that, one must
   needs examine the stack script with a hackerly eye.  Clue:
    <A HREF="JARGO~33.HTM#TAG1517" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1517">rot13</A> is involved.  A dogcow also appears if you choose `Page
   Setup...' with a LaserWriter selected and click on the
   `Options' button. <P>
<A NAME=TAG491><B>dogpile</B></A> /v./ <P> [Usenet: prob. fr. mainstream "puppy pile"]
   When many people post unfriendly responses in short order to a
   single posting, they are sometimes said to "dogpile" or "dogpile
   on" the person to whom they're responding.  For example, when a
   religious missionary posts a simplistic appeal to <I><a href="news:alt.atheism">alt.atheism</a></I>,
   he can expect to be dogpiled.  <P>
<A NAME=TAG492><B>dogwash</B></A> /dog'wosh/ <P> [From a quip in the `urgency' field
   of a very optional software change request, ca. 1982.  It was
   something like "Urgency: Wash your dog first".] 1. /n./ A project
   of minimal priority, undertaken as an escape from more serious
   work.  2. /v./  To engage in such a project.  Many games and much
    <A HREF="JARGO~22.HTM#TAG691" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG691">freeware</A> get written this way.  <P>
<A NAME=TAG493><B>domainist</B></A> /doh-mayn'ist/ /adj./ <P> 1. [USENET, by pointed
   analogy with "sexist", "racist", etc.] Someone who judges
   people by the domain of their email addresses; esp. someone who
   dismisses anyone who posts from a public internet provider. "What
   do you expect from an article posted from <I>aol.com</I>?"  2. Said of an
    <A HREF="JARGO~24.HTM#TAG948" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG948">Internet address</A> (as opposed to a  <A HREF="JARGO~18.HTM#TAG71" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG71">bang path</A>) because the
   part to the right of the <SAMP>`@'</SAMP> specifies a nested series of
   `domains'; for example, <I><a href="mailto:esr@snark.thyrsus.com">esr@snark.thyrsus.com</a></I> specifies
   the machine called <I>snark</I> in the subdomain called <I>thyrsus</I>
   within the top-level domain called <I>com</I>.  See also
    <A HREF="JARGO~18.HTM#TAG110" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG110">big-endian</A>, sense 2. <P>
   The meaning of this term has drifted.  At one time sense 2 was
   primary.  In elder days it was also used of a site, mailer, or
   routing program which knew how to handle domainist addresses; or of
   a person (esp. a site admin) who preferred domain addressing,
   supported a domainist mailer, or proselytized for domainist
   addressing and disdained  <A HREF="JARGO~18.HTM#TAG71" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG71">bang path</A>s.  These senses are now
   (1996) obsolete, as effectively all sites have converted. <P>
<A NAME=TAG494><B>Don't do that, then!</B></A> /imp./ <P> [from an old doctor's office joke
   about a patient with a trivial complaint] Stock response to a user
   complaint.  "When I type control-S, the whole system comes to a
   halt for thirty seconds."  "Don't do that, then!" (or "So don't
   do that!").  Compare  <A HREF="JARGO~33.HTM#TAG1524" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1524">RTFM</A>.  <P>
<A NAME=TAG495><B>dongle</B></A> /dong'gl/ /n./ <P> 1. A security or  <A HREF="JARGO~19.HTM#TAG349" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG349">copy protection</A>
   device for commercial microcomputer programs consisting of a
   serialized EPROM and some drivers in a D-25 connector shell, which
   must be connected to an I/O port of the computer while the program
   is run.  Programs that use a dongle query the port at startup and
   at programmed intervals thereafter, and terminate if it does not
   respond with the dongle's programmed validation code.  Thus, users
   can make as many copies of the program as they want but must pay
   for each dongle.  The idea was clever, but it was initially a
   failure, as users disliked tying up a serial port this way.  Almost
   all dongles on the market today (1993) will pass data through the
   port and monitor for  <A HREF="JARGO~30.HTM#TAG1092" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1092">magic</A> codes (and combinations of status
   lines) with minimal if any interference with devices further down
   the line -- this innovation was necessary to allow daisy-chained
   dongles for multiple pieces of software.  The devices are still not
   widely used, as the industry has moved away from copy-protection
   schemes in general.  2. By extension, any physical electronic key
   or transferable ID required for a program to function.  Common
   variations on this theme have used parallel or even joystick ports.
   See  <A HREF="JARGO~21.HTM#TAG496" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG496">dongle-disk</A>.  <P>
   [Note: in early 1992, advertising copy from Rainbow Technologies (a
   manufacturer of dongles) included a claim that the word derived
   from "Don Gall", allegedly the inventor of the device.  The
   company's receptionist will cheerfully tell you that the story is a
   myth invented for the ad copy.  Nevertheless, I expect it to haunt
   my life as a lexicographer for at least the next ten years. :-(
   --ESR]
<P>
<A NAME=TAG496><B>dongle-disk</B></A> /don'gl disk/ /n./ <P> A special floppy disk that
   is required in order to perform some task.  Some contain special
   coding that allows an application to identify it uniquely, others
   <EM>are</EM> special code that does something that normally-resident
   programs don't or can't.  (For example, AT&#38;T's "Unix PC" would
   only come up in  <A HREF="JARGO~33.HTM#TAG1516" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1516">root mode</A> with a special boot disk.)  Also
   called a `key disk'.  See  <A HREF="JARGO~21.HTM#TAG495" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG495">dongle</A>.  <P>
<A NAME=TAG497><B>donuts</B></A> /n. obs./ <P> A collective noun for any set of memory bits.
   This usage is extremely archaic and may no longer be live jargon;
   it dates from the days of ferrite- <A HREF="JARGO~19.HTM#TAG353" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG353">core</A> memories in which each
   bit was implemented by a doughnut-shaped magnetic flip-flop.  <P>
<A NAME=TAG498><B>doorstop</B></A> /n./ <P> Used to describe equipment that is
   non-functional and halfway expected to remain so, especially
   obsolete equipment kept around for political reasons or ostensibly
   as a backup.  "When we get another Wyse-50 in here, that ADM 3
   will turn into a doorstop."  Compare  <A HREF="JARGO~18.HTM#TAG161" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG161">boat anchor</A>.  <P>
<A NAME=TAG499><B>dot file</B></A> [Unix] /n./ <P> A file that is not visible by default to
   normal directory-browsing tools (on Unix, files named with a
   leading dot are, by convention, not normally presented in directory
   listings).  Many programs define one or more dot files in which
   startup or configuration information may be optionally recorded; a
   user can customize the program's behavior by creating the
   appropriate file in the current or home directory.  (Therefore, dot
   files tend to  <A HREF="JARGO~19.HTM#TAG378" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG378">creep</A> -- with every nontrivial application
   program defining at least one, a user's home directory can be
   filled with scores of dot files, of course without the user's
   really being aware of it.)  See also  <A HREF="JARGO~34.HTM#TAG1416" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1416">profile</A> (sense 1),  <A HREF="JARGO~33.HTM#TAG1470" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1470">rc file</A>.  <P>
<A NAME=TAG500><B>double bucky</B></A> /adj./ <P> Using both the CTRL and META keys.  "The
   command to burn all LEDs is double bucky F."
<P>
   This term originated on the Stanford extended-ASCII keyboard, and
   was later taken up by users of the  <A HREF="JARGO~46.HTM#TAG1667" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1667">space-cadet keyboard</A> at
   MIT.  A typical MIT comment was that the Stanford  <A HREF="JARGO~18.HTM#TAG220" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG220">bucky bits</A>
   (control and meta shifting keys) were nice, but there weren't
   enough of them; you could type only 512 different characters on a
   Stanford keyboard.  An obvious way to address this was simply to
   add more shifting keys, and this was eventually done; but a
   keyboard with that many shifting keys is hard on touch-typists, who
   don't like to move their hands away from the home position on the
   keyboard.  It was half-seriously suggested that the extra shifting
   keys be implemented as pedals; typing on such a keyboard would be
   very much like playing a full pipe organ.  This idea is mentioned
   in a parody of a very fine song by Jeffrey Moss called
   "Rubber Duckie", which was published in "The Sesame
   Street Songbook" (Simon and Schuster 1971, ISBN 0-671-21036-X).
   These lyrics were written on May 27, 1978, in celebration of the
   Stanford keyboard:
<P>
<PRE>
			Double Bucky

	Double bucky, you're the one!
	You make my keyboard lots of fun.
	    Double bucky, an additional bit or two:
	(Vo-vo-de-o!)
	Control and meta, side by side,
	Augmented ASCII, nine bits wide!
	    Double bucky!  Half a thousand glyphs, plus a few!
		Oh,
		I sure wish that I
		Had a couple of
		    Bits more!
		Perhaps a
		Set of pedals to
		Make the number of
		    Bits four:
		Double double bucky!
	Double bucky, left and right
	OR'd together, outta sight!
	    Double bucky, I'd like a whole word of
	    Double bucky, I'm happy I heard of
	    Double bucky, I'd like a whole word of you!

	--- The Great Quux (with apologies to Jeffrey Moss)
</PRE>
<P>
   [This, by the way, is an excellent example of computer  <A HREF="JARGO~22.HTM#TAG617" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG617">filk</A>
   --ESR]  See also  <A HREF="JARGO~30.HTM#TAG1135" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1135">meta bit</A>,  <A HREF="JARGO~19.HTM#TAG311" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG311">cokebottle</A>, and  <A HREF="JARGO~31.HTM#TAG1442" tppabs="http://www.ccil.org/jargon/jargon_32.html#TAG1442">quadruple bucky</A>.  <P>
<A NAME=TAG501><B>double DECkers</B></A> /n./ <P> Used to describe married couples in which
   both partners work for Digital Equipment Corporation.  <P>
<A NAME=TAG502><B>doubled sig</B></A> [Usenet] /n./ <P> A  <A HREF="JARGO~46.HTM#TAG1607" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1607">sig block</A> that has been
   included twice in a  <A HREF="JARGO~35.HTM#TAG1882" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1882">Usenet</A> article or, less commonly, in an
   electronic mail message.  An article or message with a doubled sig
   can be caused by improperly configured software.  More often,
   however, it reveals the author's lack of experience in electronic
   communication.  See  <A HREF="JARGO~18.HTM#TAG103" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG103">B1FF</A>,  <A HREF="JARGO~34.HTM#TAG1429" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1429">pseudo</A>.  <P>
<A NAME=TAG503><B>down</B></A> <P> 1. /adj./ Not operating.  "The up escalator is down"
   is considered a humorous thing to say (unless of course you were
   expecting to use it), and "The elevator is down" always means
   "The elevator isn't working" and never refers to what floor the
   elevator is on.  With respect to computers, this term has passed
   into the mainstream; the extension to other kinds of machine is
   still confined to techies (e.g. boiler mechanics may speak of a
   boiler being down).  2. `go down' /vi./ To stop functioning;
   usually said of the  <A HREF="JARGO~46.HTM#TAG1742" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1742">system</A>.  The message from the  <A HREF="JARGO~19.HTM#TAG332" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG332">console</A>
   that every hacker hates to hear from the operator is "System going
   down in 5 minutes".  3. `take down', `bring down' /vt./ To
   deactivate purposely, usually for repair work or  <A HREF="JARGO~34.HTM#TAG1386" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1386">PM</A>.  "I'm
   taking the system down to work on that bug in the tape drive."
   Occasionally one hears the word `down' by itself used as a verb
   in this /vt./ sense.  See  <A HREF="JARGO~19.HTM#TAG369" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG369">crash</A>; oppose  <A HREF="JARGO~35.HTM#TAG1877" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1877">up</A>. <P>
<A NAME=TAG504><B>download</B></A> /vt./ <P> To transfer data or (esp.) code from a
   larger `host' system (esp. a  <A HREF="JARGO~30.HTM#TAG1100" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1100">mainframe</A>) over a digital
   comm link to a smaller `client' system, esp. a microcomputer
   or specialized peripheral.  Oppose  <A HREF="JARGO~35.HTM#TAG1878" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1878">upload</A>.  <P>
   However, note that ground-to-space communications has its own usage
   rule for this term.  Space-to-earth transmission is always `down'
   and the reverse `up' regardless of the relative size of the
   computers involved.  So far the in-space machines have invariably
   been smaller; thus the upload/download distinction has been
   reversed from its usual sense.  <P>
<A NAME=TAG505><B>DP</B></A> /D-P/ /n./ <P> 1. Data Processing.  Listed here because,
   according to hackers, use of the term marks one immediately as a
    <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>.  See  <A HREF="JARGO~21.HTM#TAG507" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG507">DPer</A>.  2. Common abbrev for  <A HREF="JARGO~21.HTM#TAG483" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG483">Dissociated Press</A>. <P>
<A NAME=TAG506><B>DPB</B></A> /d*-pib'/ /vt./ <P> [from the PDP-10 instruction set] To
   plop something down in the middle.  Usage: silly.  "DPB yourself
   into that couch there."  The connotation would be that the couch
   is full except for one slot just big enough for one last person to
   sit in.  DPB means `DePosit Byte', and was the name of a PDP-10
   instruction that inserts some bits into the middle of some other
   bits.  Hackish usage has been kept alive by the Common LISP
   function of the same name.  <P>
<A NAME=TAG507><B>DPer</B></A> /dee-pee-er/ /n./ <P> Data Processor.  Hackers are
   absolutely amazed that  <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>s use this term self-referentially.
   <EM>Computers</EM> process data, not people!  See  <A HREF="JARGO~21.HTM#TAG505" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG505">DP</A>.  <P>
<A NAME=TAG508><B>dragon</B></A> /n./ <P> [MIT] A program similar to a  <A HREF="JARGO~21.HTM#TAG415" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG415">daemon</A>, except
   that it is not invoked at all, but is instead used by the system to
   perform various secondary tasks.  A typical example would be an
   accounting program, which keeps track of who is logged in,
   accumulates load-average statistics, etc.  Under ITS, many
   terminals displayed a list of people logged in, where they were,
   what they were running, etc., along with some random picture (such
   as a unicorn, Snoopy, or the Enterprise), which was generated by
   the `name dragon'.  Usage: rare outside MIT -- under Unix and most
   other OSes this would be called a `background demon' or
    <A HREF="JARGO~21.HTM#TAG415" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG415">daemon</A>.  The best-known Unix example of a dragon is
   <CODE>cron(1)</CODE>.  At SAIL, they called this sort of thing a
   `phantom'.  <P>
<A NAME=TAG509><B>Dragon Book</B></A> /n./ <P> The classic text "Compilers:
   Principles, Techniques and Tools", by Alfred V. Aho, Ravi Sethi,
   and Jeffrey D.  Ullman (Addison-Wesley 1986; ISBN 0-201-10088-6),
   so called because of the cover design featuring a dragon labeled
   `complexity of compiler design' and a knight bearing the lance
   `LALR parser generator' among his other trappings.  This one is
   more specifically known as the `Red Dragon Book' (1986); an earlier
   edition, sans Sethi and titled "Principles Of Compiler Design"
   (Alfred V. Aho and Jeffrey D. Ullman; Addison-Wesley, 1977; ISBN
   0-201-00022-9), was the `Green Dragon Book' (1977).  (Also `New
   Dragon Book', `Old Dragon Book'.)  The horsed knight and the
   Green Dragon were warily eying each other at a distance; now the
   knight is typing (wearing gauntlets!) at a terminal showing a
   video-game representation of the Red Dragon's head while the rest
   of the beast extends back in normal space.  See also  <A HREF="JARGO~18.HTM#TAG179" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG179">book titles</A>.  <P>
<A NAME=TAG510><B>drain</B></A> /v./ <P> [IBM] Syn. for  <A HREF="JARGO~22.HTM#TAG659" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG659">flush</A> (sense 2).  Has a
   connotation of finality about it; one speaks of draining a device
   before taking it offline.  <P>
<A NAME=TAG511><B>dread high-bit disease</B></A> /n./ <P> A condition endemic to some
   now-obsolete computers and peripherals (including ASR-33 teletypes
   and PRIME minicomputers) that results in all characters having
   their high (0x80) bit forced on.  This of course makes transporting
   files to other systems much more difficult, not to mention the
   problems these machines have talking with true 8-bit devices. <P>
   This term was originally used specifically of PRIME (a.k.a.  PR1ME)
   minicomputers.  Folklore has it that PRIME adopted the reversed-8-bit
   convention in order to save 25 cents per serial line per machine;
   PRIME old-timers, on the other hand, claim they inherited the
   disease from Honeywell via customer NASA's compatibility
   requirements and struggled heroically to cure it.  Whoever was
   responsible, this probably qualifies as one of the most
    <A HREF="JARGO~19.HTM#TAG383" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG383">cretinous</A> design tradeoffs ever made.  See  <A HREF="JARGO~30.HTM#TAG1135" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1135">meta bit</A>.  <P>
<A NAME=TAG512><B>DRECNET</B></A> /drek'net/ /n./ <P> [from Yiddish/German `dreck',
   meaning filth] Deliberate distortion of DECNET, a networking
   protocol used in the  <A HREF="JARGO~36.HTM#TAG1918" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1918">VMS</A> community.  So called because DEC
   helped write the Ethernet specification and then (either stupidly
   or as a malignant customer-control tactic) violated that spec in
   the design of DRECNET in a way that made it incompatible.  See also
    <A HREF="JARGO~19.HTM#TAG329" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG329">connector conspiracy</A>.  <P>
<A NAME=TAG513><B>driver</B></A> /n./ <P> 1. The  <A HREF="JARGO~30.HTM#TAG1099" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1099">main loop</A> of an event-processing
   program; the code that gets commands and dispatches them for
   execution.  2. [techspeak] In `device driver', code designed to
   handle a particular peripheral device such as a magnetic disk or
   tape unit.  3. In the TeX world and the computerized typesetting
   world in general, a program that translates some device-independent
   or other common format to something a real device can actually
   understand.  <P>
<A NAME=TAG514><B>droid</B></A> /n./ <P> [from `android', SF terminology for a humanoid
   robot of essentially biological (as opposed to
   mechanical/electronic) construction] A person (esp. a
   low-level bureaucrat or service-business employee) exhibiting most
   of the following characteristics: (a) naive trust in the wisdom of
   the parent organization or `the system'; (b) a blind-faith
   propensity to believe obvious nonsense emitted by authority figures
   (or computers!); (c) a rule-governed mentality, one unwilling or
   unable to look beyond the `letter of the law' in exceptional
   situations; (d) a paralyzing fear of official reprimand or worse if
   Procedures are not followed No Matter What; and (e) no interest in
   doing anything above or beyond the call of a very
   narrowly-interpreted duty, or in particular in fixing that which is
   broken; an "It's not my job, man" attitude.  <P>
   Typical droid positions include supermarket checkout assistant and
   bank clerk; the syndrome is also endemic in low-level government
   employees.  The implication is that the rules and official
   procedures constitute software that the droid is executing;
   problems arise when the software has not been properly debugged.
   The term `droid mentality' is also used to describe the mindset
   behind this behavior. Compare  <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>,  <A HREF="JARGO~30.HTM#TAG1111" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1111">marketroid</A>; see
    <A HREF="JARGO~50.HTM#TAG2058" tppabs="http://www.ccil.org/jargon/jargon_42.html#TAG2058">-oid</A>.  <P>
<A NAME=TAG515><B>drool-proof paper</B></A> /n./ <P> Documentation that has been
   obsessively  <A HREF="JARGO~21.HTM#TAG525" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG525">dumbed down</A>, to the point where only a  <A HREF="JARGO~19.HTM#TAG382" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG382">cretin</A>
   could bear to read it, is said to have succumbed to the
   `drool-proof paper syndrome' or to have been `written on
   drool-proof paper'.  For example, this is an actual quote from
   Apple's LaserWriter manual: "Do not expose your LaserWriter to
   open fire or flame." <P>
<A NAME=TAG516><B>drop on the floor</B></A> /vt./ <P> To react to an error condition by
   silently discarding messages or other valuable data.  "The gateway
   ran out of memory, so it just started dropping packets on the
   floor."  Also frequently used of faulty mail and netnews relay
   sites that lose messages.  See also  <A HREF="JARGO~18.HTM#TAG127" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG127">black hole</A>,  <A HREF="JARGO~18.HTM#TAG116" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG116">bit bucket</A>.  <P>
<A NAME=TAG517><B>drop-ins</B></A> /n./ <P> [prob. by analogy with  <A HREF="JARGO~21.HTM#TAG518" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG518">drop-outs</A>]
   Spurious characters appearing on a terminal or console as a result
   of line noise or a system malfunction of some sort.  Esp. used
   when these are interspersed with one's own typed input.  Compare
    <A HREF="JARGO~21.HTM#TAG518" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG518">drop-outs</A>, sense 2.  <P>
<A NAME=TAG518><B>drop-outs</B></A> /n./ <P> 1. A variety of `power glitch' (see
    <A HREF="JARGO~23.HTM#TAG760" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG760">glitch</A>); momentary 0 voltage on the electrical mains.
   2. Missing characters in typed input due to software malfunction or
   system saturation (one cause of such behavior under Unix when a bad
   connection to a modem swamps the processor with spurious character
   interrupts; see  <A HREF="JARGO~46.HTM#TAG1560" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1560">screaming tty</A>).  3. Mental glitches; used as a
   way of describing those occasions when the mind just seems to shut
   down for a couple of beats.  See  <A HREF="JARGO~23.HTM#TAG760" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG760">glitch</A>,  <A HREF="JARGO~22.HTM#TAG693" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG693">fried</A>.
<P>
<A NAME=TAG519><B>drugged</B></A> /adj./ <P> (also `on drugs') 1. Conspicuously stupid,
   heading toward  <A HREF="JARGO~18.HTM#TAG194" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG194">brain-damaged</A>.  Often accompanied by a
   pantomime of toking a joint.  2. Of hardware, very slow relative to
   normal performance.  <P>
<A NAME=TAG520><B>drum</B></A> adj, /n./ <P> Ancient techspeak term referring to slow,
   cylindrical magnetic media that were once state-of-the-art storage
   devices.  Under BSD Unix the disk partition used for swapping is
   still called <CODE>/dev/drum</CODE>; this has led to considerable humor
   and not a few straight-faced but utterly bogus `explanations'
   getting foisted on  <A HREF="JARGO~29.HTM#TAG1245" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1245">newbie</A>s.  See also " <A HREF="JARGO~48.HTM#SEC56" tppabs="http://www.ccil.org/jargon/jargon_49.html#SEC56">The Story of Mel, a Real Programmer</A>" in Appendix A.  <P>
<A NAME=TAG521><B>drunk mouse syndrome</B></A> /n./ <P> (also `mouse on drugs') A malady
   exhibited by the mouse pointing device of some computers.  The
   typical symptom is for the mouse cursor on the screen to move in
   random directions and not in sync with the motion of the actual
   mouse.  Can usually be corrected by unplugging the mouse and
   plugging it back again.  Another recommended fix for optical mice
   is to rotate your mouse pad 90 degrees.  <P>
   At Xerox PARC in the 1970s, most people kept a can of copier
   cleaner (isopropyl alcohol) at their desks.  When the steel ball on
   the mouse had picked up enough  <A HREF="JARGO~19.HTM#TAG390" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG390">cruft</A> to be unreliable, the
   mouse was doused in cleaner, which restored it for a while.
   However, this operation left a fine residue that accelerated the
   accumulation of cruft, so the dousings became more and more
   frequent.  Finally, the mouse was declared `alcoholic' and sent
   to the clinic to be dried out in a CFC ultrasonic bath.  <P>
<A NAME=TAG522><B>Duff's device</B></A> /n./ <P> The most dramatic use yet seen of  <A HREF="JARGO~22.HTM#TAG583" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG583">fall through</A> in C, invented by Tom Duff when he was at Lucasfilm.
   Trying to  <A HREF="JARGO~18.HTM#TAG229" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG229">bum</A> all the instructions he could out of an inner
   loop that copied data serially onto an output port, he decided to
   unroll it.  He then realized that the unrolled version could be
   implemented by <EM>interlacing</EM> the structures of a switch and a
   loop:<P>
<PRE>
   register n = (count + 7) / 8;      /* count &#62; 0 assumed */

   switch (count % 8)
   {
   case 0:        do {  *to = *from++;
   case 7:              *to = *from++;
   case 6:              *to = *from++;
   case 5:              *to = *from++;
   case 4:              *to = *from++;
   case 3:              *to = *from++;
   case 2:              *to = *from++;
   case 1:              *to = *from++;
                      } while (--n &#62; 0);
   }
</PRE>
<P>
   Shocking though it appears to all who encounter it for the first
   time, the device is actually perfectly valid, legal C.  C's default
    <A HREF="JARGO~22.HTM#TAG583" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG583">fall through</A> in case statements has long been its most
   controversial single feature; Duff observed that "This code forms
   some sort of argument in that debate, but I'm not sure whether it's
   for or against." <P>
   [For maximal obscurity, the outermost pair of braces above could be
   actually be removed -- GLS]
<P>
<A NAME=TAG523><B>dumb terminal</B></A> /n./ <P> A terminal that is one step above a
    <A HREF="JARGO~23.HTM#TAG758" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG758">glass tty</A>, having a minimally addressable cursor but no
   on-screen editing or other features normally supported by a
    <A HREF="JARGO~46.HTM#TAG1629" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1629">smart terminal</A>.  Once upon a time, when glass ttys were common
   and addressable cursors were something special, what is now called
   a dumb terminal could pass for a smart terminal.  <P>
<A NAME=TAG524><B>dumbass attack</B></A> /duhm'as *-tak'/ /n./ <P> [Purdue] Notional
   cause of a novice's mistake made by the experienced, especially one
   made while running as  <A HREF="JARGO~33.HTM#TAG1515" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1515">root</A> under Unix, e.g., typing <CODE>rm
   -r *</CODE> or <CODE>mkfs</CODE> on a mounted file system.  Compare  <A HREF="JARGO~17.HTM#TAG9" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG9">adger</A>.  <P>
<A NAME=TAG525><B>dumbed down</B></A> /adj./ <P> Simplified, with a strong connotation of
   <EM>over</EM>simplified.  Often, a  <A HREF="JARGO~30.HTM#TAG1111" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1111">marketroid</A> will insist that
   the interfaces and documentation of software be dumbed down after
   the designer has burned untold gallons of midnight oil making it
   smart.  This creates friction.  See  <A HREF="JARGO~35.HTM#TAG1884" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1884">user-friendly</A>.  <P>
<A NAME=TAG526><B>dump</B></A> /n./ <P> 1. An undigested and voluminous mass of information
   about a problem or the state of a system, especially one routed to
   the slowest available output device (compare  <A HREF="JARGO~19.HTM#TAG355" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG355">core dump</A>), and
   most especially one consisting of hex or octal  <A HREF="JARGO~33.HTM#TAG1530" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1530">runes</A>
   describing the byte-by-byte state of memory, mass storage, or some
   file.  In  <A HREF="JARGO~20.HTM#TAG541" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG541">elder days</A>, debugging was generally done by
   `groveling over' a dump (see  <A HREF="JARGO~23.HTM#TAG811" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG811">grovel</A>); increasing use of
   high-level languages and interactive debuggers has made such tedium
   uncommon, and the term `dump' now has a faintly archaic flavor.
   2. A backup.  This usage is typical only at large timesharing
   installations.  <P>
<A NAME=TAG527><B>dumpster diving</B></A> /dump'-ster di:'-ving/ /n./ <P> 1. The practice
   of sifting refuse from an office or technical installation to
   extract confidential data, especially security-compromising
   information (`dumpster' is an Americanism for what is elsewhere
   called a `skip').  Back in AT&#38;T's monopoly days, before paper
   shredders became common office equipment, phone phreaks (see
    <A HREF="JARGO~34.HTM#TAG1364" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1364">phreaking</A>) used to organize regular dumpster runs against
   phone company plants and offices.  Discarded and damaged copies of
   AT&#38;T internal manuals taught them much.  The technique is still
   rumored to be a favorite of crackers operating against careless
   targets.  2. The practice of raiding the dumpsters behind buildings
   where producers and/or consumers of high-tech equipment are
   located, with the expectation (usually justified) of finding
   discarded but still-valuable equipment to be nursed back to health
   in some hacker's den.  Experienced dumpster-divers not infrequently
   accumulate basements full of moldering (but still potentially
   useful)  <A HREF="JARGO~19.HTM#TAG390" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG390">cruft</A>.  <P>
<A NAME=TAG528><B>dup killer</B></A> /d[y]oop kill'r/ /n./ <P> [FidoNet] Software that is
   supposed to detect and delete duplicates of a message that may have
   reached the FidoNet system via different routes.  <P>
<A NAME=TAG529><B>dup loop</B></A> /d[y]oop loop/ (also `dupe loop') /n./ <P> [FidoNet]
   An infinite stream of duplicated, near-identical messages on a
   FidoNet  <A HREF="JARGO~20.HTM#TAG538" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG538">echo</A>, the only difference being unique or mangled
   identification information applied by a faulty or incorrectly
   configured system or network gateway, thus rendering  <A HREF="JARGO~21.HTM#TAG528" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG528">dup killer</A>s ineffective.  If such a duplicate message eventually
   reaches a system through which it has already passed (with the
   original identification information), all systems passed on the way
   back to that system are said to be involved in a  <A HREF="JARGO~21.HTM#TAG529" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG529">dup loop</A>.  <P>
<A NAME=TAG530><B>dusty deck</B></A> /n./ <P> Old software (especially applications) which
   one is obliged to remain compatible with, or to maintain ( <A HREF="JARGO~21.HTM#TAG505" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG505">DP</A>
   types call this `legacy code', a term hackers consider smarmy and
   excessively reverent).  The term implies that the software in
   question is a holdover from card-punch days.  Used esp. when
   referring to old scientific and  <A HREF="JARGO~29.HTM#TAG1275" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1275">number-crunching</A> software,
   much of which was written in FORTRAN and very poorly documented but
   is believed to be too expensive to replace.  See  <A HREF="JARGO~22.HTM#TAG686" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG686">fossil</A>;
   compare  <A HREF="JARGO~19.HTM#TAG371" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG371">crawling horror</A>.  <P>
<A NAME=TAG531><B>DWIM</B></A> /dwim/ <P> [acronym, `Do What I Mean'] 1. /adj./ Able to
   guess, sometimes even correctly, the result intended when bogus
   input was provided.  2. /n. obs./ The BBNLISP/INTERLISP function that
   attempted to accomplish this feat by correcting many of the more
   common errors.  See  <A HREF="JARGO~26.HTM#TAG844" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG844">hairy</A>.  3. Occasionally, an interjection
   hurled at a balky computer, esp. when one senses one might be
   tripping over legalisms (see  <A HREF="JARGO~28.HTM#TAG1023" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1023">legalese</A>).  <P>
   Warren Teitelman originally wrote DWIM to fix his typos and
   spelling errors, so it was somewhat idiosyncratic to his style, and
   would often make hash of anyone else's typos if they were
   stylistically different.  Some victims of DWIM thus claimed that
   the acronym stood for `Damn Warren's Infernal Machine!'.  <P>
   In one notorious incident, Warren added a DWIM feature to the
   command interpreter used at Xerox PARC.  One day another hacker
   there typed <CODE>delete *$</CODE> to free up some disk space.  (The
   editor there named backup files by appending <CODE>$</CODE> to the
   original file name, so he was trying to delete any backup files
   left over from old editing sessions.)  It happened that there
   weren't any editor backup files, so DWIM helpfully reported
   <CODE>*$ not found, assuming you meant 'delete *'.</CODE> It then started
   to delete all the files on the disk!  The hacker managed to stop it
   with a  <A HREF="JARGO~36.HTM#TAG1923" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1923">Vulcan nerve pinch</A> after only a half dozen or so files
   were lost.     
   The disgruntled victim later said he had been sorely tempted to go
   to Warren's office, tie Warren down in his chair in front of his
   workstation, and then type <CODE>delete *$</CODE> twice.  <P>
   DWIM is often suggested in jest as a desired feature for a complex
   program; it is also occasionally described as the single
   instruction the ideal computer would have.  Back when proofs of
   program correctness were in vogue, there were also jokes about
   `DWIMC' (Do What I Mean, Correctly).  A related term, more often
   seen as a verb, is DTRT (Do The Right Thing); see  <A HREF="JARGO~33.HTM#TAG1507" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1507">Right Thing</A>.  <P>
<A NAME=TAG532><B>dynner</B></A> /din'r/ /n./ <P> 32 bits, by analogy with  <A HREF="JARGO~29.HTM#TAG1278" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1278">nybble</A> and
    <A HREF="JARGO~18.HTM#TAG239" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG239">byte</A>.  Usage: rare and extremely silly.  See also  <A HREF="JARGO~34.HTM#TAG1380" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1380">playte</A>,
    <A HREF="JARGO~38.HTM#TAG1755" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1755">tayste</A>,  <A HREF="JARGO~19.HTM#TAG394" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG394">crumb</A>.  General discussion of such terms is under
    <A HREF="JARGO~29.HTM#TAG1278" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1278">nybble</A>. <P>
<P>Go to the <A HREF="JARGO~19.HTM" tppabs="http://www.ccil.org/jargon/jargon_18.html">previous</A>, <A HREF="JARGO~20.HTM" tppabs="http://www.ccil.org/jargon/jargon_20.html">next</A> section.<P>
</BODY>
</HTML>
