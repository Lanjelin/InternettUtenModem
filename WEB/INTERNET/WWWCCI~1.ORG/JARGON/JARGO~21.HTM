<!doctype HTML public "-//W3O//DTD W3 HTML 2.0//EN">
<!-- This HTML file was created by texi2html 1.28
     from jargon.tex on 26 July 1996 -->
<HTML>
<HEAD>

<TITLE>The New Hacker's Dictionary  - = L =</TITLE>
</HEAD>
<BODY>
<P>Go to the <A HREF="JARGO~27.HTM" tppabs="http://www.ccil.org/jargon/jargon_26.html">previous</A>, <A HREF="JARGO~30.HTM" tppabs="http://www.ccil.org/jargon/jargon_28.html">next</A> section.<P>
<H2><A NAME="SEC34" HREF="JARGON~1.HTM#SEC34" tppabs="http://www.ccil.org/jargon/jargon_toc.html#SEC34">= L =</A></H2>



<A NAME=TAG1007><B>lace card</B></A> /n. obs./ <P> A  <A HREF="JARGO~34.HTM#TAG1436" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1436">punched card</A> with all holes
   punched (also called a `whoopee card' or `ventilator card').
   Card readers tended to jam when they got to one of these, as the
   resulting card had too little structural strength to avoid buckling
   inside the mechanism.  Card punches could also jam trying to
   produce these things owing to power-supply problems.  When some
   practical joker fed a lace card through the reader, you needed to
   clear the jam with a `card knife' -- which you used on the joker
   first.  <P>
<A NAME=TAG1008><B>lamer</B></A> /n./ [prob. originated in skateboarder slang] <P> Synonym
   for  <A HREF="JARGO~28.HTM#TAG1080" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1080">luser</A>, not used much by hackers but common among  <A HREF="JARGO~40.HTM#TAG1940" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1940">warez d00dz</A>, crackers, and  <A HREF="JARGO~34.HTM#TAG1363" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1363">phreaker</A>s.  Oppose  <A HREF="JARGO~20.HTM#TAG545" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG545">elite</A>.  Has the
   same connotations of self-conscious elitism that use of  <A HREF="JARGO~28.HTM#TAG1080" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1080">luser</A>
   does among hackers.  <P>
   Crackers also use it to refer to cracker  <A HREF="JARGO~40.HTM#TAG1937" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1937">wannabee</A>s. In phreak
   culture, a lamer is one who scams codes off others rather than
   doing cracks or really understanding the fundamental concepts.  In
    <A HREF="JARGO~40.HTM#TAG1940" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1940">warez d00dz</A> culture, where the ability to wave around cracked
   commercial software within days of (or before) release to the
   commercial market is much esteemed, the lamer might try to upload
   garbage or shareware or something incredibly old (old in this
   context is read as a few years to anything older than 3
   days). <P>
<A NAME=TAG1009><B>language lawyer</B></A> /n./ <P> A person, usually an experienced or
   senior software engineer, who is intimately familiar with many or
   most of the numerous restrictions and features (both useful and
   esoteric) applicable to one or more computer programming languages.
   A language lawyer is distinguished by the ability to show you the
   five sentences scattered through a 200-plus-page manual that
   together imply the answer to your question "if only you had
   thought to look there".  Compare  <A HREF="JARGO~40.HTM#TAG1994" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1994">wizard</A>,  <A HREF="JARGO~28.HTM#TAG1022" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1022">legal</A>,
    <A HREF="JARGO~28.HTM#TAG1023" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1023">legalese</A>.  <P>
<A NAME=TAG1010><B>languages of choice</B></A> /n./ <P>  <A HREF="JARGO~19.HTM#TAG242" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG242">C</A>,  <A HREF="JARGO~19.HTM#TAG244" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG244">C++</A>,  <A HREF="JARGO~28.HTM#TAG1047" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1047">LISP</A>, and
    <A HREF="JARGO~34.HTM#TAG1353" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1353">Perl</A>.  Nearly every hacker knows one of C or LISP, and most
   good ones are fluent in both.  C++, despite some serious drawbacks,
   is generally preferred to other object-oriented languages (though in
   1996 it looks as though Java may soon displace it in the affections
   of hackers, if not everywhere).  Since around 1990 Perl has rapidly
   been gaining favor, especially as a tool for systems-administration
   utilities and rapid prototyping.  Smalltalk and Prolog are also
   popular in small but influential communities. <P>
   There is also a rapidly dwindling category of older hackers with
   FORTRAN, or even assembler, as their language of choice.  They
   often prefer to be known as  <A HREF="JARGO~33.HTM#TAG1478" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1478">Real Programmer</A>s, and other
   hackers consider them a bit odd (see " <A HREF="JARGO~48.HTM#SEC56" tppabs="http://www.ccil.org/jargon/jargon_49.html#SEC56">The Story of Mel, a Real Programmer</A>" in Appendix A).  Assembler is generally
   no longer considered interesting or appropriate for anything but
    <A HREF="JARGO~26.HTM#TAG891" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG891">HLL</A> implementation,  <A HREF="JARGO~23.HTM#TAG763" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG763">glue</A>, and a few time-critical and
   hardware-specific uses in systems programs.  FORTRAN occupies a
   shrinking niche in scientific programming.  <P>
   Most hackers tend to frown on languages like  <A HREF="JARGO~34.HTM#TAG1333" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1333">Pascal</A> and
    <A HREF="JARGO~17.HTM#TAG8" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG8">Ada</A>, which don't give them the near-total freedom considered
   necessary for hacking (see  <A HREF="JARGO~18.HTM#TAG177" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG177">bondage-and-discipline language</A>),
   and to regard everything even remotely connected with  <A HREF="JARGO~19.HTM#TAG303" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG303">COBOL</A> or
   other traditional  <A HREF="JARGO~19.HTM#TAG251" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG251">card walloper</A> languages as a total and
   unmitigated  <A HREF="JARGO~28.HTM#TAG1070" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1070">loss</A>.  <P>
<A NAME=TAG1011><B>larval stage</B></A> /n./ <P> Describes a period of monomaniacal
   concentration on coding apparently passed through by all fledgling
   hackers.  Common symptoms include the perpetration of more than one
   36-hour  <A HREF="JARGO~26.HTM#TAG836" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG836">hacking run</A> in a given week; neglect of all other
   activities including usual basics like food, sleep, and personal
   hygiene; and a chronic case of advanced bleary-eye.  Can last from
   6 months to 2 years, the apparent median being around 18 months.  A
   few so afflicted never resume a more `normal' life, but the
   ordeal seems to be necessary to produce really wizardly (as opposed
   to merely competent) programmers.  See also  <A HREF="JARGO~40.HTM#TAG1937" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1937">wannabee</A>.  A less
   protracted and intense version of larval stage (typically lasting
   about a month) may recur when one is learning a new  <A HREF="JARGO~32.HTM#TAG1309" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1309">OS</A> or
   programming language.  <P>
<A NAME=TAG1012><B>lase</B></A> /layz/ /vt./ <P> To print a given document via a laser
   printer.  "OK, let's lase that sucker and see if all those
   graphics-macro calls did the right things." <P>
<A NAME=TAG1013><B>laser chicken</B></A> /n./ <P> Kung Pao Chicken, a standard Chinese dish
   containing chicken, peanuts, and hot red peppers in a spicy
   pepper-oil sauce.  Many hackers call it `laser chicken' for two
   reasons: It can  <A HREF="JARGO~41.HTM#TAG2040" tppabs="http://www.ccil.org/jargon/jargon_41.html#TAG2040">zap</A> you just like a laser, and the sauce has a
   red color reminiscent of some laser beams.
<P>
   In a variation on this theme, it is reported that some Australian
   hackers have redesignated the common dish `lemon chicken' as
   `Chernobyl Chicken'.  The name is derived from the color of the
   sauce, which is considered bright enough to glow in the dark (as,
   mythically, do some of the inhabitants of Chernobyl).  <P>
<A NAME=TAG1014><B>Lasherism</B></A> /n./ <P> [Harvard] A program that solves a standard
   problem (such as the Eight Queens puzzle or implementing the
    <A HREF="JARGO~28.HTM#TAG1030" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1030">life</A> algorithm) in a deliberately nonstandard way.
   Distinguished from a  <A HREF="JARGO~19.HTM#TAG387" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG387">crock</A> or  <A HREF="JARGO~27.HTM#TAG1000" tppabs="http://www.ccil.org/jargon/jargon_26.html#TAG1000">kluge</A> by the fact that the
   programmer did it on purpose as a mental exercise.  Such
   constructions are quite popular in exercises such as the
    <A HREF="JARGO~32.HTM#TAG1281" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1281">Obfuscated C Contest</A>, and occasionally in  <A HREF="JARGO~33.HTM#TAG1501" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1501">retrocomputing</A>.
   Lew Lasher was a student at Harvard around 1980 who became
   notorious for such behavior.  <P>
<A NAME=TAG1015><B>laundromat</B></A> /n./ <P> Syn.  <A HREF="JARGO~21.HTM#TAG481" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG481">disk farm</A>; see  <A HREF="JARGO~40.HTM#TAG1944" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1944">washing machine</A>.  <P>
<A NAME=TAG1016><B>LDB</B></A> /l*'d*b/ /vt./ <P> [from the PDP-10 instruction set] To
   extract from the middle.  "LDB me a slice of cake, please."  This
   usage has been kept alive by Common LISP's function of the same
   name.  Considered silly.  See also  <A HREF="JARGO~21.HTM#TAG506" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG506">DPB</A>.  <P>
<A NAME=TAG1017><B>leaf site</B></A> /n./ <P> A machine that merely originates and reads
   Usenet news or mail, and does not relay any third-party traffic.
   Often uttered in a critical tone; when the ratio of leaf sites to
   backbone, rib, and other relay sites gets too high, the network
   tends to develop bottlenecks.  Compare  <A HREF="JARGO~18.HTM#TAG54" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG54">backbone site</A>,  <A HREF="JARGO~33.HTM#TAG1505" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1505">rib site</A>.  <P>
<A NAME=TAG1018><B>leak</B></A> /n./ <P> With qualifier, one of a class of
   resource-management bugs that occur when resources are not freed
   properly after operations on them are finished, so they effectively
   disappear (leak out).  This leads to eventual exhaustion as new
   allocation requests come in.   <A HREF="JARGO~30.HTM#TAG1130" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1130">memory leak</A> and  <A HREF="JARGO~22.HTM#TAG595" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG595">fd leak</A>
   have their own entries; one might also refer, to, say, a `window
   handle leak' in a window system.  <P>
<A NAME=TAG1019><B>leaky heap</B></A> /n./ <P> [Cambridge] An  <A HREF="JARGO~17.HTM#TAG36" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG36">arena</A> with a  <A HREF="JARGO~30.HTM#TAG1130" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1130">memory leak</A>.  <P>
<A NAME=TAG1020><B>leapfrog attack</B></A> /n./ <P> Use of userid and password information
   obtained illicitly from one host (e.g., downloading a file of
   account IDs and passwords, tapping TELNET, etc.) to compromise
   another host.  Also, the act of TELNETting through one or more
   hosts in order to confuse a trace (a standard cracker procedure).  <P>
<A NAME=TAG1021><B>leech</B></A> /n./ <P> Among BBS types, crackers and  <A HREF="JARGO~40.HTM#TAG1940" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1940">warez d00dz</A>,
   one who consumes knowledge without generating new software, cracks,
   or techniques.  BBS culture specifically defines a leech as someone
   who downloads files with few or no uploads in return, and who does
   not contribute to the message section.  Cracker culture extends
   this definition to someone (a  <A HREF="JARGO~28.HTM#TAG1008" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1008">lamer</A>, usually) who constantly
   presses informed sources for information and/or assistance, but has
   nothing to contribute. <P>
<A NAME=TAG1022><B>legal</B></A> /adj./ <P> Loosely used to mean `in accordance with all the
   relevant rules', esp. in connection with some set of constraints
   defined by software.  "The older =+ alternate for += is no longer
   legal syntax in ANSI C."  "This parser processes each line of
   legal input the moment it sees the trailing linefeed."  Hackers
   often model their work as a sort of game played with the
   environment in which the objective is to maneuver through the
   thicket of `natural laws' to achieve a desired objective.  Their
   use of `legal' is flavored as much by this game-playing sense as
   by the more conventional one having to do with courts and lawyers.
   Compare  <A HREF="JARGO~28.HTM#TAG1009" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1009">language lawyer</A>,  <A HREF="JARGO~28.HTM#TAG1023" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1023">legalese</A>.  <P>
<A NAME=TAG1023><B>legalese</B></A> /n./ <P> Dense, pedantic verbiage in a language
   description, product specification, or interface standard; text
   that seems designed to obfuscate and requires a  <A HREF="JARGO~28.HTM#TAG1009" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1009">language lawyer</A> to  <A HREF="JARGO~34.HTM#TAG1332" tppabs="http://www.ccil.org/jargon/jargon_31.html#TAG1332">parse</A> it.  Though hackers are not afraid of high
   information density and complexity in language (indeed, they rather
   enjoy both), they share a deep and abiding loathing for legalese;
   they associate it with deception,  <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>s, and situations in
   which hackers generally get the short end of the stick.  <P>
<A NAME=TAG1024><B>LER</B></A> /L-E-R/ <P> /n./ [TMRC, from `Light-Emitting Diode'] A
   light-emitting resistor (that is, one in the process of burning
   up).  Ohm's law was broken.  See also  <A HREF="JARGO~46.HTM#TAG1574" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1574">SED</A>.  <P>
<A NAME=TAG1025><B>LERP</B></A> /lerp/ /vi.,n./ <P> Quasi-acronym for Linear
   Interpolation, used as a verb or noun for the
   operation. "Bresenham's algorithm lerps incrementally between the
   two endpoints of the line." <P>
<A NAME=TAG1026><B>let the smoke out</B></A> /v./ <P> To fry hardware (see  <A HREF="JARGO~22.HTM#TAG693" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG693">fried</A>).  See
    <A HREF="JARGO~30.HTM#TAG1095" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1095">magic smoke</A> for a discussion of the underlying mythology.  <P>
<A NAME=TAG1027><B>letterbomb</B></A> <P> 1. /n./ A piece of  <A HREF="JARGO~20.HTM#TAG549" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG549">email</A> containing  <A HREF="JARGO~28.HTM#TAG1053" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1053">live data</A> intended to do nefarious things to the recipient's machine or
   terminal.  It is possible, for example, to send letterbombs that
   will lock up some specific kinds of terminals when they are viewed,
   so thoroughly that the user must cycle power (see  <A HREF="JARGO~19.HTM#TAG408" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG408">cycle</A>, sense
   3) to unwedge them.  Under Unix, a letterbomb can also try to get
   part of its contents interpreted as a shell command to the mailer.
   The results of this could range from silly to tragic.  See also
    <A HREF="JARGO~38.HTM#TAG1840" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1840">Trojan horse</A>; compare  <A HREF="JARGO~29.HTM#TAG1218" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1218">nastygram</A>.  2. Loosely, a
    <A HREF="JARGO~30.HTM#TAG1097" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1097">mailbomb</A>.  <P>
<A NAME=TAG1028><B>lexer</B></A> /lek'sr/ /n./ <P> Common hacker shorthand for `lexical
   analyzer', the input-tokenizing stage in the parser for a language
   (the part that breaks it into word-like pieces).  "Some C lexers
   get confused by the old-style compound ops like <CODE>=-</CODE>."  <P>
<A NAME=TAG1029><B>lexiphage</B></A> /lek'si-fayj`/ /n./ <P> A notorious word  <A HREF="JARGO~19.HTM#TAG285" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG285">chomper</A>
   on ITS.  See  <A HREF="JARGO~18.HTM#TAG62" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG62">bagbiter</A>.  This program would draw on a selected
   victim's bitmapped terminal the words "THE BAG" in ornate
   letters, followed a pair of jaws biting pieces of it off.  <P>
<A NAME=TAG1030><B>life</B></A> /n./ <P> 1. A cellular-automata game invented by John Horton
   Conway and first introduced publicly by Martin Gardner
   ("Scientific American", October 1970); the game's popularity
   had to wait a few years for computers on which it could reasonably
   be played, as it's no fun to simulate the cells by hand.  Many
   hackers pass through a stage of fascination with it, and hackers at
   various places contributed heavily to the mathematical analysis of
   this game (most notably Bill Gosper at MIT, who even implemented
   life in  <A HREF="JARGO~38.HTM#TAG1760" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1760">TECO</A>!; see  <A HREF="JARGO~23.HTM#TAG785" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG785">Gosperism</A>).  When a hacker mentions
   `life', he is much more likely to mean this game than the
   magazine, the breakfast cereal, or the human state of existence.
   2. The opposite of  <A HREF="JARGO~35.HTM#TAG1882" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1882">Usenet</A>.  As in " <A HREF="JARGO~23.HTM#TAG746" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG746">Get a life!</A>"  <P>
<A NAME=TAG1031><B>Life is hard</B></A> /prov./ <P> [XEROX PARC] This phrase has two
   possible interpretations: (1) "While your suggestion may have some
   merit, I will behave as though I hadn't heard it."  (2) "While
   your suggestion has obvious merit, equally obvious circumstances
   prevent it from being seriously considered."  The charm of the
   phrase lies precisely in this subtle but important ambiguity.  <P>
<A NAME=TAG1032><B>light pipe</B></A> /n./ <P> Fiber optic cable.  Oppose  <A HREF="JARGO~19.HTM#TAG348" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG348">copper</A>.  <P>
<A NAME=TAG1033><B>lightweight</B></A> /adj./ <P> Opposite of  <A HREF="JARGO~26.HTM#TAG873" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG873">heavyweight</A>; usually
   found in combining forms such as `lightweight process'.  <P>
<A NAME=TAG1034><B>like kicking dead whales down the beach</B></A> /adj./ <P> Describes a
   slow, difficult, and disgusting process.  First popularized by a
   famous quote about the difficulty of getting work done under one of
   IBM's mainframe OSes.  "Well, you <EM>could</EM> write a C compiler
   in COBOL, but it would be like kicking dead whales down the
   beach."  See also  <A HREF="JARGO~22.HTM#TAG596" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG596">fear and loathing</A>.  <P>
<A NAME=TAG1035><B>like nailing jelly to a tree</B></A> /adj./ <P> Used to describe a task
   thought to be impossible, esp. one in which the difficulty arises
   from poor specification or inherent slipperiness in the problem
   domain.  "Trying to display the `prettiest' arrangement of
   nodes and arcs that diagrams a given graph is like nailing jelly to
   a tree, because nobody's sure what `prettiest' means
   algorithmically."<P>
   Hacker use of this term may recall mainstream slang
   originated early in the 20th century by President Theodore
   Roosevelt.  There is a legend that, weary of inconclusive talks
   with Colombia over the right to dig a canal through its
   then-province Panama, he remarked, "Negotiating with those pirates
   is like trying to nail currant jelly to the wall."  Roosevelt's
   government subsequently encouraged the anti-Colombian insurgency
   that created the nation of Panama. <P>
<A NAME=TAG1036><B>line 666</B></A> [from Christian eschatological myth] /n./ <P> The
   notional line of source at which a program fails for obscure
   reasons, implying either that <EM>somebody</EM> is out to get it
   (when you are the programmer), or that it richly deserves to be so
   gotten (when you are not).  "It works when I trace through it, but
   seems to crash on line 666 when I run it."  "What happens is that
   whenever a large batch comes through, mmdf dies on the Line of the
   Beast.  Probably some twit hardcoded a buffer size."<P>
<A NAME=TAG1037><B>line eater, the</B></A> /n. obs./ <P> [Usenet] 1. A bug in some
   now-obsolete versions of the netnews software that used to eat up
   to BUFSIZ bytes of the article text.  The bug was triggered by
   having the text of the article start with a space or tab.  This bug
   was quickly personified as a mythical creature called the `line
   eater', and postings often included a dummy line of `line eater
   food'.  Ironically, line eater `food' not beginning with a space
   or tab wasn't actually eaten, since the bug was avoided; but if
   there <EM>was</EM> a space or tab before it, then the line eater
   would eat the food <EM>and</EM> the beginning of the text it was
   supposed to be protecting.  The practice of `sacrificing to the
   line eater' continued for some time after the bug had been
    <A HREF="JARGO~29.HTM#TAG1205" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1205">nailed to the wall</A>, and is still humorously referred to.  The
   bug itself was still occasionally reported to be lurking in some
   mail-to-netnews gateways as late as 1991.  2. See  <A HREF="JARGO~29.HTM#TAG1271" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1271">NSA line eater</A>.  <P>
<A NAME=TAG1038><B>line noise</B></A> /n./ <P> 1. [techspeak] Spurious characters due to
   electrical noise in a communications link, especially an RS-232
   serial connection.  Line noise may be induced by poor connections,
   interference or crosstalk from other circuits, electrical storms,
    <A HREF="JARGO~19.HTM#TAG359" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG359">cosmic rays</A>, or (notionally) birds crapping on the phone
   wires.  2. Any chunk of data in a file or elsewhere that looks like
   the results of line noise in sense 1.  3. Text that is
   theoretically a readable text or program source but employs syntax
   so bizarre that it looks like line noise in senses 1 or 2.  Yes,
   there are languages this ugly.  The canonical example is  <A HREF="JARGO~38.HTM#TAG1760" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1760">TECO</A>;
   it is often claimed that "TECO's input syntax is indistinguishable
   from line noise."  Other non- <A HREF="JARGO~40.HTM#TAG2016" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG2016">WYSIWYG</A> editors, such as Multics
   <CODE>qed</CODE> and Unix <CODE>ed</CODE>, in the hands of a real hacker, also
   qualify easily, as do deliberately obfuscated languages such as
    <A HREF="JARGO~24.HTM#TAG945" tppabs="http://www.ccil.org/jargon/jargon_24.html#TAG945">INTERCAL</A>.  <P>
<A NAME=TAG1039><B>line starve</B></A> <P> [MIT] 1. /vi./ To feed paper through a printer
   the wrong way by one line (most printers can't do this).  On a
   display terminal, to move the cursor up to the previous line of the
   screen.  "To print `X squared', you just output `X', line starve,
   `2', line feed."  (The line starve causes the `2' to appear on the
   line above the `X', and the line feed gets back to the original
   line.)  2. /n./ A character (or character sequence) that causes a
   terminal to perform this action.  ASCII 0011010, also called SUB or
   control-Z, was one common line-starve character in the days before
   microcomputers and the X3.64 terminal standard.  Unlike `line
   feed', `line starve' is <EM>not</EM> standard  <A HREF="JARGO~17.HTM#TAG43" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG43">ASCII</A>
   terminology.  Even among hackers it is considered a bit silly.
   3. [proposed] A sequence such as \c (used in System V echo, as well
   as  <A HREF="JARGO~29.HTM#TAG1270" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1270">nroff</A> and  <A HREF="JARGO~38.HTM#TAG1837" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1837">troff</A>) that suppresses a  <A HREF="JARGO~29.HTM#TAG1247" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1247">newline</A> or
   other character(s) that would normally be emitted.  <P>
<A NAME=TAG1040><B>linearithmic</B></A> /adj./ <P> Of an algorithm, having running time that
   is @Math{O(N log N)}.  Coined as a portmanteau of `linear' and
   `logarithmic' in "Algorithms In C" by Robert Sedgewick
   (Addison-Wesley 1990, ISBN 0-201-51425-7).
<P>
<A NAME=TAG1041><B>link farm</B></A> /n./ <P> [Unix] A directory tree that contains many
   links to files in a master directory tree of files.  Link farms
   save space when one is maintaining several nearly identical copies
   of the same source tree -- for example, when the only difference
   is architecture-dependent object files.  "Let's freeze the source
   and then rebuild the FROBOZZ-3 and FROBOZZ-4 link farms."  Link
   farms may also be used to get around restrictions on the number of
   <CODE>-I</CODE> (include-file directory) arguments on older C
   preprocessors.  However, they can also get completely out of hand,
   becoming the filesystem equivalent of  <A HREF="JARGO~46.HTM#TAG1670" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1670">spaghetti code</A>.  <P>
<A NAME=TAG1042><B>link-dead</B></A> /adj./ <P> [MUD] Said of a  <A HREF="JARGO~30.HTM#TAG1184" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1184">MUD</A> character who has
   frozen in place because of a dropped Internet connection.
<P>
<A NAME=TAG1043><B>lint</B></A> <P> [from Unix's <CODE>lint(1)</CODE>, named for the bits of
   fluff it supposedly picks from programs] 1. /vt./ To examine a
   program closely for style, language usage, and portability
   problems, esp. if in C, esp. if via use of automated analysis
   tools, most esp. if the Unix utility <CODE>lint(1)</CODE> is used.
   This term used to be restricted to use of <CODE>lint(1)</CODE> itself,
   but (judging by references on Usenet) it has become a shorthand for
    <A HREF="JARGO~21.HTM#TAG460" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG460">desk check</A> at some non-Unix shops, even in languages other
   than C.  Also as /v./  <A HREF="JARGO~21.HTM#TAG448" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG448">delint</A>.  2. /n./ Excess verbiage in a
   document, as in "This draft has too much lint".  <P>
<A NAME=TAG1044><B>Linux</B></A> /lee'nuhks/ or /li'nuks/, <EM>not</EM> /li:'nuhks/
   /n./ <P> The free Unix workalike created by Linus Torvalds and
   friends starting about 1990 (the pronunciation /lee'nuhks/ is
   preferred because the name `Linus' has an /ee/ sound in Swedish).
   This may be the most remarkable hacker project in history -- an
   entire clone of Unix for 386, 486 and Pentium micros, distributed
   for free with sources over the net (ports to Alpha and Sparc-based
   machines are underway).  This is what  <A HREF="JARGO~23.HTM#TAG765" tppabs="http://www.ccil.org/jargon/jargon_22.html#TAG765">GNU</A> aimed to be, but the
   Free Software Foundation has not (as of early 1996) produced the
   kernel to go with its Unix toolset (which Linux uses).  Other,
   similar efforts like FreeBSD and NetBSD have been much less
   successful.  The secret of Linux's success seems to be that Linus
   worked much harder early on to keep the development process open
   and recruit other hackers, creating a snowball effect. <P>
<A NAME=TAG1045><B>lion food</B></A> /n./ <P> [IBM] Middle management or HQ staff (or, by
   extension, administrative drones in general).  From an old joke
   about two lions who, escaping from the zoo, split up to increase
   their chances but agree to meet after 2 months.  When they finally
   meet, one is skinny and the other overweight.  The thin one says:
   "How did you manage?  I ate a human just once and they turned out
   a small army to chase me -- guns, nets, it was terrible.  Since
   then I've been reduced to eating mice, insects, even grass."  The
   fat one replies: "Well, <EM>I</EM> hid near an IBM office and ate a
   manager a day.  And nobody even noticed!" <P>
<A NAME=TAG1046><B>Lions Book</B></A> /n./ <P> "Source Code and Commentary on Unix
   level 6", by John Lions.  The two parts of this book contained (1)
   the entire source listing of the Unix Version 6 kernel, and (2) a
   commentary on the source discussing the algorithms.  These were
   circulated internally at the University of New South Wales
   beginning 1976--77, and were, for years after, the <EM>only</EM>
   detailed kernel documentation available to anyone outside Bell
   Labs.  Because Western Electric wished to maintain trade secret
   status on the kernel, the Lions Book was only supposed to be
   distributed to affiliates of source licensees.  In spite of this,
   it soon spread by <I>samizdat</I> to a good many of the early Unix
   hackers.  <P>
   [1996 update: The Lions book lives again! It will finally see legal
   public print as ISBN 1-57398-013-7 from Peer-To-Peer
   Communications, with a forward by Dennis Ritchie.] <P>
<A NAME=TAG1047><B>LISP</B></A> /n./ <P> [from `LISt Processing language', but mythically
   from `Lots of Irritating Superfluous Parentheses'] AI's mother
   tongue, a language based on the ideas of (a) variable-length lists
   and trees as fundamental data types, and (b) the interpretation of
   code as data and vice-versa.  Invented by John McCarthy at MIT in
   the late 1950s, it is actually older than any other  <A HREF="JARGO~26.HTM#TAG891" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG891">HLL</A> still
   in use except FORTRAN.  Accordingly, it has undergone considerable
   adaptive radiation over the years; modern variants are quite
   different in detail from the original LISP 1.5.  The dominant HLL
   among hackers until the early 1980s, LISP now shares the throne
   with  <A HREF="JARGO~19.HTM#TAG242" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG242">C</A>.  See  <A HREF="JARGO~28.HTM#TAG1010" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1010">languages of choice</A>.  <P>
   All LISP functions and programs are expressions that return
   values; this, together with the high memory utilization of LISPs,
   gave rise to Alan Perlis's famous quip (itself a take on an Oscar
   Wilde quote) that "LISP programmers know the value of everything
   and the cost of nothing".  <P>
   One significant application for LISP has been as a proof by example
   that most newer languages, such as  <A HREF="JARGO~19.HTM#TAG303" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG303">COBOL</A> and  <A HREF="JARGO~17.HTM#TAG8" tppabs="http://www.ccil.org/jargon/jargon_16.html#TAG8">Ada</A>, are full
   of unnecessary  <A HREF="JARGO~19.HTM#TAG387" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG387">crock</A>s.  When the  <A HREF="JARGO~33.HTM#TAG1507" tppabs="http://www.ccil.org/jargon/jargon_33.html#TAG1507">Right Thing</A> has already
   been done once, there is no justification for  <A HREF="JARGO~18.HTM#TAG170" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG170">bogosity</A> in newer
   languages.  <P>
<A NAME=TAG1048><B>list-bomb</B></A> /v./ <P> To  <A HREF="JARGO~30.HTM#TAG1097" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1097">mailbomb</A> someone by forging
   messages causing the victim to become a subscriber to many mailing
   lists.  This is a self-defeating tactic; it merely forces mailing
   list servers to require confirmation by return message for every
   subscription. <P>
<A NAME=TAG1049><B>literature, the</B></A> /n./ <P> Computer-science journals and other
   publications, vaguely gestured at to answer a question that the
   speaker believes is  <A HREF="JARGO~38.HTM#TAG1836" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1836">trivial</A>.  Thus, one might answer an
   annoying question by saying "It's in the literature."  Oppose
    <A HREF="JARGO~27.HTM#TAG1004" tppabs="http://www.ccil.org/jargon/jargon_26.html#TAG1004">Knuth</A>, which has no connotation of triviality.  <P>
<A NAME=TAG1050><B>lithium lick</B></A> /n./ <P> [NeXT] Steve Jobs.  Employees who have
   gotten too much attention from their esteemed founder are said to
   have `lithium lick' when they begin to show signs of Jobsian fervor
   and repeat the most recent catch phrases in normal conversation ---
   for example, "It just works, right out of the box!" <P>
<A NAME=TAG1051><B>little-endian</B></A> /adj./ <P> Describes a computer architecture in
   which, within a given 16- or 32-bit word, bytes at lower addresses
   have lower significance (the word is stored `little-end-first').
   The PDP-11 and VAX families of computers and Intel microprocessors
   and a lot of communications and networking hardware are
   little-endian.  See  <A HREF="JARGO~18.HTM#TAG110" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG110">big-endian</A>,  <A HREF="JARGO~30.HTM#TAG1148" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1148">middle-endian</A>,  <A HREF="JARGO~29.HTM#TAG1277" tppabs="http://www.ccil.org/jargon/jargon_29.html#TAG1277">NUXI problem</A>.  The term is sometimes used to describe the ordering of
   units other than bytes; most often, bits within a byte.  <P>
<A NAME=TAG1052><B>live</B></A> /li:v/ /adj.,adv./ <P> Opposite of `test'.  Refers to
   actual real-world data or a program working with it.  For example,
   the response to "I think the record deleter is finished" might
   be "Is it live yet?" or "Have you tried it out on live data?"
   This usage usually carries the connotation that live data is more
   fragile and must not be corrupted, or bad things will happen.  So a
   more appropriate response might be: "Well, make sure it works
   perfectly before we throw live data at it."  The implication here
   is that record deletion is something pretty significant, and a
   haywire record-deleter running amok live would probably cause great
   harm. <P>
<A NAME=TAG1053><B>live data</B></A> /n./ <P> 1. Data that is written to be interpreted and
   takes over program flow when triggered by some un-obvious
   operation, such as viewing it.  One use of such hacks is to break
   security.  For example, some smart terminals have commands that
   allow one to download strings to program keys; this can be used to
   write live data that, when listed to the terminal, infects it with
   a security-breaking  <A HREF="JARGO~36.HTM#TAG1916" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1916">virus</A> that is triggered the next time a
   hapless user strikes that key.  For another, there are some
   well-known bugs in  <A HREF="JARGO~36.HTM#TAG1909" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1909">vi</A> that allow certain texts to send
   arbitrary commands back to the machine when they are simply viewed.
   2. In C code, data that includes pointers to function  <A HREF="JARGO~26.HTM#TAG901" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG901">hook</A>s
   (executable code).  3. An object, such as a  <A HREF="JARGO~38.HTM#TAG1828" tppabs="http://www.ccil.org/jargon/jargon_35.html#TAG1828">trampoline</A>, that
   is constructed on the fly by a program and intended to be executed
   as code.   <P>
<A NAME=TAG1054><B>Live Free Or Die!</B></A> /imp./ <P> 1. The state motto of New Hampshire,
   which appears on that state's automobile license plates.  2. A
   slogan associated with Unix in the romantic days when Unix
   aficionados saw themselves as a tiny, beleaguered underground
   tilting against the windmills of industry.  The "free" referred
   specifically to freedom from the  <A HREF="JARGO~22.HTM#TAG592" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG592">fascist</A> design philosophies
   and crufty misfeatures common on commercial operating systems.
   Armando Stettner, one of the early Unix developers, used to give
   out fake license plates bearing this motto under a large Unix, all
   in New Hampshire colors of green and white.  These are now valued
   collector's items.  Recently (1994) an inferior imitation of these
   has been put in circulation with a red corporate logo added.  <P>
<A NAME=TAG1055><B>livelock</B></A> /li:v'lok/ /n./ <P> A situation in which some critical
   stage of a task is unable to finish because its clients perpetually
   create more work for it to do after they have been serviced but
   before it can clear its queue.  Differs from  <A HREF="JARGO~21.HTM#TAG430" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG430">deadlock</A> in that
   the process is not blocked or waiting for anything, but has a
   virtually infinite amount of work to do and can never catch up.  <P>
<A NAME=TAG1056><B>liveware</B></A> /li:v'weir/ /n./ <P> 1. Synonym for  <A HREF="JARGO~40.HTM#TAG1960" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1960">wetware</A>.
   Less common.  2. [Cambridge] Vermin. "Waiter, there's some
   liveware in my salad..." <P>
<A NAME=TAG1057><B>lobotomy</B></A> /n./ <P> 1. What a hacker subjected to formal management
   training is said to have undergone.  At IBM and elsewhere this term
   is used by both hackers and low-level management; the latter
   doubtless intend it as a joke.  2. The act of removing the
   processor from a microcomputer in order to replace or upgrade it.
   Some very cheap  <A HREF="JARGO~19.HTM#TAG299" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG299">clone</A> systems are sold in `lobotomized' form
   -- everything but the brain.  <P>
<A NAME=TAG1058><B>locals, the</B></A> /pl.n./ <P> The users on one's local network (as
   opposed, say, to people one reaches via public Internet or UUCP
   connects).  The marked thing about this usage is how little it has
   to do with real-space distance. "I have to do some tweaking on
   this mail utility before releasing it to the locals." <P>
<A NAME=TAG1059><B>locked and loaded</B></A> /adj./ <P> [from military slang for an M-16
   rifle with magazine inserted and prepared for firing] Said of a
   removable disk volume properly prepared for use -- that is, locked
   into the drive and with the heads loaded.  Ironically, because
   their heads are `loaded' whenever the power is up, this
   description is never used of  <A HREF="JARGO~40.HTM#TAG1979" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1979">Winchester</A> drives (which are
   named after a rifle).  <P>
<A NAME=TAG1060><B>locked up</B></A> /adj./ <P> Syn. for  <A HREF="JARGO~26.HTM#TAG912" tppabs="http://www.ccil.org/jargon/jargon_23.html#TAG912">hung</A>,  <A HREF="JARGO~40.HTM#TAG1951" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1951">wedged</A>.  <P>
<A NAME=TAG1061><B>logic bomb</B></A> /n./ <P> Code surreptitiously inserted into an
   application or OS that causes it to perform some destructive or
   security-compromising activity whenever specified conditions are
   met.  Compare  <A HREF="JARGO~18.HTM#TAG52" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG52">back door</A>.  <P>
<A NAME=TAG1062><B>logical</B></A> /adj./ <P> [from the technical term `logical device',
   wherein a physical device is referred to by an arbitrary
   `logical' name] Having the role of.  If a person (say, Les
   Earnest at SAIL) who had long held a certain post left and were
   replaced, the replacement would for a while be known as the
   `logical' Les Earnest.  (This does not imply any judgment on the
   replacement.)  Compare  <A HREF="JARGO~36.HTM#TAG1912" tppabs="http://www.ccil.org/jargon/jargon_37.html#TAG1912">virtual</A>.
<P>
   At Stanford, `logical' compass directions denote a coordinate
   system in which `logical north' is toward San Francisco,
   `logical west' is toward the ocean, etc., even though logical
   north varies between physical (true) north near San Francisco and
   physical west near San Jose.  (The best rule of thumb here is that,
   by definition, El Camino Real always runs logical north-and-south.)
   In giving directions, one might say: "To get to Rincon Tarasco
   restaurant, get onto  <A HREF="JARGO~20.HTM#TAG540" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG540">El Camino Bignum</A> going logical north."
   Using the word `logical' helps to prevent the recipient from
   worrying about that the fact that the sun is setting almost
   directly in front of him.  The concept is reinforced by North
   American highways which are almost, but not quite, consistently
   labeled with logical rather than physical directions.  A similar
   situation exists at MIT: Route 128 (famous for the electronics
   industry that has grown up along it) is a 3-quarters circle
   surrounding Boston at a radius of 10 miles, terminating near the
   coastline at each end.  It would be most precise to describe the
   two directions along this highway as `clockwise' and
   `counterclockwise', but the road signs all say "north" and
   "south", respectively.  A hacker might describe these directions
   as `logical north' and `logical south', to indicate that they
   are conventional directions not corresponding to the usual
   denotation for those words.  (If you went logical south along the
   entire length of route 128, you would start out going northwest,
   curve around to the south, and finish headed due east, passing
   along one infamous stretch of pavement that is simultaneously route
   128 south and Interstate 93 north, and is signed as such!) <P>
<A NAME=TAG1063><B>loop through</B></A> /vt./ <P> To process each element of a list of
   things.  "Hold on, I've got to loop through my paper mail."
   Derives from the computer-language notion of an iterative loop;
   compare `cdr down' (under  <A HREF="JARGO~19.HTM#TAG262" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG262">cdr</A>), which is less common among C
   and Unix programmers.  ITS hackers used to say `IRP over' after
   an obscure pseudo-op in the MIDAS PDP-10 assembler (the same IRP op
   can nowadays be found in Microsoft's assembler).  <P>
<A NAME=TAG1064><B>loose bytes</B></A> /n./ <P> Commonwealth hackish term for the padding
   bytes or  <A HREF="JARGO~46.HTM#TAG1597" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1597">shim</A>s many compilers insert between members of a
   record or structure to cope with alignment requirements imposed by
   the machine architecture.  <P>
<A NAME=TAG1065><B>lord high fixer</B></A> /n./ <P> [primarily British, from Gilbert &#38;
   Sullivan's `lord high executioner'] The person in an organization
   who knows the most about some aspect of a system.  See  <A HREF="JARGO~40.HTM#TAG1994" tppabs="http://www.ccil.org/jargon/jargon_38.html#TAG1994">wizard</A>.  <P>
<A NAME=TAG1066><B>lose</B></A> [MIT] /vi./ <P> 1. To fail.  A program loses when it
   encounters an exceptional condition or fails to work in the
   expected manner.  2. To be exceptionally unesthetic or crocky.
   3. Of people, to be obnoxious or unusually stupid (as opposed to
   ignorant).  See also  <A HREF="JARGO~21.HTM#TAG459" tppabs="http://www.ccil.org/jargon/jargon_19.html#TAG459">deserves to lose</A>.  4. /n./ Refers to
   something that is  <A HREF="JARGO~28.HTM#TAG1069" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1069">losing</A>, especially in the phrases "That's a
   lose!" and "What a lose!" <P>
<A NAME=TAG1067><B>lose lose</B></A> /interj./ <P> A reply to or comment on an undesirable
   situation.  "I accidentally deleted all my files!"  "Lose,
   lose." <P>
<A NAME=TAG1068><B>loser</B></A> /n./ <P> An unexpectedly bad situation, program,
   programmer, or person.  Someone who habitually loses.  (Even
   winners can lose occasionally.)  Someone who knows not and knows
   not that he knows not.  Emphatic forms are `real loser', `total
   loser', and `complete loser' (but not **`moby loser', which
   would be a contradiction in terms).  See  <A HREF="JARGO~28.HTM#TAG1080" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1080">luser</A>.  <P>
<A NAME=TAG1069><B>losing</B></A> /adj./ <P> Said of anything that is or causes a  <A HREF="JARGO~28.HTM#TAG1066" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1066">lose</A>
   or  <A HREF="JARGO~28.HTM#TAG1071" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1071">lossage</A>.  <P>
<A NAME=TAG1070><B>loss</B></A> /n./ <P> Something (not a person) that loses; a situation in
   which something is losing.  Emphatic forms include `moby loss',
   and `total loss', `complete loss'.  Common interjections are
   "What a loss!"  and "What a moby loss!"  Note that `moby
   loss' is OK even though **`moby loser' is not used; applied to an
   abstract noun, moby is simply a magnifier, whereas when applied to
   a person it implies substance and has positive connotations.
   Compare  <A HREF="JARGO~28.HTM#TAG1071" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1071">lossage</A>.  <P>
<A NAME=TAG1071><B>lossage</B></A> /los'*j/ /n./ <P> The result of a bug or malfunction.
   This is a mass or collective noun.  "What a loss!" and "What
   lossage!" are nearly synonymous.  The former is slightly more
   particular to the speaker's present circumstances; the latter
   implies a continuing  <A HREF="JARGO~28.HTM#TAG1066" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1066">lose</A> of which the speaker is currently a
   victim.  Thus (for example) a temporary hardware failure is a loss,
   but bugs in an important tool (like a compiler) are serious
   lossage.  <P>
<A NAME=TAG1072><B>lost in the noise</B></A> /adj./ <P> Syn.  <A HREF="JARGO~28.HTM#TAG1073" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1073">lost in the underflow</A>.
   This term is from signal processing, where signals of very small
   amplitude cannot be separated from low-intensity noise in the
   system.  Though popular among hackers, it is not confined to
   hackerdom; physicists, engineers, astronomers, and statisticians
   all use it.  <P>
<A NAME=TAG1073><B>lost in the underflow</B></A> /adj./ <P> Too small to be worth
   considering; more specifically, small beyond the limits of accuracy
   or measurement.  This is a reference to `floating underflow', a
   condition that can occur when a floating-point arithmetic processor
   tries to handle quantities smaller than its limit of magnitude.  It
   is also a pun on `undertow' (a kind of fast, cold current that
   sometimes runs just offshore and can be dangerous to swimmers).
   "Well, sure, photon pressure from the stadium lights alters the
   path of a thrown baseball, but that effect gets lost in the
   underflow."  Compare  <A HREF="JARGO~20.HTM#TAG560" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG560">epsilon</A>,  <A HREF="JARGO~20.HTM#TAG561" tppabs="http://www.ccil.org/jargon/jargon_20.html#TAG561">epsilon squared</A>; see also
    <A HREF="JARGO~32.HTM#TAG1314" tppabs="http://www.ccil.org/jargon/jargon_30.html#TAG1314">overflow bit</A>.  <P>
<A NAME=TAG1074><B>lots of MIPS but no I/O</B></A> /adj./ <P> Used to describe a person who
   is technically brilliant but can't seem to communicate with human
   beings effectively.  Technically it describes a machine that has
   lots of processing power but is bottlenecked on input-output (in
   1991, the IBM Rios, a.k.a. RS/6000, is a notorious recent example).  <P>
<A NAME=TAG1075><B>low-bandwidth</B></A> /adj./ <P> [from communication theory] Used to
   indicate a talk that, although not  <A HREF="JARGO~19.HTM#TAG334" tppabs="http://www.ccil.org/jargon/jargon_18.html#TAG334">content-free</A>, was not
   terribly informative.  "That was a low-bandwidth talk, but what
   can you expect for an audience of  <A HREF="JARGO~46.HTM#TAG1716" tppabs="http://www.ccil.org/jargon/jargon_34.html#TAG1716">suit</A>s!"  Compare
    <A HREF="JARGO~41.HTM#TAG2044" tppabs="http://www.ccil.org/jargon/jargon_41.html#TAG2044">zero-content</A>,  <A HREF="JARGO~18.HTM#TAG68" tppabs="http://www.ccil.org/jargon/jargon_17.html#TAG68">bandwidth</A>,  <A HREF="JARGO~30.HTM#TAG1115" tppabs="http://www.ccil.org/jargon/jargon_28.html#TAG1115">math-out</A>.  <P>
<A NAME=TAG1076><B>LPT</B></A> /L-P-T/ or /lip'it/ or /lip-it'/ /n./ <P> Line printer,
   of course.  Rare under Unix, more common among hackers who grew up
   with ITS, MS-DOS, CP/M and other operating systems that were
   strongly influenced by early DEC conventions.  <P>
<A NAME=TAG1077><B>Lubarsky's Law of Cybernetic Entomology</B></A> /prov./ <P> "There is
   <EM>always</EM> one more bug."
<P>
<A NAME=TAG1078><B>lunatic fringe</B></A> /n./ <P> [IBM] Customers who can be relied upon to
   accept release 1 versions of software.  <P>
<A NAME=TAG1079><B>lurker</B></A> /n./ <P> One of the `silent majority' in a electronic
   forum; one who posts occasionally or not at all but is known to
   read the group's postings regularly.  This term is not pejorative
   and indeed is casually used reflexively: "Oh, I'm just lurking."
   Often used in `the lurkers', the hypothetical audience for the
   group's  <A HREF="JARGO~22.HTM#TAG641" tppabs="http://www.ccil.org/jargon/jargon_21.html#TAG641">flamage</A>-emitting regulars.  When a lurker speaks up
   for the first time, this is called `delurking'.  <P>
<A NAME=TAG1080><B>luser</B></A> /loo'zr/ /n./ <P> A  <A HREF="JARGO~35.HTM#TAG1883" tppabs="http://www.ccil.org/jargon/jargon_36.html#TAG1883">user</A>; esp. one who is also a
    <A HREF="JARGO~28.HTM#TAG1068" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1068">loser</A>.  ( <A HREF="JARGO~28.HTM#TAG1080" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1080">luser</A> and  <A HREF="JARGO~28.HTM#TAG1068" tppabs="http://www.ccil.org/jargon/jargon_27.html#TAG1068">loser</A> are pronounced
   identically.)  This word was coined around 1975 at MIT.  Under
   ITS, when you first walked up to a terminal at MIT and typed
   Control-Z to get the computer's attention, it printed out some
   status information, including how many people were already using
   the computer; it might print "14 users", for example.  Someone
   thought it would be a great joke to patch the system to print "14
   losers" instead.  There ensued a great controversy, as some of the
   users didn't particularly want to be called losers to their faces
   every time they used the computer.  For a while several hackers
   struggled covertly, each changing the message behind the back of
   the others; any time you logged into the computer it was even money
   whether it would say "users" or "losers".  Finally, someone
   tried the compromise "lusers", and it stuck.  Later one of the
   ITS machines supported <CODE>luser</CODE> as a request-for-help command.
   ITS died the death in mid-1990, except as a museum piece; the usage
   lives on, however, and the term `luser' is often seen in program
   comments.  <P>
<P>Go to the <A HREF="JARGO~27.HTM" tppabs="http://www.ccil.org/jargon/jargon_26.html">previous</A>, <A HREF="JARGO~30.HTM" tppabs="http://www.ccil.org/jargon/jargon_28.html">next</A> section.<P>
</BODY>
</HTML>
